cert
lynavWLfIcFb

putty
QzbY9ruEHg9X1lOE

// Setup instructions:

//create new user and set some permissions

adduser dekker
usermod -aG sudo dekker

sudo su - dekker
mkdir ~/.ssh
chmod 700 ~/.ssh
nano ~/.ssh/authorized_keys

//Paste:
ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAlXxtLvnR7o6HKNDIcGYSWCJTdbDMXUA2FUvinS5OJHtBVt2xt+ujdICnMRe1odDVIGe++IpiwugtFU3RxZo4NTfrl9d7Vt6wVVnE5Ntwb4BodHLCTusjoiWHrTxDwmv6Wsx+GKcSCvcL01fn2s2SWClH9gl6o//CG0M4blahUPPHxO002joZwwZWWj49S7K0t95/d0Dhyx71BGMqI8unENp9Lri2pOGVKqrKpliFahm5xmOMcmFVqc3dvHkxFfNKBObUhpsbQzs8uxMxPQXR7ztBm8LBtSyOvWO7swSoBZZ8MjIlVI338J6F5I1Q6ElTHB9bUWYtTcqPOLtsZaLHpw== rsa-key-20190606

//save and exit (ctrl x y enter)

chmod 600 ~/.ssh/authorized_keys

//ssh in as dekker
sudo nano /etc/ssh/sshd_config

//use ctrl w to search and set:
//PermitRootLogin no
//PasswordAuthentication

//save and exit (ctrl x y enter)

sudo systemctl reload sshd

//check to verify can't ssh into root

sudo ufw allow OpenSSH
sudo ufw allow http
sudo ufw allow https
sudo ufw enable

sudo apt-get install git
curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get update
sudo apt-get install nodejs

mkdir apps
cd apps/

git clone https://github.com/dekkerglen/CubeManagementApp.git cubecobra.com
npm install
sudo npm install -g nodemon
sudo npm install -g pm2
sudo pm2 start app.js
pm2 startup systemd
sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u dekker --hp /home/dekker

//install mongodb
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo service mongod start


sudo apt-get install bc
sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
cd /opt/letsencrypt/
./letsencrypt-auto certonly --standalone

//cert and full chain should be:
  /etc/letsencrypt/live/cubecobra.com/fullchain.pem
//key file should be:
  /etc/letsencrypt/live/cubecobra.com/privkey.pem

sudo crontab -e
2
//append:
00 1 * * 1 /opt/letsencrypt/letsencrypt-auto renew >> /var/log/letsencrypt-renewal.log
30 1 * * 1 /bin/systemctl reload nginx

//save and exit (ctrl x y enter)

sudo apt-get install nginx
sudo nano /etc/nginx/sites-enabled/default
//hold ctrl + k to empty file
//copy paste the following:

# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

//end copy paste
//save and exit (ctrl x y enter)

sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
sudo nano /etc/nginx/snippets/ssl-params.conf

//copy paste the following:

# See https://cipherli.st/ for details on this configuration
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off; # Requires nginx >= 1.5.9
ssl_stapling on; # Requires nginx >= 1.3.7
ssl_stapling_verify on; # Requires nginx => 1.3.7
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

# Add our strong Diffie-Hellman group
ssl_dhparam /etc/ssl/certs/dhparam.pem;

//end copy paste
//save and exit (ctrl x y enter)

sudo nano /etc/nginx/sites-enabled/default

//append the following

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cubecobra.com;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/cubecobra.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cubecobra.com/privkey.pem;

    # Include the SSL configuration from cipherli.st
    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:5000/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}

//end copy paste
//save and exit (ctrl x y enter)

sudo nginx -t
sudo systemctl start nginx
