extends ../layout

block content
  include ../flash
  br
  h4 Filter Syntax Guide
  br
  dl.row
    .accordion#syntax-accordion
      .card
        #general-syntax.card-header(data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne")
          button(class="btn btn-link" type="button" )
            h5 General
        #collapseOne.collapse.show(aria-labelledby="general-syntax" data-parent="#syntax-accordion")
          p You can combine any number of filters together, using AND, or OR.
          p #[code t:instant or t:sorcery] cards that are either #[code instants] or #[code sorceries].
          p #[code t:instant t:tribal] cards that are both #[code instants] and #[code tribal].
          p You can also use quotes to ignore spaces.
          p #[code goblin blood] cards whose names contain both #[code blood] and #[code goblin].
          p #[code "goblin blood"] cards whose names contain #[code goblin blood].
          p #[code o:destroy o:target o:creature] cards whose oracle text contains #[code destroy] and #[code target] and #[code creature].
          p #[code o:"destroy target creature"] cards whose oracle text contains #[code destroy target creature].
          p You can also use parentheses.
          p #[code t:instant OR (t:creature o:flash)] cards which are instants, or cards which are creatures with flash.
          p #[code (t:artifact t:creature) OR (t:instant OR t:sorcery)] cards which are instants or sorceries, or cards which are artifact creatures.
          p You can put - before anything to negate it.
          p #[strong Examples:]
          table.table
            tr
              td(scope="col") #[code -c:w] 
              td(scope="col") Cards that are not white
            tr
              td(scope="col") #[code -o:draw] 
              td(scope="col") Cards which do not have draw in their oracle text
            tr
              td(scope="col") #[code -bob] 
              td(scope="col") Cards which do not have bob in their names

      .card
        #color-syntax.card-header(data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo")
          button(class="btn btn-link" type="button" )
            h5 Color and Color Identity
        #collapseTwo.collapse(aria-labelledby="color-syntax" data-parent="#syntax-accordion")
          p You can find cards that are a certain color by using #[code c:] or #[code color:], and cards with a certain color identity by using #[code ci:], #[code id:] or #[code identity:].
          p Operators supported: #[code :], #[code =], #[code <], #[code >], #[code <=], #[code >=].
          p In addition to #[code w], #[code u], #[code b], #[code r], #[code g] and #[code c], you can use color words like #[code white], #[code blue], #[code green], etc.
          p You can also use all shard, wedge, or guild names, like #[code azorius], #[code bant], #[code dimir], etc.
          p Color Identity searches will respect any color identity overrides you have set.
          p 
            b Examples:
          table.table
            tr
              td(scope="col") #[code c:wubrg] 
              td(scope="col") Cards that are all 5 colors
            tr
              td(scope="col") #[code c < wub] 
              td(scope="col") Cards that are #[code wu], #[code ub], #[code bw], #[code w], #[code u], or #[code b]
            tr
              td(scope="col") #[code ci:wu] 
              td(scope="col") Only #[code uw] color identity cards
            tr
              td(scope="col") #[code ci>wu] 
              td(scope="col") 3+ color cards that contain #[code uw]
      .card
        #card-type-syntax.card-header(data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree")
          button(class="btn btn-link" type="button" )
            h5 Card Types
        #collapseThree.collapse(aria-labelledby="card-type-syntax" data-parent="#syntax-accordion")
          p You can search for card types with #[code t:] or #[code type:].
          p Operators supported: #[code :], #[code =].
          p Search for any part of the typeline, i.e. #[code legendary], or #[code human].
          p Partial types are allowed.
          p #[strong Examples:]
          table.table
            tr
              td(scope="col") #[code t:legendary] 
              td(scope="col") Cards that are legendary.
            tr
              td(scope="col") #[code t:legendary t:creature] 
              td(scope="col") Cards that are legendary creatures.
            tr
              td(scope="col") #[code t:sha] 
              td(scope="col") Cards that are shamans, or shapeshifters, spellshapers.
      .card
        #card-text-syntax.card-header(data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour")
          button(class="btn btn-link" type="button" )
            h5 Card Text
        #collapseFour.collapse(aria-labelledby="card-text-syntax" data-parent="#syntax-accordion")
          p You can use #[code o:] or #[code oracle:] to search oracle text.
          p Operators Supported: #[code :], #[code =].
          p This searches the full oracle text, including reminder text.
          p #[strong Examples:]
          table.table
            tr
              td(scope="col") #[code o:"draw a card"] 
              td(scope="col") Cards with oracle text draw a card.
            tr
              td(scope="col") #[code o:"token with Sacrifice"] 
              td(scope="col") Cards with oracle text #[code token with  Sacrifice].
      .card
        #mana-cost-syntax.card-header(data-toggle="collapse" data-target="#collapseFive" aria-expanded="true" aria-controls="collapseFive")
          button(class="btn btn-link" type="button" )
            h5 Mana Costs
        #collapseFive.collapse(aria-labelledby="mana-cost-syntax" data-parent="#syntax-accordion")
          p You can use #[code m:] or #[code mana:] to search for cards with specific mana costs.
          p Operators Supported: #[code :], #[code =].
          p You can use plain numbers and letters for the 5 basic colors, snow, colorless, and x, y, and z costs.
          p For hybrid costs, you can use #[code {}] i.e. #[code {2/G}], #[code {R/G}], etc.
          p For phyrexian mana, use #[code {W/P}].
          p You can also surround mana costs with #[code {}] if you prefer, i.e. #[code {2}{G}{g}] instead of #[code 2GG]. Either way is fine.
          p #[strong Examples:]
          table.table
            tr
              td(scope="col") #[code m:{r/g}{r/g}] 
              td(scope="col") Cards that cost two hybrid red/green mana, i.e. Burning Tree Emissary.
            tr
              td(scope="col") #[code m:2ww] 
              td(scope="col") Cards that cost 2 generic mana, and 2 white mana.
      .card
        #cmc-syntax.card-header(data-toggle="collapse" data-target="#collapseSix" aria-expanded="true" aria-controls="collapseSix")
          button(class="btn btn-link" type="button" )
            h5 Converted Mana Cost
        #collapseSix.collapse(aria-labelledby="cmc-syntax" data-parent="#syntax-accordion")
          p You can use #[code cmc:] to search for specific converted mana costs.
          p Operators supported: #[code :], #[code =], #[code <], #[code >], #[code <=], #[code >=].
          p #[strong Examples:]
          table.table
            tr
              td(scope="col")  #[code cmc>5] 
              td(scope="col") Cards with converted mana cost greater than 5.
            tr  
              td(scope="col") #[code cmc=3] 
              td(scope="col") Cards with converted mana cost of exactly 3.
      .card
        #power-toughness-syntax.card-header(data-toggle="collapse" data-target="#collapseSeven" aria-expanded="true" aria-controls="collapseSeven")
          button(class="btn btn-link" type="button" )
            h5 Power and Toughness
        #collapseSeven.collapse(aria-labelledby="power-toughness-syntax" data-parent="#syntax-accordion")
          p You can use #[code pow:] or #[code power:] to search for cards with certain powers.
          p You can use #[code tou:] or #[code toughness:] to search for cards with certain toughness.
          p Operators supported: #[code :], #[code =], #[code <], #[code >], #[code <=], #[code >=].
          p #[strong Examples:]
          table.table
            tr
              td(scope="col") #[code pow>7] 
              td(scope="col") Cards with greater than 7 power.
            tr
              td(scope="col") #[code pow<5 tou<5] 
              td(scope="col") Cards with both less than 5 power, and less than 5 toughness.