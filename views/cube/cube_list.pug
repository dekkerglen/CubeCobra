extends cube_layout

block cube_toolbar
  link(rel='stylesheet' href='/css/tags.css')
  link(rel='stylesheet' href='/css/editcube.css')
  link(rel='stylesheet' href='/css/texteditor.css')

  input#cubeID(type='hidden', name='cubeID', value=cube_id)
  input#cuberaw(type='hidden', name='cuberaw', value=cube_raw)
  input#canEdit(type='hidden', name='canEdit', value=user && user.id == cube.owner ? 'true' : 'false')
  input#cubeTagColors(type='hidden', value=JSON.stringify(cube.tag_colors))
  input#showTagColors(type='hidden', value=(!user || !user.hide_tag_colors).toString())
  if user && user.id == cube.owner
    input#edittoken(type='hidden', name='edittoken', value='edit')
  if cube.default_sorts
    input#sort1(type='hidden', value=cube.default_sorts[0])
    input#sort2(type='hidden', value=cube.default_sorts[1])

  include ../dynamic_flash


block cube_content
  #react-root

  // Paste bulk Modal
  #pasteBulkModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='pasteBulkModalTitle', aria-hidden='true')
    .modal-dialog.modal-dialog-scrollable(role='document')
      .modal-content
        form(method='POST', action='/cube/bulkupload/'+cube_id)
          input(type='hidden', name='_csrf', value=csrfToken)
          .modal-header
            h5#pasteBulkModalTitle.modal-title Bulk Upload - Paste Text
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Acceptable plain text with one card name per line.
            textarea.form-control(maxlength='20000',rows='10', style='height:100%;', placeholder="Paste Cube Here (max length 20000)", name='body')
          .modal-footer
            #bulkspinner.collapse.spinner-border.text-success(role='status')
              span.sr-only Loading...
            button.btn.btn-success(type='submit', data-toggle='collapse', href='#bulkspinner') Upload
            button.btn.btn-secondary(type='button', data-dismiss='modal') Close

  // file upload
  #uploadBulkModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='uploadBulkModalTitle', aria-hidden='true')
    .modal-dialog.modal-dialog-scrollable(role='document')
      .modal-content
        .modal-header
          h5#uploadBulkModalTitle.modal-title Bulk Upload - Upload File
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          p Acceptable files are either .txt (plaintext) with one card name per line, or .csv with the exact format as our .csv export.
          form#uploadFileForm.custom-file(ref='uploadForm', action='/cube/bulkuploadfile/'+cube_id, method='post', enctype='multipart/form-data')
            input(type='hidden', name='_csrf', value=csrfToken)
            input#customFile.custom-file-input(style='padding:10px' type='file' name='document' onchange="$('#upload-file-info').html(this.files[0].name)")
            label#upload-file-info.custom-file-label(for='customFile') Choose file
        .modal-footer
          button.btn.btn-success(type='submit' form='uploadFileForm') Upload
          button.btn.btn-secondary(type='button', data-dismiss='modal') Close

  // cubetutor import
  #importModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='importModalTitle', aria-hidden='true')
    .modal-dialog.modal-dialog-scrollable(role='document')
      .modal-content
        .modal-header
          h5#importModalModalTitle.modal-title Bulk Upload - Import from Cubetutor
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          p Most card versions will be mantained. Some cards with unknown sets will default to the newest printing. Tags will not be imported. Cubetutor does not recognize alternate versions
            |  of cards with the same name, in the same set (e.g. Hymn to Tourach alternate arts, Basic Lands, Everythingamajig). These cards should be checked to ensure the desired version
            |  has been added.
          .input-group.mb-3
            .input-group-prepend
              span#basic-addon3.input-group-text Cube ID  (enter cube id from URL):
            form#importForm.custom-file(ref='uploadForm', action='/cube/importcubetutor/'+cube_id, method='post', enctype='multipart/form-data')
              input(type='hidden', name='_csrf', value=csrfToken)
              input.form-control(type='text', name='cubeid', placeholder='e.g. 123456')

        .modal-footer
          button.btn.btn-success(type='submit' form='importForm') Import
          button.btn.btn-secondary(type='button', data-dismiss='modal') Close
  // cubetutor import
  #selectEmptyModal.modal.fade(tabindex='-1', role='dialog')
    .modal-dialog.modal-dialog-scrollable(role='document')
      .modal-content
        .modal-header
          h5.modal-title Cannot Edit Selected
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          p No cards are selected. To select and edit multiple cards, use the 'List View' and check the desired cards.

        .modal-footer
          button.btn.btn-secondary(type='button', data-dismiss='modal') Close

  #cubeSaveModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='cubeSaveModalTitle', aria-hidden='true')
    .modal-dialog.modal-dialog-scrollable(role='document')
      .modal-content
        .modal-header
          h5#cubeSaveModalTitle.modal-title Success
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          p Default sorts saved successfully
        .modal-footer
          button.btn.btn-secondary(type='button', data-dismiss='modal') OK

  script(src='/js/csrf.js')
  script(src='/js/utils.js')
  script(src='/js/autocard.js')
  script(src='/js/autocomplete.js')
  script(src='/js/sortfilter.js')
  script(src='/js/tags.js')
  script(src='/js/editcube.js')
  // FIXME: this can be removed once edit collapse is in React.
  script(src='/bower_components/bootstrap/dist/js/bootstrap.js')  
  script(src='/js/cube_list.bundle.js')
