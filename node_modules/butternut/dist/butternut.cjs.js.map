{"version":3,"file":"butternut.cjs.js","sources":["../src/utils/parse.js","../src/utils/sentinels.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/Node.js","../src/program/types/shared/Array.js","../src/utils/reserved.js","../src/program/Scope.js","../src/program/extractNames.js","../src/program/types/ArrowFunctionExpression.js","../src/program/types/AssignmentExpression.js","../src/utils/isNegativeZero.js","../src/utils/stringify.js","../src/utils/getValuePrecedence.js","../src/program/types/BinaryExpression.js","../src/program/types/CallExpression.js","../src/program/types/CatchClause.js","../src/program/types/ClassBody.js","../src/program/types/shared/Class.js","../src/program/types/ClassDeclaration.js","../src/program/types/ClassExpression.js","../src/program/types/ConditionalExpression.js","../src/program/types/DoWhileStatement.js","../src/program/types/EmptyStatement.js","../src/program/types/ExpressionStatement.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/shared/ForInOfStatement.js","../src/program/types/shared/FunctionNode.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/program/types/Identifier.js","../src/program/types/IfStatement.js","../src/program/types/ImportDeclaration.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/LabeledStatement.js","../src/program/types/Literal.js","../src/program/types/LogicalExpression.js","../src/program/types/MemberExpression.js","../src/program/types/shared/minifyPropertyKey.js","../src/program/types/MethodDefinition.js","../src/program/types/NewExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/ObjectPattern.js","../src/program/types/ParenthesizedExpression.js","../src/program/types/ReturnStatement.js","../src/program/types/SpreadElement.js","../src/program/types/SwitchCase.js","../src/program/types/SwitchStatement.js","../src/program/types/TaggedTemplateExpression.js","../src/program/types/TemplateLiteral.js","../src/program/types/TryStatement.js","../src/program/types/UnaryExpression.js","../src/program/types/UpdateExpression.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/WhileStatement.js","../src/program/types/YieldExpression.js","../src/program/types/index.js","../src/analysis/breaksExecution.js","../src/program/BlockStatement.js","../src/program/keys.js","../src/program/wrap.js","../src/program/check.js","../src/program/Program.js","../src/utils/Stats.js","../src/index.js"],"sourcesContent":["import * as acorn from 'acorn';\n\nexport default function parse ( source ) {\n\treturn acorn.parse( source, {\n\t\tecmaVersion: 8,\n\t\tpreserveParens: true,\n\t\tsourceType: 'module',\n\t\tallowReserved: true,\n\t\tallowReturnOutsideFunction: true\n\t});\n}","export const UNKNOWN = {};","export default function locate ( source, index ) {\n\tvar lines = source.split( '\\n' );\n\tvar len = lines.length;\n\n\tvar lineStart = 0;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > index ) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( 'Could not determine location of character' );\n}\n","function pad ( num, len ) {\n\tlet result = String( num );\n\treturn result + repeat( ' ', len - result.length );\n}\n\nfunction repeat ( str, times ) {\n\tlet result = '';\n\twhile ( times-- ) result += str;\n\treturn result;\n}\n\nexport default function getSnippet ( source, loc, length = 1 ) {\n\tconst first = Math.max( loc.line - 5, 0 );\n\tconst last = loc.line;\n\n\tconst numDigits = String( last ).length;\n\n\tconst lines = source.split( '\\n' ).slice( first, last );\n\n\tconst lastLine = lines[ lines.length - 1 ];\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\n\n\tlet snippet = lines\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\n\t\t.join( '\\n' );\n\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor ( node, message ) {\n\t\tsuper();\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate( source, node.start );\n\n\t\tthis.name = 'CompileError';\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\n\n\t\tthis.loc = loc;\n\t\tthis.pos = loc.char;\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\n\t}\n}\n","import { UNKNOWN } from '../utils/sentinels.js';\nimport CompileError from '../utils/CompileError.js';\n\nexport default class Node {\n\tancestor ( level ) {\n\t\tlet node = this;\n\t\twhile ( level-- ) {\n\t\t\tnode = node.parent;\n\t\t\tif ( !node ) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tappend ( code, content ) {\n\t\tcode.appendLeft( this.getRightHandSide().end, content );\n\t}\n\n\tattachScope ( program, scope ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].attachScope( program, scope );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.attachScope( program, scope );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcanSequentialise () {\n\t\treturn false;\n\t}\n\n\tcontains ( node ) {\n\t\twhile ( node ) {\n\t\t\tif ( node === this ) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\terror ( message ) {\n\t\tthrow new CompileError( this, message );\n\t}\n\n\tgetLeftHandSide () {\n\t\treturn this;\n\t}\n\n\tgetPrecedence () {\n\t\treturn 0;\n\t}\n\n\tgetRightHandSide () {\n\t\treturn this;\n\t}\n\n\tgetValue () {\n\t\treturn UNKNOWN;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tthis.skip = false;\n\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].initialise( program, scope );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.initialise( program, scope );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tisEmpty () {\n\t\treturn this.skip;\n\t}\n\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].findVarDeclarations( varsToHoist );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.findVarDeclarations( varsToHoist );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmove ( code, position ) {\n\t\tcode.move( this.getLeftHandSide().start, this.getRightHandSide().end, position );\n\t}\n\n\tminify ( code, chars ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].minify( code, chars );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.minify( code, chars );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tparenthesize ( code ) {\n\t\tthis.prepend( code, '(' );\n\t\tthis.append( code, ')' );\n\t}\n\n\tprepend ( code, content ) {\n\t\tcode.prependRight( this.getLeftHandSide().start, content );\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\tif ( this.type === 'ExpressionStatement' ) return false;\n\t\tif ( this.type === 'ReturnStatement' ) return returnStatements.push( this ), false;\n\t\tif ( this.type === 'IfStatement' ) return !this.preventsCollapsedReturns( returnStatements );\n\t\treturn true;\n\t}\n\n\tsource () {\n\t\treturn this.program.magicString.original.slice( this.start, this.end );\n\t}\n\n\ttoString () {\n\t\treturn this.program.magicString.slice( this.start, this.end );\n\t}\n}\n","import Node from '../../Node.js';\nimport { UNKNOWN } from '../../../utils/sentinels.js';\n\nexport default class ArrayExpression extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.elements.length );\n\n\t\tfor ( let i = 0; i < this.elements.length; i += 1 ) {\n\t\t\tconst element = this.elements[i];\n\n\t\t\tif ( element ) {\n\t\t\t\tconst value = element.getValue();\n\t\t\t\tif ( value === UNKNOWN ) return UNKNOWN;\n\n\t\t\t\tvalues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.elements.length ) {\n\t\t\tlet insert = '[';\n\t\t\tthis.elements.forEach( ( element, i ) => {\n\t\t\t\tif ( !element ) {\n\t\t\t\t\tinsert += i === this.elements.length - 1 ? ',]' : ',';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( element.start > c + 1 ) code.overwrite( c, element.start, insert );\n\t\t\t\tc = element.end;\n\n\t\t\t\tinsert = i === this.elements.length - 1 ? ']' : ',';\n\t\t\t});\n\n\t\t\tif ( this.end > insert.length ) code.overwrite( c, this.end, insert );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.end > c + 2 ) code.overwrite( c, this.end, '[]' );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","export const reserved = 'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' );\n\nexport const reservedLookup = Object.create( null );\nreserved.forEach( word => {\n\treservedLookup[ word ] = true;\n});","import { reserved } from '../utils/reserved.js';\nimport CompileError from '../utils/CompileError.js';\n\nconst letConst = /^(?:let|const)$/;\n\nexport default function Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.canMangle = !!this.parent;\n\tthis.isBlockScope = !!options.block;\n\tthis.useStrict = this.parent && this.parent.useStrict;\n\n\t// vars declared in blocks are stored here, so that we\n\t// can hoist them if those blocks are removed but the\n\t// declarations are used. TODO an alternative approach\n\t// would be to replace instances of the hoisted var\n\t// with `void 0`\n\tthis.varDeclarations = new Set();\n\tthis.hoistedVars = new Set();\n\tthis.varDeclarationNodes = [];\n\n\tlet scope = this;\n\twhile ( scope.isBlockScope ) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.identifiers = [];\n\tthis.declarations = Object.create( null );\n\tthis.references = Object.create( null );\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\n\tthis.aliases = Object.create( null );\n\n\tthis.idCounter = [ 0 ];\n}\n\nScope.prototype = {\n\taddDeclaration ( identifier, kind ) {\n\t\tif ( kind === 'var' && this.isBlockScope ) {\n\t\t\tthis.varDeclarations.add( identifier.name );\n\t\t\tthis.parent.addDeclaration( identifier, kind );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name } = identifier;\n\n\t\tconst existingDeclaration = this.declarations[ name ];\n\t\tif ( existingDeclaration ) {\n\t\t\tif ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) {\n\t\t\t\t// TODO warn about double var declarations?\n\t\t\t\tthrow new CompileError( identifier, `${name} is already declared` );\n\t\t\t}\n\n\t\t\t// special case — function expression IDs that are shadowed by\n\t\t\t// declarations should just be removed (TODO unless the user wishes\n\t\t\t// to keep function names — https://github.com/Rich-Harris/butternut/issues/17)\n\t\t\tif ( existingDeclaration.kind === 'FunctionExpression' ) {\n\t\t\t\texistingDeclaration.node.parent.shadowed = true;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tidentifier.isDuplicate = true;\n\n\t\t\t\tif ( existingDeclaration.activated ) {\n\t\t\t\t\tidentifier.activate();\n\t\t\t\t} else {\n\t\t\t\t\texistingDeclaration.duplicates.push( identifier );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst declaration = {\n\t\t\tactivated: !this.parent, // TODO is this necessary?\n\t\t\tname,\n\t\t\tnode: identifier,\n\t\t\tkind,\n\t\t\tinstances: [],\n\t\t\tduplicates: []\n\t\t};\n\n\t\tthis.declarations[ name ] = declaration;\n\n\t\tif ( this.isBlockScope ) {\n\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\n\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\n\t\t}\n\n\t\tif ( kind === 'param' ) {\n\t\t\tdeclaration.instances.push( identifier );\n\t\t}\n\t},\n\n\taddReference ( identifier ) {\n\t\tconst declaration = this.declarations[ identifier.name ];\n\t\tif ( declaration ) {\n\t\t\tdeclaration.instances.push( identifier );\n\n\t\t\tif ( !declaration.activated ) {\n\t\t\t\tdeclaration.activated = true;\n\t\t\t\t// const parent = declaration.node.parent;\n\n\t\t\t\tdeclaration.node.activate();\n\t\t\t\tdeclaration.duplicates.forEach( dupe => {\n\t\t\t\t\tdupe.activate();\n\t\t\t\t});\n\t\t\t\t// if ( declaration.kind === 'param' ) {\n\t\t\t\t// \t// TODO is there anything to do here?\n\t\t\t\t// } else if ( parent.activate ) {\n\t\t\t\t// \tparent.activate();\n\t\t\t\t// }\n\t\t\t}\n\t\t} else {\n\t\t\tthis.references[ identifier.name ] = true;\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\n\t\t}\n\t},\n\n\tcontains ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n\t},\n\n\tdeopt () {\n\t\tif ( !this.deopted ) {\n\t\t\tthis.deopted = true;\n\t\t\tthis.canMangle = false;\n\n\t\t\tif ( this.parent ) this.parent.deopt();\n\n\t\t\tObject.keys( this.declarations ).forEach( name => {\n\t\t\t\tthis.declarations[name].node.activate();\n\t\t\t});\n\t\t}\n\t},\n\n\tfindDeclaration ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\n\t},\n\n\tmangle ( code, chars ) {\n\t\tif ( !this.canMangle ) return;\n\n\t\tlet used = Object.create( null );\n\t\treserved.forEach( word => {\n\t\t\tused[ word ] = true;\n\t\t});\n\n\t\tObject.keys( this.references ).forEach( reference => {\n\t\t\tconst declaration = this.parent && this.parent.findDeclaration( reference );\n\t\t\tused[ declaration && declaration.alias || reference ] = true;\n\t\t});\n\n\t\tlet i = -1;\n\t\tfunction getNextAlias () {\n\t\t\tlet alias;\n\n\t\t\tdo {\n\t\t\t\ti += 1;\n\t\t\t\talias = getAlias( chars, i );\n\t\t\t} while ( alias in used );\n\n\t\t\treturn alias;\n\t\t}\n\n\t\t// TODO sort declarations by number of instances?\n\n\t\tObject.keys( this.declarations ).forEach( name => {\n\t\t\tconst declaration = this.declarations[ name ];\n\t\t\tif ( declaration.instances.length === 0 ) return;\n\n\t\t\t// special case — function expression IDs may be removed outright\n\t\t\tif ( declaration.node.parent.type === 'FunctionExpression' && declaration.node === declaration.node.parent.id ) {\n\t\t\t\tif ( declaration.node.shadowed || declaration.instances.length === 1 ) return;\n\t\t\t}\n\n\t\t\tdeclaration.alias = getNextAlias();\n\n\t\t\tdeclaration.instances.forEach( instance => {\n\t\t\t\tconst replacement = instance.parent.type === 'Property' && instance.parent.shorthand ?\n\t\t\t\t\t`${instance.name}:${declaration.alias}` :\n\t\t\t\t\tdeclaration.alias;\n\n\t\t\t\tcode.overwrite( instance.start, instance.end, replacement, true );\n\t\t\t});\n\t\t});\n\t}\n};\n\n// adapted from https://github.com/mishoo/UglifyJS2/blob/master/lib/scope.js\nfunction getAlias ( chars, i ) {\n\tlet alias = '';\n\tlet base = 54;\n\n\ti++;\n\tdo {\n\t\ti--;\n\t\talias += chars[ i % base ];\n\t\ti = Math.floor( i / base );\n\t\tbase = 64;\n\t} while ( i > 0 );\n\n\treturn alias;\n}","export default function extractNames ( node ) {\n\tconst names = [];\n\textractors[ node.type ]( names, node );\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier ( names, node ) {\n\t\tnames.push( node );\n\t},\n\n\tObjectPattern ( names, node ) {\n\t\tfor ( const prop of node.properties ) {\n\t\t\textractors[ prop.value.type ]( names, prop.value );\n\t\t}\n\t},\n\n\tArrayPattern ( names, node ) {\n\t\tfor ( const element of node.elements )  {\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\n\t\t}\n\t},\n\n\tRestElement ( names, node ) {\n\t\textractors[ node.argument.type ]( names, node.argument );\n\t},\n\n\tAssignmentPattern ( names, node ) {\n\t\textractors[ node.left.type ]( names, node.left );\n\t}\n};\n","import Node from '../Node.js';\nimport Scope from '../Scope.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tattachScope ( program, parent ) {\n\t\tthis.scope = new Scope({\n\t\t\tblock: false,\n\t\t\tparent\n\t\t});\n\n\t\tthis.params.forEach( param => {\n\t\t\tparam.attachScope( program, this.scope );\n\n\t\t\textractNames( param ).forEach( node => {\n\t\t\t\tnode.declaration = this;\n\t\t\t\tthis.scope.addDeclaration( node, 'param' );\n\t\t\t});\n\t\t});\n\n\t\tif ( this.body.type === 'BlockStatement' ) {\n\t\t\tthis.body.body.forEach( node => {\n\t\t\t\tnode.attachScope( program, this.scope );\n\t\t\t});\n\t\t} else {\n\t\t\tthis.body.attachScope( program, this.scope );\n\t\t}\n\n\t}\n\n\tinitialise ( program ) {\n\t\tsuper.initialise( program, this.scope );\n\t}\n\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\tgetLeftHandSide () {\n\t\treturn this.params.length === 1 ? this.params[0] : this;\n\t}\n\n\tminify ( code, chars ) {\n\t\tthis.scope.mangle( code, chars );\n\n\t\tlet c = this.start;\n\t\tif ( this.async ) c += 5;\n\n\t\tif ( this.params.length === 0 ) {\n\t\t\tif ( this.body.start > c + 4 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, '()=>' );\n\t\t\t}\n\t\t}\n\n\t\telse if ( this.params.length === 1 ) {\n\t\t\tthis.params[0].minify( code, chars );\n\n\t\t\tif ( this.params[0].type === 'Identifier' ) {\n\t\t\t\t// remove parens\n\t\t\t\tif ( this.async ) {\n\t\t\t\t\tcode.overwrite( c, this.params[0].start, ' ' );\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( c, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 2 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, '=>' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( this.params[0].start > c + 1 ) {\n\t\t\t\t\tcode.remove( c + 1, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 3 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, ')=>' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.params.forEach( ( param, i ) => {\n\t\t\t\tparam.minify( code, chars );\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : '(' );\n\t\t\t\tc = param.end;\n\t\t\t});\n\n\t\t\tif ( this.body.start > c + 3 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, ')=>' );\n\t\t\t}\n\t\t}\n\n\t\tthis.body.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nlet commutative = {};\n// we exclude + because it's not commutative when it's\n// operating on strings\nfor ( let operator of '*&^|' ) commutative[ operator ] = true;\n\nconst collapsibleOperators = '** * / % + - << >> >>> & ^ |'.split( ' ' );\n\nexport default class AssignmentExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\treturn 3;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( this.left.type === 'Identifier' ) {\n\t\t\tconst declaration = scope.findDeclaration( this.left.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t}\n\n\t\t// special case – `a = a + 1` -> `a += 1`\n\t\tif ( this.operator === '=' && this.left.type === 'Identifier' && this.right.type === 'BinaryExpression' && ~collapsibleOperators.indexOf( this.right.operator ) ) {\n\t\t\tif ( this.right.left.type === 'Identifier' && ( this.right.left.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.start, this.right.right.start );\n\n\t\t\t\tthis.right.right.minify( code, chars );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// addition and multiplication\n\t\t\tif ( commutative[ this.right.operator ] && this.right.right.type === 'Identifier' && ( this.right.right.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.left.end, this.right.end );\n\n\t\t\t\tthis.right.left.minify( code, chars );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","export default function isNegativeZero ( num ) {\n\treturn num === 0 && ( 1 / num < 0 );\n}","import isNegativeZero from './isNegativeZero.js';\n\n// TODO if string, determine which quotes to use\n// TODO if number, determine whether to use e notation\n\nexport default function stringify ( value ) {\n\tif ( typeof value === 'function' ) return null;\n\n\tif ( value !== value ) return 'NaN';\n\tif ( value === Infinity ) return '1/0';\n\tif ( value === -Infinity ) return '-1/0';\n\tif ( value === true ) return '!0';\n\tif ( value === false ) return '!1';\n\tif ( value === undefined ) return 'void 0';\n\tif ( isNegativeZero( value ) ) return '-0';\n\n\tif ( typeof value === 'number' ) {\n\t\tconst str = String( value ).replace( /^(-)?0\\./, '$1.' );\n\t\tconst exponential = value.toExponential().replace( 'e+', 'e' );\n\n\t\treturn exponential.length < str.length ? exponential : str;\n\t}\n\n\treturn JSON.stringify( value )\n\t\t.replace( /\\u2028/g, '\\\\u2028' )\n\t\t.replace( /\\u2029/g, '\\\\u2029' );\n}","import isNegativeZero from './isNegativeZero.js';\n\nexport default function getValuePrecedence ( value ) {\n\tif ( value === true || value === false || value === undefined ) return 16; // unary operator — !0, !1, void 0\n\tif ( typeof value === 'number' ) {\n\t\tif ( value === Infinity || value === -Infinity ) return 14; // division — 1/0, -1/0\n\t\tif ( value < 0 || isNegativeZero( value ) ) return 16;\n\t}\n\n\treturn 21;\n}","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\nimport getValuePrecedence from '../../utils/getValuePrecedence.js';\n\nconst calculators = {\n\t'**' : ( a, b ) => Math.pow( a, b ),\n\t'*'  : ( a, b ) => a * b,\n\t'/'  : ( a, b ) => a / b,\n\t'%'  : ( a, b ) => a % b,\n\t'+'  : ( a, b ) => a + b,\n\t'-'  : ( a, b ) => a - b,\n\t'<<' : ( a, b ) => a << b,\n\t'>>' : ( a, b ) => a >> b,\n\t'>>>': ( a, b ) => a >>> b,\n\t'<'  : ( a, b ) => a < b,\n\t'<=' : ( a, b ) => a <= b,\n\t'>'  : ( a, b ) => a > b,\n\t'>=' : ( a, b ) => a >= b,\n\t'==' : ( a, b ) => a == b,\n\t'!=' : ( a, b ) => a != b,\n\t'===': ( a, b ) => a === b,\n\t'!==': ( a, b ) => a !== b,\n\t'&'  : ( a, b ) => a & b,\n\t'^'  : ( a, b ) => a ^ b,\n\t'|'  : ( a, b ) => a | b,\n\tin   : ( a, b ) => a in b,\n\tinstanceof: ( a, b ) => a instanceof b\n};\n\nconst binaryExpressionPrecedence = {};\n[\n\t[  7, '|' ],\n\t[  8, '^' ],\n\t[  9, '&' ],\n\t[ 10, '!== === != ==' ],\n\t[ 11, 'instanceof in >= > <= <' ],\n\t[ 12, '>>> >> <<' ],\n\t[ 13, '- +' ],\n\t[ 14, '% / *' ],\n\t[ 15, '**' ]\n].forEach( ([ precedence, operators ]) => {\n\toperators.split( ' ' ).forEach( operator => binaryExpressionPrecedence[ operator ] = precedence );\n});\n\nexport default class BinaryExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst value = this.getValue();\n\n\t\treturn value === UNKNOWN ?\n\t\t\tbinaryExpressionPrecedence[ this.operator ] :\n\t\t\tgetValuePrecedence( value );\n\t}\n\n\t// TODO `program.addWord( stringify( this.getValue() ) )`...\n\tgetValue () {\n\t\tconst left = this.left.getValue();\n\t\tconst right = this.right.getValue();\n\n\t\tif ( left === UNKNOWN || right === UNKNOWN ) return UNKNOWN;\n\n\t\treturn calculators[ this.operator ]( left, right );\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tlet operator = this.operator;\n\n\t\t\tif ( code.original[ this.right.getLeftHandSide().start ] === operator ) {\n\t\t\t\t// prevent e.g. `1 - --t` becoming 1---t\n\t\t\t\toperator = `${operator} `;\n\t\t\t} else if ( /\\w/.test( this.operator ) ) {\n\t\t\t\t// `foo in bar`, not `fooinbar`\n\t\t\t\toperator = ` ${operator} `;\n\t\t\t}\n\n\t\t\tcode.overwrite( this.left.end, this.right.start, operator );\n\n\t\t\tsuper.minify( code, chars );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\nimport getValuePrecedence from '../../utils/getValuePrecedence.js';\n\nconst safeFunctions = [\n\t// TODO this list is possibly a bit arbitrary. Also *technically*\n\t// unsafe, though I'm inclined to wait for examples of it causing\n\t// breakage in the wild\n\tArray.prototype.concat,\n\tArray.prototype.indexOf,\n\tArray.prototype.join,\n\tArray.prototype.lastIndexOf,\n\tArray.prototype.reverse,\n\tArray.prototype.slice,\n\tArray.prototype.sort,\n\tArray.prototype.toString,\n\n\tString.fromCharCode,\n\tString.fromCodePoint,\n\n\tString.prototype.charAt,\n\tString.prototype.charCodeAt,\n\tString.prototype.codePointAt,\n\tString.prototype.concat, // WARNING! https://github.com/jquery/jquery/pull/473\n\tString.prototype.endsWith,\n\tString.prototype.includes,\n\tString.prototype.indexOf,\n\tString.prototype.lastIndexOf,\n\tString.prototype.slice,\n\tString.prototype.startsWith,\n\tString.prototype.substr,\n\tString.prototype.substring,\n\tString.prototype.toLowerCase,\n\tString.prototype.toString,\n\tString.prototype.toUpperCase,\n\tString.prototype.trim,\n\tString.prototype.trimLeft,\n\tString.prototype.trimRight,\n\tString.prototype.valueOf\n\n\t// TODO others...\n];\n\nexport default class CallExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.callee.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst value = this.getValue();\n\t\tif ( value === UNKNOWN ) {\n\t\t\t// function expressions are a special (annoying) case\n\t\t\tlet node = this.callee;\n\t\t\twhile ( node.type === 'ParenthesizedExpression' ) node = node.expression;\n\t\t\tif ( /FunctionExpression/.test( node.getLeftHandSide().type ) ) {\n\t\t\t\tif ( this.parent.type !== 'ExpressionStatement' ) return 0;\n\t\t\t}\n\n\t\t\treturn 18;\n\t\t} else {\n\t\t\treturn getValuePrecedence( value );\n\t\t}\n\t}\n\n\tgetValue () {\n\t\tif ( this.callee.type !== 'MemberExpression' || this.callee.property.computed ) return UNKNOWN;\n\n\t\tconst contextValue = this.callee.object.getValue();\n\t\tif ( contextValue === UNKNOWN ) return UNKNOWN;\n\n\t\tconst calleeValue = contextValue[ this.callee.property.name ];\n\n\t\tif ( typeof calleeValue !== 'function' ) return UNKNOWN;\n\t\tif ( !~safeFunctions.indexOf( calleeValue ) ) return UNKNOWN;\n\n\t\tlet argumentValues = new Array( this.arguments.length );\n\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\tconst argument = this.arguments[i];\n\n\t\t\tif ( argument ) {\n\t\t\t\tconst value = argument.getValue();\n\t\t\t\tif ( value === UNKNOWN ) return UNKNOWN;\n\n\t\t\t\targumentValues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn calleeValue.apply( contextValue, argumentValues );\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( this.callee.type === 'Identifier' && this.callee.name === 'eval' && !scope.contains( 'eval' ) ) {\n\t\t\tif ( this.program.options.allowDangerousEval ) {\n\t\t\t\tscope.deopt();\n\t\t\t} else {\n\t\t\t\tthis.error( 'Use of direct eval prevents effective minification and can introduce security vulnerabilities. Use `allowDangerousEval: true` if you know what you\\'re doing' );\n\t\t\t}\n\t\t}\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end + 2 ) {\n\t\t\tcode.overwrite( this.callee.end, this.end, '()' );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport Scope from '../Scope.js';\nimport extractNames from '../extractNames.js';\n\nexport default class CatchClause extends Node {\n\tattachScope ( program, parent ) {\n\t\tthis.scope = new Scope({\n\t\t\tblock: true,\n\t\t\tparent\n\t\t});\n\n\t\textractNames( this.param ).forEach( node => {\n\t\t\tthis.scope.addDeclaration( node, 'param' );\n\t\t});\n\n\t\tfor ( let i = 0; i < this.body.body.length; i += 1 ) {\n\t\t\tthis.body.body[i].attachScope( program, this.scope );\n\t\t}\n\n\t\tif ( this.finalizer ) {\n\t\t\tthis.finalizer.attachScope( program, this.scope );\n\t\t}\n\t}\n\n\tinitialise ( program ) {\n\t\tprogram.addWord( 'catch' );\n\t\tsuper.initialise( program, this.scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tthis.scope.mangle( code, chars );\n\n\t\tif ( this.param.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.param.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.param.end + 1 ) {\n\t\t\tcode.overwrite( this.param.end, this.body.start, ')' );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ClassBody extends Node {\n\tattachScope ( program, parent ) {\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tthis.body[i].attachScope( program, parent );\n\t\t}\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start + 1;\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst method = this.body[i];\n\t\t\tif ( method.start > c ) code.remove( c, method.start );\n\n\t\t\tmethod.minify( code, chars );\n\n\t\t\tc = method.end;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\t}\n}\n","import Node from '../../Node.js';\nimport isNegativeZero from '../../../utils/isNegativeZero.js';\nimport { UNKNOWN } from '../../../utils/sentinels.js';\n\nfunction shouldParenthesizeSuperclass ( node ) {\n\twhile ( node.type === 'ParenthesizedExpression' ) node = node.expression;\n\n\tconst value = node.getValue();\n\tif ( value === UNKNOWN ) return node.getPrecedence() < 18;\n\n\treturn ( value === true || value === false || value === undefined || isNegativeZero( value ) );\n}\n\nexport default class Class extends Node {\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'class' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start + 5;\n\n\t\tif ( this.id ) {\n\t\t\tif ( this.id.start > c + 1 ) code.remove( c + 1, this.id.start );\n\t\t\tc = this.id.end;\n\t\t}\n\n\t\tif ( this.superClass ) {\n\t\t\t// edge case\n\t\t\tif ( shouldParenthesizeSuperclass( this.superClass ) ) {\n\t\t\t\tcode.overwrite( c, this.superClass.start, ' extends(' );\n\t\t\t\tcode.prependRight( this.body.start, ')' );\n\t\t\t}\n\n\t\t\telse if ( this.superClass.start > c + 8 ) {\n\t\t\t\tcode.overwrite( c, this.superClass.start, ' extends ' );\n\t\t\t}\n\n\t\t\tc = this.superClass.end;\n\t\t}\n\n\t\tif ( this.body.start > c ) code.remove( c, this.body.start );\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Class from './shared/Class.js';\n\nexport default class ClassDeclaration extends Class {\n\tactivate () {\n\t\tif ( this.activated ) return;\n\t\tthis.activated = true;\n\n\t\tthis.skip = false;\n\t\tsuper.initialise( this.program, this.scope );\n\t}\n\n\tattachScope ( program, scope ) {\n\t\tthis.program = program;\n\t\tthis.scope = scope;\n\n\t\tthis.id.declaration = this;\n\n\t\tthis.name = this.id.name; // TODO what is this used for?\n\t\tscope.addDeclaration( this.id, 'class' );\n\n\t\tthis.id.attachScope( program, this.scope );\n\t\tif ( this.superClass ) this.superClass.attachScope( program, this.scope );\n\t\tthis.body.attachScope( program, scope );\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( scope.parent ) {\n\t\t\t// noop — we wait for this declaration to be activated\n\t\t} else {\n\t\t\tsuper.initialise( program, scope );\n\t\t}\n\t}\n}\n","import Class from './shared/Class.js';\nimport Scope from '../Scope.js';\n\nexport default class ClassExpression extends Class {\n\tattachScope ( program, parent ) {\n\t\tthis.scope = new Scope({\n\t\t\tblock: true,\n\t\t\tparent\n\t\t});\n\n\t\tif ( this.id ) this.id.attachScope( program, this.scope );\n\t\tif ( this.superClass ) this.superClass.attachScope( program, this.scope );\n\t\tthis.body.attachScope( program, this.scope );\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.scope.addDeclaration( this.id, 'class' );\n\t\t\tthis.scope.addReference( this.id );\n\t\t}\n\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tthis.scope.mangle( code, chars );\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nexport default class ConditionalExpression extends Node {\n\tgetLeftHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.test : ( testValue ? this.consequent : this.alternate );\n\n\t\treturn node.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst testValue = this.test.getValue();\n\t\treturn testValue === UNKNOWN ? 4 : ( testValue ? this.consequent : this.alternate ).getPrecedence();\n\t}\n\n\tgetRightHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.alternate : ( testValue ? this.alternate : this.consequent );\n\n\t\treturn node.getRightHandSide();\n\t}\n\n\tgetValue () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst consequentValue = this.consequent.getValue();\n\t\tconst alternateValue = this.alternate.getValue();\n\n\t\tif ( testValue === UNKNOWN || consequentValue === UNKNOWN || alternateValue === UNKNOWN ) return UNKNOWN;\n\n\t\treturn testValue ? consequentValue : alternateValue;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\tsuper.initialise( program, scope );\n\t\t} else if ( testValue ) {\n\t\t\tthis.consequent.initialise( program, scope );\n\t\t} else {\n\t\t\tthis.alternate.initialise( program, scope );\n\t\t}\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\t// TODO rewrite `!a ? b() : c()` as `a ? c() : b()`\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// remove whitespace\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) {\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, '?' );\n\t\t\t}\n\n\t\t\tif ( this.alternate.start > this.consequent.end + 1 ) {\n\t\t\t\tcode.overwrite( this.consequent.end, this.alternate.start, ':' );\n\t\t\t}\n\n\t\t\tsuper.minify( code, chars );\n\t\t} else if ( testValue ) {\n\t\t\t// remove test and alternate\n\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tthis.consequent.minify( code, chars );\n\t\t} else {\n\t\t\t// remove test and consequent\n\t\t\tcode.remove( this.start, this.alternate.start );\n\n\t\t\tthis.alternate.minify( code, chars );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class DoWhileStatement extends Node {\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'dowhile' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\t// special case\n\t\tif ( this.body.isEmpty() ) {\n\t\t\tcode.overwrite( this.start + 2, this.test.start, ';while(' );\n\t\t}\n\n\t\telse {\n\t\t\tthis.body.minify( code, chars );\n\n\t\t\tif ( this.body.type === 'BlockStatement' ) {\n\t\t\t\tcode.remove( this.start + 2, this.body.start );\n\t\t\t\tcode.overwrite( this.body.end, this.test.start, 'while(' );\n\t\t\t} else {\n\t\t\t\tif ( this.body.start > this.start + 2 ) code.remove( this.start + 2, this.body.start );\n\t\t\t\tthis.body.prepend( code, '{' );\n\n\t\t\t\tlet c = this.body.end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\t\tcode.overwrite( c, this.test.start, '}while(' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.end > this.test.end + 1 ) {\n\t\t\tlet c = this.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tcode.overwrite( this.test.end, c, ')' );\n\t\t}\n\n\t\tthis.test.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class EmptyStatement extends Node {\n\tinitialise () {\n\t\t// noop. this prevents Node#initialise from\n\t\t// 'de-skipping' this node\n\t}\n}","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nexport default class ExpressionStatement extends Node {\n\tcanSequentialise () {\n\t\treturn true;\n\t}\n\n\tgetLeftHandSide () {\n\t\treturn this.expression.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\treturn this.expression.getPrecedence();\n\t}\n\n\tgetRightHandSide () {\n\t\treturn this.expression.getRightHandSide();\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( this.expression.type === 'Literal' || this.expression.getValue() !== UNKNOWN ) {\n\t\t\t// remove side-effect-free statements (TODO others, not just literals)...\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.initialise( program, scope );\n\t}\n}\n","import Node from '../../Node.js';\nimport Scope from '../../Scope.js';\n\nexport default class LoopStatement extends Node {\n\tattachScope ( program, parent ) {\n\t\tif ( this.hasVariableDeclaration() ) {\n\t\t\tthis.scope = new Scope({\n\t\t\t\tblock: true,\n\t\t\t\tparent\n\t\t\t});\n\n\t\t\tsuper.attachScope( program, this.scope );\n\t\t} else {\n\t\t\tsuper.attachScope( program, parent );\n\t\t}\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'for' );\n\t\tif ( this.type === 'ForInStatement' ) program.addWord( 'in' );\n\t\telse if ( this.type === 'ForOfStatement' ) program.addWord( 'of' );\n\n\t\tsuper.initialise( program, this.scope || scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.scope ) this.scope.mangle( code, chars );\n\n\t\t// special case — empty body\n\t\tif ( this.body.isEmpty() ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t} else {\n\t\t\tthis.body.minify( code, chars );\n\t\t}\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\n\nexport default class ForStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.init && this.init.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start + 3;\n\n\t\tlet replacement = '(';\n\n\t\t[ this.init, this.test, this.update ].forEach( ( statement, i ) => {\n\t\t\tif ( statement && ( !statement.skip || statement === this.test  ) ) {\n\t\t\t\tif ( statement.start > c + replacement.length ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, replacement );\n\t\t\t\t}\n\n\t\t\t\tstatement.minify( code, chars );\n\n\t\t\t\tc = statement.end;\n\t\t\t\treplacement = '';\n\t\t\t}\n\n\t\t\treplacement += i === 2 ? ')' : ';';\n\t\t});\n\n\t\tif ( this.body.start > c + replacement.length ) {\n\t\t\tcode.overwrite( c, this.body.start, replacement );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import LoopStatement from './LoopStatement.js';\n\nexport default class ForInOfStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.left.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.left.start > this.start + 4 ) {\n\t\t\tcode.overwrite( this.start + 3, this.left.start, '(' );\n\t\t}\n\n\t\tif ( this.right.start > this.left.end + 4 ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, ' in ' );\n\t\t}\n\n\t\tif ( this.body.start > this.right.end + 1 ) {\n\t\t\tcode.overwrite( this.right.end, this.body.start, ')' );\n\t\t}\n\n\t\tthis.left.minify( code, chars );\n\t\tthis.right.minify( code, chars );\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../../Node.js';\nimport Scope from '../../Scope.js';\nimport extractNames from '../../extractNames.js';\n\nfunction hasFunctionKeyword ( node, parent ) {\n\tif ( node === parent.value ) {\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\tif ( parent.type === 'Property' ) {\n\t\t\tif ( parent.method ) return false;\n\t\t\tif ( parent.kind === 'set' || parent.kind === 'get' ) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction keepId ( node ) {\n\tif ( !node.id ) return false;\n\tif ( node.type === 'FunctionDeclaration' ) return true;\n\n\t// if function expression ID is shadowed, or is not referenced (other than\n\t// by the function expression itself), remove it\n\treturn !node.shadowed && node.scope.declarations[ node.id.name ].instances.length > 1;\n}\n\nexport default class FunctionNode extends Node {\n\tattachScope ( program, parent ) {\n\t\tthis.program = program;\n\t\tthis.scope = new Scope({\n\t\t\tblock: false,\n\t\t\tparent\n\t\t});\n\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tif ( this.type === 'FunctionExpression' ) {\n\t\t\t\tthis.scope.addDeclaration( this.id, this.type );\n\t\t\t\tthis.scope.addReference( this.id );\n\t\t\t} else {\n\t\t\t\tparent.addDeclaration( this.id, this.type );\n\t\t\t}\n\t\t}\n\n\t\tthis.params.forEach( param => {\n\t\t\tparam.attachScope( program, this.scope );\n\n\t\t\textractNames( param ).forEach( node => {\n\t\t\t\tnode.declaration = this;\n\t\t\t\tthis.scope.addDeclaration( node, 'param' );\n\t\t\t});\n\t\t});\n\n\t\tthis.body.attachScope( program, this.scope );\n\t}\n\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\t// TODO `program.addWord('async')` if necessary\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start;\n\n\t\tif ( hasFunctionKeyword( this, this.parent ) ) {\n\t\t\t// TODO this could probably be simpler\n\t\t\tconst shouldKeepId = keepId( this );\n\t\t\tif ( shouldKeepId ) {\n\t\t\t\tc = this.id.start;\n\n\t\t\t\tif ( this.async ) {\n\t\t\t\t\tif ( c > this.start + 15 ) code.overwrite( this.start + 6, c, this.generator ? 'function*' : 'function ' );\n\t\t\t\t} else {\n\t\t\t\t\tif ( c > this.start + 9 ) code.overwrite( this.start + 8, c, this.generator ? '*' : ' ' );\n\t\t\t\t}\n\n\t\t\t\tc = this.id.end;\n\t\t\t} else {\n\t\t\t\twhile ( code.original[c] !== '(' ) c += 1;\n\n\t\t\t\tif ( this.async ) {\n\t\t\t\t\tconst replacement = this.generator ? 'function*' : 'function';\n\t\t\t\t\tif ( c > this.start + 6 + replacement.length ) code.overwrite( this.start + 6, c, replacement );\n\t\t\t\t} else {\n\t\t\t\t\tconst replacement = this.generator ? '*' : '';\n\t\t\t\t\tif ( c > this.start + 8 + replacement.length ) code.overwrite( this.start + 8, c, replacement );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( this.params.length ) {\n\t\t\tfor ( let i = 0; i < this.params.length; i += 1 ) {\n\t\t\t\tconst param = this.params[i];\n\t\t\t\tparam.minify( code, chars );\n\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : '(' );\n\t\t\t\tc = param.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.overwrite( c, this.body.start, ')' );\n\t\t} else if ( this.body.start > c + 2 ) {\n\t\t\tcode.overwrite( c, this.body.start, `()` );\n\t\t}\n\n\t\tthis.body.minify( code, chars );\n\t}\n}\n","import FunctionNode from './shared/FunctionNode.js';\n\nexport default class FunctionDeclaration extends FunctionNode {\n\tactivate () {\n\t\tif ( this.activated ) return;\n\t\tthis.activated = true;\n\n\t\tthis.skip = false;\n\n\t\tthis.program.addWord( 'function' );\n\t\tif ( this.id ) this.id.initialise( this.program, this.scope.parent );\n\t\tthis.params.forEach( param => {\n\t\t\tparam.initialise( this.program, this.scope );\n\t\t});\n\t\tthis.body.initialise( this.program, this.scope );\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( scope.parent ) {\n\t\t\t// noop — we wait for this declaration to be activated\n\t\t} else {\n\t\t\tthis.activate( program );\n\t\t}\n\t}\n}\n","import FunctionNode from './shared/FunctionNode.js';\n\nexport default class FunctionExpression extends FunctionNode {\n\tgetPrecedence () {\n\t\treturn 0;\n\t}\n\n\tinitialise ( program ) {\n\t\tprogram.addWord( 'function' ); // TODO only if has function keyword\n\t\tsuper.initialise( program, this.scope );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nexport default class Identifier extends Node {\n\tactivate () {\n\t\tif ( this.declaration && this.declaration.activate ) {\n\t\t\tthis.declaration.activate();\n\t\t}\n\n\t\t// TODO in what circumstances would an identifier be 'activated' if it\n\t\t// didn't have a declaration... parameters?\n\t}\n\n\tattachScope ( program, scope ) {\n\t\tthis.scope = scope;\n\t}\n\n\tgetPrecedence () {\n\t\treturn 21;\n\t}\n\n\tgetValue () {\n\t\tif ( this.name === 'undefined' ) {\n\t\t\tif ( !this.scope.contains( 'undefined' ) ) return undefined;\n\t\t}\n\n\t\tif ( this.name === 'Infinity' ) {\n\t\t\tif ( !this.scope.contains( 'Infinity' ) ) return Infinity;\n\t\t}\n\n\t\treturn UNKNOWN;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\t// special case\n\t\tif ( ( this.parent.type === 'FunctionExpression' || this.parent.type === 'ClassExpression' ) && this === this.parent.id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO add global/top-level identifiers to frequency count\n\n\t\tif ( this.isReference() ) {\n\t\t\tscope.addReference( this );\n\t\t}\n\t}\n\n\tisReference () {\n\t\tconst parent = this.parent;\n\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\n\t\t\treturn parent.computed || this === parent.object;\n\t\t}\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif ( parent.type === 'Property' ) return parent.computed || this === parent.value;\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif ( parent.type === 'ExportSpecifier' && this !== parent.local ) return false;\n\n\t\treturn true;\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\t\tif ( value !== UNKNOWN && this.isReference() ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\t// TODO should aliasing happen here, rather than in Scope?\n\t\t// if ( this.alias ) {\n\t\t// \tconst replacement = this.parent.type === 'Property' && this.parent.shorthand ?\n\t\t// \t\t`${this.name}:${this.alias}` :\n\t\t// \t\tthis.alias;\n\n\t\t// \tcode.overwrite( this.start, this.end, replacement, true );\n\t\t// }\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\n// TODO this whole thing is kinda messy... refactor it\n\nfunction endsWithCurlyBraceOrSemicolon ( node ) {\n\treturn (\n\t\tnode.type === 'BlockStatement' ||\n\t\tnode.type === 'SwitchStatement' ||\n\t\tnode.type === 'TryStatement' ||\n\t\tnode.type === 'EmptyStatement'\n\t);\n}\n\nexport default class IfStatement extends Node {\n\tcanSequentialise () {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\treturn this.consequent.canSequentialise() && ( !this.alternate || this.alternate.canSequentialise() );\n\t\t}\n\n\t\tif ( testValue ) {\n\t\t\treturn this.consequent.canSequentialise();\n\t\t}\n\n\t\treturn this.alternate ? this.alternate.canSequentialise() : false;\n\t}\n\n\tgetLeftHandSide () {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\tif ( this.canSequentialise() ) return ( this.inverted ? this.test.argument : this.test ).getLeftHandSide();\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( testValue ) return this.consequent.getLeftHandSide();\n\t\treturn this.alternate.getLeftHandSide();\n\t}\n\n\tgetRightHandSide () {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\tif ( this.canSequentialise() ) return ( this.alternate ? ( this.inverted ? this.consequent : this.alternate ) : this.consequent ).getRightHandSide();\n\t\t\treturn ( this.alternate || this.consequent ).getRightHandSide();\n\t\t}\n\n\t\tif ( testValue || !this.alternate ) return this.consequent.getRightHandSide();\n\t\treturn this.alternate.getRightHandSide();\n\t}\n\n\tinitialise ( program, scope ) {\n\t\t// TODO add 'if/else' to character frequency, but only if not rewriting as sequence\n\n\t\tthis.skip = false; // TODO skip if known to be safe\n\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// initialise everything\n\t\t\tthis.test.initialise( program, scope );\n\t\t\tthis.consequent.initialise( program, scope );\n\t\t\tif ( this.alternate ) this.alternate.initialise( program, scope );\n\t\t}\n\n\t\telse if ( testValue ) { // if ( true ) {...}\n\t\t\tthis.consequent.initialise( program, scope );\n\n\t\t\tif ( this.alternate && this.alternate.type === 'BlockStatement' ) {\n\t\t\t\tthis.alternate.scope.varDeclarations.forEach( name => {\n\t\t\t\t\tscope.functionScope.hoistedVars.add( name );\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\telse { // if ( false ) {...}\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.alternate.initialise( program, scope );\n\t\t\t} else {\n\t\t\t\tthis.skip = true;\n\t\t\t}\n\n\t\t\tif ( this.consequent.type === 'BlockStatement' ) {\n\t\t\t\tthis.consequent.scope.varDeclarations.forEach( name => {\n\t\t\t\t\tscope.functionScope.hoistedVars.add( name );\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.inverted = this.test.type === 'UnaryExpression' && this.test.operator === '!';\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue !== UNKNOWN ) {\n\t\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\t\tif ( this.alternate ) {\n\t\t\t\t\t// TODO handle var declarations in alternate\n\t\t\t\t\tcode.remove( this.consequent.end, this.end );\n\t\t\t\t}\n\n\t\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\t\tthis.consequent.minify( code, chars );\n\t\t\t} else { // if ( false ) {...}\n\t\t\t\t// we know there's an alternate, otherwise we wouldn't be here\n\t\t\t\tthis.alternate.minify( code, chars );\n\t\t\t\tcode.remove( this.start, this.alternate.start );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.test.minify( code, chars );\n\n\t\t// if we're rewriting as &&, test must be higher precedence than 6\n\t\t// to avoid being wrapped in parens. If ternary, 4\n\t\tconst targetPrecedence = this.alternate ? 4 : this.inverted ? 5 : 6;\n\t\tconst test = this.inverted ? this.test.argument : this.test;\n\n\t\tconst shouldParenthesiseTest = (\n\t\t\ttest.getPrecedence() < targetPrecedence ||\n\t\t\ttest.getLeftHandSide().type === 'ObjectExpression' ||\n\t\t\ttest.getRightHandSide().type === 'ObjectExpression'\n\t\t);\n\n\t\t// TODO what if nodes in the consequent are skipped...\n\t\tconst shouldParenthesiseConsequent = this.consequent.type === 'BlockStatement' ?\n\t\t\t( this.consequent.body.length === 1 ? this.consequent.body[0].getPrecedence() < targetPrecedence : true ) :\n\t\t\tthis.consequent.getPrecedence() < targetPrecedence;\n\n\t\t// special case – empty consequent\n\t\tif ( this.consequent.isEmpty() ) {\n\t\t\tconst canRemoveTest = this.test.type === 'Identifier' || this.test.getValue() !== UNKNOWN; // TODO can this ever happen?\n\n\t\t\tif ( this.alternate && !this.alternate.isEmpty() ) {\n\t\t\t\tthis.alternate.minify( code, chars );\n\n\t\t\t\tif ( this.alternate.type === 'BlockStatement' && this.alternate.body.length === 0 ) {\n\t\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\t\tthis.removed = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\t\tcode.remove( this.test.end, this.end );\n\t\t\t\t\t}\n\t\t\t\t} else if ( this.alternate.canSequentialise() ) {\n\t\t\t\t\tlet alternatePrecedence;\n\t\t\t\t\tif ( this.alternate.type === 'IfStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.alternate ?\n\t\t\t\t\t\t\t4 : // will rewrite as ternary\n\t\t\t\t\t\t\t5;\n\t\t\t\t\t} else if ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.body.length === 1 ?\n\t\t\t\t\t\t\tthis.alternate.body[0].getPrecedence() :\n\t\t\t\t\t\t\t0; // sequence\n\t\t\t\t\t} else {\n\t\t\t\t\t\talternatePrecedence = 0; // err on side of caution\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shouldParenthesiseAlternate = alternatePrecedence < ( this.inverted ? 6 : 5 );\n\t\t\t\t\tif ( shouldParenthesiseAlternate ) this.alternate.parenthesize( code );\n\n\t\t\t\t\tcode.remove( this.start, this.inverted ? this.test.argument.start : this.test.start );\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, this.inverted ? '&&' : '||' );\n\t\t\t\t} else {\n\t\t\t\t\tlet before = '(';\n\t\t\t\t\tlet after = ')';\n\n\t\t\t\t\tlet start = this.test.start;\n\n\t\t\t\t\tif ( this.inverted ) {\n\t\t\t\t\t\tstart = this.test.argument.start;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbefore += '!';\n\n\t\t\t\t\t\tif ( this.test.getPrecedence() < 16 ) { // 16 is the precedence of unary expressions\n\t\t\t\t\t\t\tbefore += '(';\n\t\t\t\t\t\t\tafter += ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.overwrite( this.start + 2, start, before );\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, after );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// TODO is `removed` still used?\n\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\tthis.removed = true;\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\tcode.remove( this.test.end, this.end );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// special case - empty alternate\n\t\tif ( this.alternate && this.alternate.isEmpty() ) {\n\t\t\t// don't minify alternate\n\t\t\tthis.consequent.minify( code, chars );\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tif ( this.consequent.canSequentialise() ) {\n\t\t\t\tif ( shouldParenthesiseTest ) this.test.parenthesize( code );\n\t\t\t\tif ( shouldParenthesiseConsequent ) this.consequent.parenthesize( code );\n\n\t\t\t\tcode.remove( this.start, ( this.inverted ? this.test.argument.start : this.test.start ) );\n\t\t\t\tcode.remove( this.consequent.getRightHandSide().end, this.end );\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, this.inverted ? '||' : '&&' );\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start, this.test.start, 'if(' );\n\n\t\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\t\t\t\tif ( this.end > this.consequent.end + 1 ) code.remove( this.consequent.end, this.end - 1 );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.consequent.minify( code, chars );\n\t\tif ( this.alternate ) this.alternate.minify( code, chars );\n\n\t\tif ( this.canSequentialise() ) {\n\t\t\tif ( this.inverted ) code.remove( this.test.start, this.test.start + 1 );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.rewriteAsTernaryExpression( code, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t} else {\n\t\t\t\tthis.rewriteAsLogicalExpression( code, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start + 2, this.test.start, '(' );\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tconst lastNodeOfConsequent = this.consequent.getRightHandSide();\n\t\t\t\tconst firstNodeOfAlternate = this.alternate.getLeftHandSide();\n\n\t\t\t\tlet gap = ( endsWithCurlyBraceOrSemicolon( lastNodeOfConsequent ) ? '' : ';' ) + 'else';\n\t\t\t\tif ( invalidChars.test( code.original[ firstNodeOfAlternate.start ] ) ) gap += ' ';\n\n\t\t\t\tlet c = this.consequent.end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\n\t\t\t\tcode.overwrite( c, this.alternate.start, gap );\n\t\t\t}\n\t\t}\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\t// TODO make this a method of nodes\n\t\tif ( this.consequent.type === 'BlockStatement' ) {\n\t\t\tfor ( let statement of this.consequent.body ) {\n\t\t\t\tif ( statement.skip ) continue;\n\t\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.consequent.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t}\n\n\t\tif ( this.alternate ) {\n\t\t\tif ( this.alternate.type === 'ExpressionStatement' ) return false;\n\t\t\tif ( this.alternate.type === 'ReturnStatement' ) return returnStatements.push( this.alternate ), false;\n\t\t\tif ( this.alternate.type === 'IfStatement' ) return this.alternate.preventsCollapsedReturns( returnStatements );\n\n\t\t\tif ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\tfor ( let statement of this.alternate.body ) {\n\t\t\t\t\tif ( statement.skip ) continue;\n\t\t\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( this.alternate.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t\t}\n\t\t}\n\t}\n\n\trewriteAsLogicalExpression ( code, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tcode.remove( this.start, this.test.start );\n\n\t\tif ( shouldParenthesiseTest ) this.test.parenthesize( code );\n\t\tif ( shouldParenthesiseConsequent ) this.consequent.parenthesize( code );\n\n\t\tcode.overwrite( this.test.end, this.consequent.start, this.inverted ? '||' : '&&' );\n\t}\n\n\trewriteAsTernaryExpression ( code, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tthis.rewriteAsSequence = true;\n\n\t\tlet shouldParenthesiseAlternate = false;\n\t\t// TODO simplify this\n\t\tif ( this.alternate.type === 'IfStatement' ) {\n\t\t\tshouldParenthesiseAlternate = false;\n\t\t} else if ( this.alternate.type === 'BlockStatement' ) {\n\t\t\tshouldParenthesiseAlternate = this.alternate.body.length > 1 || this.alternate.body[0].getPrecedence() < 4;\n\t\t} else {\n\t\t\tshouldParenthesiseAlternate = this.alternate.getPrecedence() < 4;\n\t\t}\n\n\t\t// if ( this.alternate.type === 'BlockStatement' ) {\n\t\t// \tif ( this.alternate.body.length > 1 ) {\n\t\t// \t\tshouldParenthesiseAlternate = true;\n\t\t// \t} else if ( this.alternate.body[0].type !== 'IfStatement' ) {\n\t\t// \t\tshouldParenthesiseAlternate = this.alternate.body[0].getPrecedence() < 4;\n\t\t// \t}\n\t\t// }\n\n\t\t// const shouldParenthesiseAlternate = this.alternate.type === 'BlockStatement' ?\n\t\t// \t( this.alternate.body.length === 1 ? getPrecedence( this.alternate.body[0] ) < 4 : true ) :\n\t\t// \tfalse; // TODO <-- is this right? Ternaries are r-to-l, so... maybe?\n\n\t\tif ( shouldParenthesiseTest ) this.test.parenthesize( code );\n\t\tif ( shouldParenthesiseConsequent ) this.consequent.parenthesize( code );\n\t\tif ( shouldParenthesiseAlternate ) this.alternate.parenthesize( code );\n\n\t\tcode.remove( this.start, this.test.start );\n\t\tcode.overwrite( this.test.end, this.consequent.start, '?' );\n\n\t\tlet consequentEnd = this.consequent.end;\n\t\twhile ( code.original[ consequentEnd - 1 ] === ';' ) consequentEnd -= 1;\n\t\tcode.remove( consequentEnd, this.alternate.start );\n\n\t\tlet alternateEnd = this.alternate.end;\n\t\twhile ( code.original[ alternateEnd - 1 ] === ';' ) alternateEnd -= 1;\n\n\t\tif ( this.inverted ) {\n\t\t\tcode.move( this.alternate.start, alternateEnd, this.consequent.start );\n\t\t\tcode.move( this.consequent.start, consequentEnd, alternateEnd );\n\n\t\t\tcode.prependRight( this.consequent.getLeftHandSide().start, ':' );\n\t\t} else {\n\t\t\tcode.appendLeft( this.alternate.getLeftHandSide().start, ':' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDeclaration extends Node {\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'import' );\n\t\tif ( this.specifiers.length ) program.addWord( 'from' );\n\t\tprogram.addWord( this.source.value );\n\n\t\tsuper.initialise( program, scope );\n\t}\n}","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise ( program, scope ) {\n\t\tthis.local.declaration = this;\n\n\t\tscope.addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( program, scope );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise ( program, scope ) {\n\t\tthis.local.declaration = this;\n\n\t\tscope.addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( program, scope );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class LabeledStatement extends Node {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( this.label.name );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\t// TODO can we mangle labels?\n\n\t\tif ( this.body.start > this.label.end + 1 ) {\n\t\t\tcode.overwrite( this.label.end, this.body.start, ':' );\n\t\t}\n\n\t\t// special case — empty body\n\t\tif ( this.body.isEmpty() ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t} else {\n\t\t\tthis.body.minify( code, chars );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport stringify from '../../utils/stringify.js';\n\nexport default class Literal extends Node {\n\tattachScope ( program, scope ) {\n\t\tif ( this.value === 'use strict' ) {\n\t\t\tconst block = this.parent.parent;\n\t\t\tif ( block.type === 'Program' || /Function/.test( block.parent.type ) ) {\n\t\t\t\tconst body = block.body;\n\t\t\t\tif ( body.indexOf( this.parent ) === 0 ) {\n\t\t\t\t\t// TODO use this! add pragma to blocks when minifying them\n\t\t\t\t\tscope.useStrict = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetPrecedence () {\n\t\treturn 21;\n\t}\n\n\tgetValue () {\n\t\treturn this.value;\n\t}\n\n\tinitialise ( program ) {\n\t\tprogram.addWord( stringify( this.value ) );\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.value === true || this.value === false ) {\n\t\t\tcode.overwrite( this.start, this.end, this.value ? '!0' : '!1', {\n\t\t\t\tcontentOnly: true\n\t\t\t});\n\t\t}\n\n\t\telse if ( typeof this.value === 'number' ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( this.value ), {\n\t\t\t\tcontentOnly: true\n\t\t\t});\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nexport default class LogicalExpression extends Node {\n\tgetLeftHandSide () {\n\t\tconst leftValue = this.left.getValue();\n\n\t\tif ( leftValue === UNKNOWN ) return this.left.getLeftHandSide();\n\n\t\treturn ( this.operator === '&&' ?\n\t\t\t( leftValue ? this.right : this.left ) :\n\t\t\t( leftValue ? this.left : this.right )\n\t\t).getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return this.operator === '&&' ? 6 : 5;\n\n\t\treturn 20; // will be replaced by a literal\n\t}\n\n\tgetRightHandSide () {\n\t\tconst leftValue = this.left.getValue();\n\n\t\tif ( leftValue === UNKNOWN ) return this.right.getRightHandSide();\n\n\t\treturn ( this.operator === '&&' ?\n\t\t\t( leftValue ? this.right : this.left ) :\n\t\t\t( leftValue ? this.left : this.right )\n\t\t).getRightHandSide();\n\t}\n\n\tgetValue () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return UNKNOWN;\n\n\t\tif ( this.operator === '&&' ) {\n\t\t\tif ( leftValue ) return rightValue;\n\t\t} else {\n\t\t\tif ( leftValue ) return leftValue;\n\t\t\treturn rightValue;\n\t\t}\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst leftValue = this.left.getValue();\n\n\t\tif ( leftValue === UNKNOWN ) {\n\t\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t\t}\n\n\t\t\tsuper.minify( code, chars );\n\t\t}\n\n\t\telse if ( leftValue ) {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code, chars );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.left.end, this.end );\n\t\t\t\tthis.left.minify( code, chars );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.left.end, this.end );\n\t\t\t\tthis.left.minify( code, chars );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code, chars );\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { reservedLookup } from '../../utils/reserved.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\nimport getValuePrecedence from '../../utils/getValuePrecedence.js';\n\nfunction isValidIdentifier ( str ) {\n\t// TODO there's probably a bit more to it than this\n\treturn !reservedLookup[ str ] && /^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test( str );\n}\n\nfunction canFold ( node, parent ) {\n\twhile ( parent.type === 'ParenthesizedExpression' ) {\n\t\tnode = parent;\n\t\tparent = node.parent;\n\t}\n\n\tif ( parent.type === 'UpdateExpression' ) return false;\n\tif ( parent.type === 'AssignmentExpression' || /For(In|Of)Statement/.test( parent.type ) ) return node !== parent.left;\n\n\treturn true;\n}\n\nexport default class MemberExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.object.getLeftHandSide();\n\t}\n\n\tgetValue () {\n\t\tconst objectValue = this.object.getValue();\n\t\tif ( !objectValue || objectValue === UNKNOWN ) return UNKNOWN;\n\n\t\tconst propertyValue = this.computed ? this.property.getValue() : this.property.name;\n\t\tif ( propertyValue === UNKNOWN ) return UNKNOWN;\n\n\t\tconst value = objectValue[ propertyValue ];\n\t\tif ( value === UNKNOWN || typeof value === 'function' ) return UNKNOWN;\n\n\t\treturn value;\n\t}\n\n\tgetPrecedence () {\n\t\tconst value = this.getValue();\n\n\t\treturn value === UNKNOWN ? 19 : getValuePrecedence( value );\n\t}\n\n\tgetRightHandSide () {\n\t\treturn this;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( !this.computed ) program.addWord( this.property.name );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value && value !== UNKNOWN && canFold( this, this.parent ) ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// special case — numbers\n\t\tconst objectValue = this.object.getValue();\n\t\tif ( typeof objectValue === 'number' && objectValue === parseInt( objectValue, 10 ) ) {\n\t\t\tthis.object.append( code, '.' );\n\t\t}\n\n\t\tif ( this.computed ) {\n\t\t\tconst value = this.property.getValue();\n\n\t\t\tif ( String( Number( value ) ) === String( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `[${value}]` );\n\t\t\t}\n\n\t\t\telse if ( typeof value === 'string' && isValidIdentifier( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `.${value}` );\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.object.end, this.property.start, '[' );\n\t\t\t\t}\n\n\t\t\t\tif ( this.end > this.property.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.property.end, this.end, ']' );\n\t\t\t\t}\n\n\t\t\t\tthis.property.minify( code, chars );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\tcode.overwrite( this.object.end, this.property.start, '.' );\n\t\t\t}\n\t\t}\n\n\t\tthis.object.minify( code, chars );\n\t}\n}\n","function isAccessor ( property ) {\n\treturn property.kind === 'get' || property.kind === 'set';\n}\n\nexport default function minifyPropertyKey ( code, chars, property, isObject ) {\n\tif ( property.shorthand ) return;\n\n\tconst separator = ( isObject && !property.method && !isAccessor( property ) ) ? ':' : '';\n\n\tif ( property.value.async || property.value.generator || property.computed || property.static || isAccessor( property ) ) {\n\t\tlet prefix = '';\n\t\tif ( property.static ) prefix += 'static'; // only applies to class methods, obviously\n\n\t\tif ( isAccessor( property ) ) {\n\t\t\tprefix += ( property.static ) ? ` ${property.kind}` : property.kind;\n\t\t} else if ( property.value.async ) {\n\t\t\tprefix += ( property.static ? ' async' : 'async' );\n\t\t} else if ( property.value.generator ) {\n\t\t\tprefix += '*';\n\t\t}\n\n\t\tif ( property.computed ) {\n\t\t\tprefix += '[';\n\t\t} else if ( prefix && !property.value.generator ) {\n\t\t\tprefix += ' ';\n\t\t}\n\n\t\tif ( property.key.start - property.start > prefix.length ) code.overwrite( property.start, property.key.start, prefix );\n\n\t\tconst suffix = ( property.computed ? ']' : '' ) + separator;\n\t\tif ( property.value.start - property.key.end > suffix.length ) code.overwrite( property.key.end, property.value.start, suffix );\n\t}\n\n\telse if ( separator ) {\n\t\tif ( property.value.start - property.key.end > 1 ) code.overwrite( property.key.end, property.value.start, separator );\n\t}\n\n\telse {\n\t\tcode.remove( property.key.end, property.value.start );\n\t}\n\n\tproperty.key.minify( code, chars );\n}","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\n\nexport default class MethodDefinition extends Node {\n\tinitialise ( program, scope ) {\n\t\tif ( !this.computed ) program.addWord( this.key.name );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tminifyPropertyKey( code, chars, this, false );\n\t\tthis.value.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class NewExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.arguments.length > 0 ? 19 : 18;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'new' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end ) {\n\t\t\tcode.remove( this.callee.end, this.end );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nexport default class ObjectExpression extends Node {\n\tgetValue () {\n\t\treturn UNKNOWN;\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.properties.length ) {\n\t\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t\tconst p = this.properties[i];\n\n\t\t\t\tif ( p.start > c + 1 ) code.overwrite( c, p.start, i ? ',' : '{' );\n\n\t\t\t\tminifyPropertyKey( code, chars, p, true );\n\t\t\t\tp.value.minify( code, chars );\n\n\t\t\t\tc = p.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\tcode.overwrite( this.start, this.end, '{}' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ObjectPattern extends Node {\n\tminify ( code, chars ) {\n\t\tlet c = this.start + 1;\n\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t// TODO remove unused properties\n\t\t\tconst property = this.properties[i];\n\t\t\tproperty.minify( code, chars );\n\n\t\t\tif ( property.start > c ) code.overwrite( c, property.start, i ? ',' : '' );\n\t\t\tc = property.end;\n\t\t}\n\n\t\tcode.remove( c, this.end - 1 );\n\t}\n}\n","import Node from '../Node.js';\n\nfunction shouldRemoveParens ( expression, parent ) {\n\tif ( /^Object/.test( expression.getLeftHandSide().type ) || /^Object/.test( expression.getRightHandSide().type ) ) {\n\t\treturn false;\n\t}\n\n\tif ( expression.type === 'CallExpression' ) {\n\t\treturn expression.callee.type === 'FunctionExpression' && parent.type === 'ExpressionStatement';\n\t}\n\n\tif ( expression.type === 'FunctionExpression' ) {\n\t\treturn (\n\t\t\t( parent.type === 'CallExpression' && parent.parent.type === 'ExpressionStatement' ) ||\n\t\t\t( parent.type === 'ExpressionStatement' && parent.parent.type === 'CallExpression' )\n\t\t);\n\t}\n\n\t// special case — `(-x)**y`\n\tif ( expression.type === 'UnaryExpression' && parent.type === 'BinaryExpression' && parent.operator === '**' ) {\n\t\tif ( parent.left.contains( expression ) ) return false;\n\t}\n\n\tconst expressionPrecedence = expression.getPrecedence();\n\tconst parentPrecedence = parent.getPrecedence();\n\n\tif ( parentPrecedence > expressionPrecedence ) return false;\n\tif ( expressionPrecedence > parentPrecedence ) return true;\n\n\tif ( expression.type === 'UnaryExpression' ) return true;\n\tif ( expression.type === 'AssignmentExpression' ) return true;\n\tif ( expression.type === 'LogicalExpression' || expression.type === 'BinaryExpression' ) {\n\t\treturn ( parent.operator === '**' ? parent.right : parent.left ).contains( expression );\n\t}\n}\n\nexport default class ParenthesizedExpression extends Node {\n\tgetLeftHandSide () {\n\t\tlet node = this;\n\n\t\twhile ( node.type === 'ParenthesizedExpression' ) {\n\t\t\tnode = node.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( node, this.parent ) ) return node.getLeftHandSide();\n\t\treturn node.parent;\n\t}\n\n\tgetRightHandSide () {\n\t\tlet node = this;\n\n\t\twhile ( node.type === 'ParenthesizedExpression' ) {\n\t\t\tnode = node.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( node, this.parent ) ) return node.getRightHandSide();\n\t\treturn node.parent;\n\t}\n\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tgetValue () {\n\t\treturn this.expression.getValue();\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet start = this.start;\n\t\tlet end = this.end;\n\t\tlet parent = this.parent;\n\n\t\tlet expression = this.expression;\n\t\twhile ( expression.type === 'ParenthesizedExpression' ) expression = expression.expression;\n\n\t\tif ( shouldRemoveParens( expression, parent ) ) {\n\t\t\tcode.remove( start, expression.start );\n\t\t\tcode.remove( expression.end, end );\n\t\t} else {\n\t\t\tif ( expression.start > this.start + 1 ) code.remove( this.start + 1, expression.start );\n\t\t\tif ( this.end > expression.end + 1 ) code.remove( expression.end, this.end - 1 );\n\t\t}\n\n\t\t// special case (?) – IIFE\n\t\tif (\n\t\t\t(\n\t\t\t\tthis.parent.type === 'CallExpression' &&\n\t\t\t\tthis.parent.parent.type === 'ExpressionStatement' &&\n\t\t\t\texpression.type === 'FunctionExpression'\n\t\t\t) ||\n\t\t\t(\n\t\t\t\tthis.parent.type === 'ExpressionStatement' &&\n\t\t\t\texpression.type === 'CallExpression' &&\n\t\t\t\texpression.callee.type === 'FunctionExpression'\n\t\t\t)\n\t\t) {\n\t\t\texpression.prepend( code, '!' ); // could be any unary operator – uglify uses !\n\t\t}\n\n\t\texpression.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\nexport default class ReturnStatement extends Node {\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'return' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( !this.argument ) return;\n\n\t\tconst value = this.argument.getValue();\n\n\t\tconst needsTrailingWhitespace = value === UNKNOWN ?\n\t\t\tinvalidChars.test( code.original[ this.argument.getLeftHandSide().start ] ) :\n\t\t\tinvalidChars.test( stringify( value )[0] );\n\n\t\tif ( needsTrailingWhitespace && this.argument.start === this.start + 6 ) {\n\t\t\t// ensure that parenthesized expression isn't too close\n\t\t\tcode.appendLeft( this.start + 6, ' ' );\n\t\t}\n\n\t\tlet c = this.start + ( needsTrailingWhitespace ? 7 : 6 );\n\t\tif ( this.argument.start > c ) {\n\t\t\tcode.remove( c, this.argument.start );\n\t\t}\n\n\t\tthis.argument.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SpreadElement extends Node {\n\tgetPrecedence () {\n\t\treturn 1;\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SwitchCase extends Node {\n\tgetRightHandSide () {\n\t\tif ( this.consequent.length > 0 ) {\n\t\t\treturn this.consequent[ this.consequent.length - 1 ].getRightHandSide();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( this.test ? 'case' : 'default' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tlet c;\n\n\t\tif ( this.test ) {\n\t\t\tthis.test.minify( code, chars );\n\n\t\t\tif ( this.test.start > this.start + 5 ) {\n\t\t\t\tcode.remove( this.start + 5, this.test.start );\n\t\t\t}\n\n\t\t\tc = this.test.end;\n\t\t} else {\n\t\t\t// default\n\t\t\tc = this.start + 7;\n\t\t}\n\n\t\tthis.consequent.forEach( ( statement, i ) => {\n\t\t\tstatement.minify( code, chars );\n\n\t\t\tconst separator = i ? ';' : ':'; // TODO can consequents be written as sequences?\n\n\t\t\tif ( statement.start === c ) {\n\t\t\t\tcode.appendLeft( c, separator );\n\t\t\t} else {\n\t\t\t\tif ( code.original.slice( c, statement.start ) !== separator ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, separator );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = statement.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t});\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nexport default class SwitchStatement extends Node {\n\tinitialise ( program, scope ) {\n\t\tsuper.initialise( program, scope );\n\n\t\tif ( this.cases.length === 0 ) {\n\t\t\tconst value = this.discriminant.getValue();\n\t\t\tthis.skip = value !== UNKNOWN || this.discriminant.type === 'Identifier';\n\t\t}\n\n\t\tif ( !this.skip ) {\n\t\t\tprogram.addWord( 'switch' );\n\t\t}\n\t}\n\n\tminify ( code, chars ) {\n\t\t// special (and unlikely!) case — no cases, but a non-removable discriminant\n\t\tif ( this.cases.length === 0 ) {\n\t\t\tthis.discriminant.minify( code, chars );\n\t\t\tcode.remove( this.start, this.discriminant.start );\n\t\t\tcode.remove( this.discriminant.end, this.end );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.discriminant.start > this.start + 7 ) {\n\t\t\t\tcode.overwrite( this.start + 6, this.discriminant.start, '(' );\n\t\t\t}\n\n\t\t\tlet c = this.discriminant.end;\n\n\t\t\tthis.cases.forEach( ( switchCase, i ) => {\n\t\t\t\tcode.remove( c, switchCase.start );\n\t\t\t\tswitchCase.prepend( code, i > 0 ? ';' : '){' );\n\n\t\t\t\tc = switchCase.end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\t});\n\n\t\t\tif ( this.end > c + 1 ) code.overwrite( c, this.end, '}' );\n\n\t\t\tsuper.minify( code, chars );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TaggedTemplateExpression extends Node {\n\tminify ( code, chars ) {\n\t\tif ( this.quasi.start > this.tag.end ) code.remove( this.tag.end, this.quasi.start );\n\t\tthis.quasi.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nexport default class TemplateLiteral extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.expressions.length );\n\t\tlet i;\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst expression = this.expressions[i];\n\t\t\tconst value = expression.getValue();\n\n\t\t\tif ( value === UNKNOWN ) return UNKNOWN;\n\n\t\t\tvalues[i] = value;\n\t\t}\n\n\t\tlet result = '';\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst value = values[i];\n\n\t\t\tresult += this.quasis[i].value.raw;\n\t\t\tresult += value;\n\t\t}\n\n\t\tresult += this.quasis[i].value.raw;\n\n\t\treturn result;\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.parent.type !== 'TaggedTemplateExpression' ) {\n\t\t\tconst value = this.getValue();\n\n\t\t\tif ( value !== UNKNOWN ) {\n\t\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet c = this.start;\n\t\tlet i;\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst quasi = this.quasis[i];\n\t\t\tconst nextQuasi = this.quasis[i+1];\n\t\t\tconst expression = this.expressions[i];\n\n\t\t\tconst value = expression.getValue();\n\t\t\tif ( typeof value === 'object' ) { // includes both UNKNOWN and known non-primitives\n\t\t\t\texpression.minify( code, chars );\n\n\t\t\t\tif ( expression.start > quasi.end + 2 ) {\n\t\t\t\t\tcode.remove( quasi.end + 2, expression.start );\n\t\t\t\t}\n\n\t\t\t\tc = ( nextQuasi ? nextQuasi.start : this.end ) - 1;\n\t\t\t\tif ( expression.end < c ) code.remove( expression.end, c );\n\t\t\t} else {\n\t\t\t\tcode.overwrite( quasi.end, expression.end, String( value ) );\n\t\t\t\tc = ( nextQuasi ? nextQuasi.start : this.end - 1 );\n\t\t\t\tif ( expression.end < c ) code.remove( expression.end, c );\n\t\t\t}\n\t\t}\n\n\t\tconst lastQuasi = this.quasis[i];\n\n\t\tif ( lastQuasi.start > c + 1 ) {\n\t\t\tcode.remove( c, lastQuasi.start - 1 );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TryStatement extends Node {\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'try' );\n\t\tif ( this.finalizer ) program.addWord( 'finally' );\n\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.block.start > this.start + 3 ) code.remove( this.start + 3, this.block.start );\n\n\t\tif ( this.handler ) {\n\t\t\tif ( this.handler.start > this.block.end ) {\n\t\t\t\tcode.remove( this.block.end, this.handler.start );\n\t\t\t}\n\n\t\t\tif ( this.finalizer && this.finalizer.start > this.handler.end + 7 ) {\n\t\t\t\tcode.overwrite( this.handler.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.finalizer.start > this.block.end + 7 ) {\n\t\t\t\tcode.overwrite( this.block.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\nimport getValuePrecedence from '../../utils/getValuePrecedence.js';\n\nconst calculators = {\n\t'!': x => !x,\n\t'~': x => ~x,\n\t'+': x => +x,\n\t'-': x => -x,\n\t'typeof': x  => typeof x,\n\t'void'  : x  => void x,\n\t'delete': () => UNKNOWN\n};\n\nexport default class UnaryExpression extends Node {\n\tgetPrecedence () {\n\t\tconst value = this.getValue();\n\t\treturn value === UNKNOWN ? 16 : getValuePrecedence( value );\n\t}\n\n\tgetValue () {\n\t\tconst arg = this.argument.getValue();\n\n\t\tif ( arg === UNKNOWN ) return UNKNOWN;\n\t\treturn calculators[ this.operator ]( arg );\n\t}\n\n\tminify ( code, chars ) {\n\t\tconst value = this.getValue();\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tconst len = this.operator.length;\n\t\t\tconst start = this.start + len;\n\n\t\t\tconst insertWhitespace = len > 1 && this.argument.getLeftHandSide().type !== 'ParenthesizedExpression';\n\t\t\tif ( insertWhitespace ) code.appendLeft( start, ' ' );\n\n\t\t\tcode.remove( start, this.argument.start );\n\n\t\t\tsuper.minify( code, chars );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class UpdateExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.prefix ? 16 : 17;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tif ( this.argument.type === 'Identifier' ) {\n\t\t\tconst declaration = scope.findDeclaration( this.argument.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( program, scope );\n\t}\n}\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nfunction compatibleDeclarations ( a, b ) {\n\tif ( a === b ) return true;\n\tif ( a === 'var' || b === 'var' ) return false;\n\treturn true;\n}\n\nexport default class VariableDeclaration extends Node {\n\tattachScope ( program, scope ) {\n\t\tthis.declarations.forEach( declarator => {\n\t\t\tdeclarator.attachScope( program, scope );\n\t\t});\n\n\t\tscope.functionScope.varDeclarationNodes.push( this );\n\t}\n\n\tinitialise ( program, scope ) {\n\t\t// TODO `program.addWord(kind)`, but only if this declaration is included...\n\n\t\tlet _scope = scope;\n\t\tif ( this.kind === 'var' ) while ( _scope.isBlockScope ) _scope = _scope.parent;\n\n\t\tif ( !_scope.parent ) {\n\t\t\tthis.skip = false;\n\t\t}\n\n\t\tthis.declarations.forEach( declarator => {\n\t\t\tif ( !_scope.parent ) {\n\t\t\t\t// only initialise top-level variables. TODO unless we're in e.g. module mode\n\t\t\t\tdeclarator.initialise( program, scope );\n\t\t\t} else {\n\t\t\t\tif ( declarator.init ) declarator.init.initialise( program, scope );\n\t\t\t}\n\t\t});\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.collapsed ) return;\n\n\t\t// collapse consecutive declarations into one\n\t\tconst declarations = this.declarations;\n\n\t\tif ( this.parent.type === 'BlockStatement' || this.parent.type === 'Program' ) {\n\t\t\tlet index = this.parent.body.indexOf( this ) + 1;\n\t\t\tdo {\n\t\t\t\tconst next = this.parent.body[ index ];\n\t\t\t\tif ( next && next.type === 'VariableDeclaration' && compatibleDeclarations( next.kind, this.kind ) ) {\n\t\t\t\t\tdeclarations.push( ...next.declarations );\n\t\t\t\t\tnext.collapsed = true;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tindex += 1;\n\t\t\t} while ( index < this.parent.body.length );\n\t\t}\n\n\t\tlet allDupes = declarations.every( declarator => {\n\t\t\tif ( declarator.skip ) return true;\n\n\t\t\tconst names = extractNames( declarator.id );\n\t\t\treturn names.length > 0 && names.every( identifier => {\n\t\t\t\treturn identifier.isDuplicate;\n\t\t\t});\n\t\t});\n\n\t\tconst kind = this.kind === 'const' ? 'let' : this.kind; // TODO preserve const at top level?\n\t\tlet c = this.start;\n\t\tlet first = true;\n\t\tlet needsKeyword = !allDupes;\n\n\t\tfor ( let i = 0; i < declarations.length; i += 1 ) {\n\t\t\tconst declarator = declarations[i];\n\n\t\t\tif ( declarator.skip ) {\n\t\t\t\tif ( !declarator.init || declarator.init.skip ) continue;\n\n\t\t\t\tdeclarator.init.minify( code, chars );\n\n\t\t\t\t// we have a situation like `var unused = x()` — need to preserve `x()`\n\t\t\t\tcode.overwrite( c, declarator.init.start, first ? '' : ';' );\n\t\t\t\tneedsKeyword = true;\n\t\t\t} else {\n\t\t\t\tdeclarator.minify( code, chars );\n\n\t\t\t\tlet separator = needsKeyword ?\n\t\t\t\t\t( first ? kind : `;${kind}` ) + ( declarator.id.type === 'Identifier' ? ' ' : '' ) :\n\t\t\t\t\tfirst ? '' : ',';\n\n\t\t\t\tcode.overwrite( c, declarator.start, separator );\n\t\t\t\tneedsKeyword = false;\n\t\t\t}\n\n\t\t\tc = declarator.end;\n\t\t\tfirst = false;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\n\t\t// we may have been asked to declare some additional vars, if they were\n\t\t// declared inside blocks that have been removed\n\t\tif ( this.rideAlongs ) code.appendLeft( c, `,` + this.rideAlongs.join( ',' ) );\n\t}\n}\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nfunction mightHaveSideEffects ( node ) {\n\t// TODO this can get way more sophisticated\n\tif ( node.type === 'Identifier' || node.type === 'Literal' || /FunctionExpression/.test( node.type ) ) return false;\n\treturn true;\n}\n\nexport default class VariableDeclarator extends Node {\n\tactivate () {\n\t\tif ( this.activated ) return;\n\t\tthis.activated = true;\n\n\t\tthis.skip = this.parent.skip = false;\n\t\tthis.id.initialise( this.program, this.scope );\n\t\tif ( this.init ) this.init.initialise( this.program, this.scope );\n\t}\n\n\tattachScope ( program, scope ) {\n\t\tthis.program = program;\n\t\tthis.scope = scope;\n\n\t\tconst kind = this.parent.kind;\n\n\t\tthis.id.attachScope( program, scope );\n\n\t\tif ( this.init ) {\n\t\t\tthis.init.attachScope( program, scope );\n\n\t\t\tif ( mightHaveSideEffects( this.init ) ) {\n\t\t\t\tthis.parent.skip = false;\n\t\t\t}\n\t\t}\n\n\t\textractNames( this.id ).forEach( node => {\n\t\t\tnode.declaration = this;\n\t\t\tscope.addDeclaration( node, kind );\n\t\t});\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.init ) {\n\t\t\tif ( this.init.start > this.id.end + 1 ) code.overwrite( this.id.end, this.init.start, '=' );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class WhileStatement extends Node {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'while' );\n\t\tsuper.initialise( program, scope );\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.test.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.test.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.test.end + 1 ) {\n\t\t\tcode.overwrite( this.test.end, this.body.start, ')' );\n\t\t}\n\n\t\t// special case — empty body\n\t\tif ( this.body.isEmpty() ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t}\n\n\t\tsuper.minify( code, chars );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class YieldExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 2;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tprogram.addWord( 'yield' );\n\t\tsuper.initialise( program, scope );\n\t}\n}\n","import Array from './shared/Array.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport CallExpression from './CallExpression.js';\nimport CatchClause from './CatchClause.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ConditionalExpression from './ConditionalExpression.js';\nimport DoWhileStatement from './DoWhileStatement.js';\nimport EmptyStatement from './EmptyStatement.js';\nimport ExpressionStatement from './ExpressionStatement.js';\nimport ForStatement from './ForStatement.js';\nimport ForInOfStatement from './shared/ForInOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport IfStatement from './IfStatement.js';\nimport ImportDeclaration from './ImportDeclaration.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport LabeledStatement from './LabeledStatement.js';\nimport Literal from './Literal.js';\nimport LogicalExpression from './LogicalExpression.js';\nimport MemberExpression from './MemberExpression.js';\nimport MethodDefinition from './MethodDefinition.js';\nimport NewExpression from './NewExpression.js';\nimport ObjectExpression from './ObjectExpression.js';\nimport ObjectPattern from './ObjectPattern.js';\nimport ParenthesizedExpression from './ParenthesizedExpression.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport SpreadElement from './SpreadElement.js';\nimport SwitchCase from './SwitchCase.js';\nimport SwitchStatement from './SwitchStatement.js';\nimport TaggedTemplateExpression from './TaggedTemplateExpression.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport TryStatement from './TryStatement.js';\nimport UnaryExpression from './UnaryExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\nimport WhileStatement from './WhileStatement.js';\nimport YieldExpression from './YieldExpression.js';\n\nexport default {\n\tArrayExpression: Array,\n\tArrayPattern: Array,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tBinaryExpression,\n\tCallExpression,\n\tCatchClause,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tConditionalExpression,\n\tDoWhileStatement,\n\tEmptyStatement,\n\tExpressionStatement,\n\tForStatement,\n\tForInStatement: ForInOfStatement,\n\tForOfStatement: ForInOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tIfStatement,\n\tImportDeclaration,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tLabeledStatement,\n\tLiteral,\n\tLogicalExpression,\n\tMemberExpression,\n\tMethodDefinition,\n\tNewExpression,\n\tObjectExpression,\n\tObjectPattern,\n\tParenthesizedExpression,\n\tReturnStatement,\n\tSpreadElement,\n\tSwitchCase,\n\tSwitchStatement,\n\tTaggedTemplateExpression,\n\tTemplateLiteral,\n\tTryStatement,\n\tUnaryExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement,\n\tYieldExpression\n};\n","import { UNKNOWN } from '../utils/sentinels.js';\n\n// TODO make this a method of nodes\nexport default function breaksExecution ( node ) {\n\tif ( node.type === 'ReturnStatement' || node.type === 'BreakStatement' || node.type === 'ContinueStatement' ) {\n\t\treturn node;\n\t}\n\n\tif ( node.type === 'BlockStatement' ) {\n\t\tlet i = node.body.length;\n\t\twhile ( i-- ) {\n\t\t\tconst maybeReturnNode = breaksExecution( node.body[i] );\n\t\t\tif ( maybeReturnNode ) return maybeReturnNode;\n\t\t}\n\t}\n\n\tif ( node.type === 'IfStatement' ) {\n\t\tconst testValue = node.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) return null;\n\n\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\treturn breaksExecution( node.consequent );\n\t\t}\n\n\t\t// if ( false ) {...}\n\t\tif ( !node.alternate ) return null;\n\n\t\treturn breaksExecution( node.alternate );\n\t}\n}\n","import Node from './Node.js';\nimport Scope from './Scope.js';\nimport extractNames from './extractNames.js';\nimport breaksExecution from '../analysis/breaksExecution.js';\n\nconst shouldPreserveAfterReturn = {\n\tFunctionDeclaration: true,\n\tVariableDeclaration: true,\n\tClassDeclaration: true\n};\n\nconst allowsBlockLessStatement = {\n\tBlockStatement: true,\n\tForStatement: true,\n\tForInStatement: true,\n\tForOfStatement: true,\n\tIfStatement: true,\n\tWhileStatement: true\n};\n\nfunction endsWithCurlyBrace ( statement ) { // TODO can we just use getRightHandSide?\n\tif ( statement.type === 'IfStatement' ) {\n\t\tif ( statement.rewriteAsSequence ) return false;\n\n\t\tif ( statement.alternate ) {\n\t\t\tif ( statement.alternate.type === 'IfStatement' ) {\n\t\t\t\treturn endsWithCurlyBrace( statement.alternate );\n\t\t\t}\n\n\t\t\tif ( statement.alternate.type !== 'BlockStatement' ) return false;\n\t\t\tif ( statement.alternate.canRemoveCurlies() ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn statement.consequent.type === 'BlockStatement' && !statement.consequent.canRemoveCurlies();\n\t}\n\n\tif ( /^(?:For(?:In|Of)?|While)Statement/.test( statement.type ) ) {\n\t\treturn statement.body.type === 'BlockStatement' && !statement.body.canRemoveCurlies();\n\t}\n\n\tif ( statement.type === 'SwitchStatement' ) return true;\n\n\treturn /(?:Class|Function)Declaration/.test( statement.type );\n}\n\nfunction isVarDeclaration ( node ) {\n\treturn node.kind === 'var';\n}\n\nexport default class BlockStatement extends Node {\n\tattachScope ( program, parent ) {\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\n\n\t\tif ( this.parentIsFunction ) {\n\t\t\tthis.scope = parent;\n\t\t} else {\n\t\t\tthis.scope = new Scope({\n\t\t\t\tblock: true,\n\t\t\t\tparent\n\t\t\t});\n\t\t}\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tthis.body[i].attachScope( program, this.scope );\n\t\t}\n\t}\n\n\tcanRemoveCurlies () {\n\t\treturn allowsBlockLessStatement[ this.parent.type ] && ( this.canSequentialise() || ( this.body.length > 0 && this.body.every( isVarDeclaration ) ) );\n\t}\n\n\t// TODO memoize\n\tcanSequentialise () {\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst node = this.body[i];\n\t\t\tif ( !node.skip && !node.canSequentialise() ) return false; // TODO what if it's a block with a late-activated declaration...\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// TODO what is this about?\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tthis.body.forEach( node => {\n\t\t\tif ( node.type === 'VariableDeclaration' && node.kind === 'var' ) {\n\t\t\t\tnode.declarations.forEach( declarator => {\n\t\t\t\t\textractNames( declarator.id ).forEach( identifier => {\n\t\t\t\t\t\tvarsToHoist[ identifier.name ] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnode.findVarDeclarations( varsToHoist );\n\t\t\t}\n\t\t});\n\t}\n\n\tgetLeftHandSide () {\n\t\tif ( this.body.length > 0 && ( this.canSequentialise() || this.body.every( isVarDeclaration ) ) ) {\n\t\t\treturn this.body[0].getLeftHandSide();\n\t\t}\n\t\treturn this;\n\t}\n\n\tgetRightHandSide () {\n\t\tif ( this.body.length > 0 && ( this.canSequentialise() || this.body.every( isVarDeclaration ) ) ) {\n\t\t\treturn this.body[this.body.length - 1].getRightHandSide();\n\t\t}\n\t\treturn this;\n\t}\n\n\tinitialise ( program, scope ) {\n\t\tlet executionIsBroken = false;\n\t\tlet maybeReturnNode;\n\t\tlet hasDeclarationsAfterBreak = false;\n\n\t\tlet canCollapseReturns = this.parentIsFunction;\n\t\tlet returnStatements = [];\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst node = this.body[i];\n\n\t\t\tif ( executionIsBroken ) {\n\t\t\t\tif ( shouldPreserveAfterReturn[ node.type ] ) {\n\t\t\t\t\thasDeclarationsAfterBreak = true;\n\t\t\t\t\tnode.initialise( program, this.scope || scope );\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmaybeReturnNode = breaksExecution( node );\n\t\t\tif ( maybeReturnNode ) executionIsBroken = true;\n\n\t\t\tnode.initialise( program, this.scope || scope );\n\n\t\t\tif ( canCollapseReturns ) {\n\t\t\t\tif ( node.preventsCollapsedReturns( returnStatements ) ) {\n\t\t\t\t\tcanCollapseReturns = false;\n\t\t\t\t} else {\n\t\t\t\t\t// console.log( `${node.type} preventsCollapsedReturns`)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.collapseReturnStatements = canCollapseReturns && returnStatements.length;\n\t\tthis.returnStatements = returnStatements;\n\n\t\t// if `return` is the last line of a function, remove it\n\t\tif ( maybeReturnNode && this.parentIsFunction && !hasDeclarationsAfterBreak ) {\n\t\t\t// TODO also capture `return undefined` and `return void 0` etc?\n\t\t\tif ( !maybeReturnNode.argument ) {\n\t\t\t\tmaybeReturnNode.skip = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO remove block.isEmpty() in favour of block.skip — this is a hangover from\n\t// when variables could get activated after we'd finished initialising a block\n\tisEmpty () {\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst node = this.body[i];\n\t\t\tif ( !node.skip ) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tminify ( code, chars ) {\n\t\tif ( this.scope ) {\n\t\t\tthis.scope.mangle( code, chars );\n\t\t}\n\n\t\tlet insertedVarDeclaration = '';\n\n\t\tif ( this.parentIsFunction || this.parent.type === 'Root' ) {\n\t\t\t// if there are any vars inside removed blocks, they need\n\t\t\t// to be declared here\n\t\t\tconst hoisted = [];\n\t\t\tthis.scope.hoistedVars.forEach( name => {\n\t\t\t\tconst hoistedVar = this.scope.declarations[name];\n\t\t\t\tif ( hoistedVar.activated ) {\n\t\t\t\t\thoisted.push( hoistedVar.alias || hoistedVar.name );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif ( hoisted.length ) {\n\t\t\t\t// see if there's an existing var declaration we can glom these onto\n\t\t\t\tconst varDeclaration = this.scope.varDeclarationNodes.find( node => {\n\t\t\t\t\twhile ( node !== this ) {\n\t\t\t\t\t\tif ( node.skip ) return false;\n\t\t\t\t\t\tnode = node.parent;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tif ( varDeclaration ) {\n\t\t\t\t\tvarDeclaration.rideAlongs = hoisted;\n\t\t\t\t} else {\n\t\t\t\t\tinsertedVarDeclaration = `var ${hoisted.join(',')};`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst sequentialise = !this.parentIsFunction && this.canSequentialise();\n\t\tconst removeCurlies = this.canRemoveCurlies();\n\t\tconst separator = sequentialise ? ',' : ';';\n\n\t\t// remove leading whitespace\n\t\tlet lastEnd = ( this.parent.type === 'Root' || removeCurlies ) ? this.start : this.start + 1;\n\t\tconst end = ( this.parent.type === 'Root' || removeCurlies ) ? this.end : this.end - 1;\n\n\t\tconst statements = this.body.filter( statement => !statement.skip );\n\t\tlet lastStatement;\n\n\t\tif ( statements.length ) {\n\t\t\tlet nextSeparator = ( ( this.scope && this.scope.useStrict && ( !this.scope.parent || !this.scope.parent.useStrict ) ) ?\n\t\t\t\t'\"use strict\";' :\n\t\t\t\t'' ) + insertedVarDeclaration;\n\n\t\t\tfor ( let i = 0; i < statements.length; i += 1 ) {\n\t\t\t\tconst statement = statements[i];\n\n\t\t\t\tstatement.minify( code, chars );\n\n\t\t\t\tif ( !statement.collapsed ) {\n\t\t\t\t\tif ( statement.start > lastEnd ) code.remove( lastEnd, statement.start );\n\n\t\t\t\t\tif ( nextSeparator ) {\n\t\t\t\t\t\tcode.appendLeft( lastStatement ? lastStatement.getRightHandSide().end : lastEnd, nextSeparator );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( statement.removed ) {\n\t\t\t\t\t\tnextSeparator = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSeparator = endsWithCurlyBrace( statement ) ? '' : separator;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastEnd = statement.end;\n\n\t\t\t\t// remove superfluous semis (TODO is this necessary?)\n\t\t\t\twhile ( code.original[ lastEnd - 1 ] === ';' ) lastEnd -= 1;\n\n\t\t\t\tif ( statement.removed ) {\n\t\t\t\t\tnextSeparator = '';\n\t\t\t\t} else {\n\t\t\t\t\tnextSeparator = endsWithCurlyBrace( statement ) ? '' : separator;\n\t\t\t\t}\n\n\t\t\t\tlastStatement = statement;\n\t\t\t}\n\n\t\t\tif ( end > lastEnd ) code.remove( lastEnd, end );\n\t\t} else {\n\t\t\t// empty block\n\t\t\tif ( removeCurlies || this.parent.type === 'Root' ) {\n\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\t\tcode.remove( this.start + 1, this.end - 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO make this work!\n\t// minifyWithCollapsedReturnStatements ( code, statements ) {\n\t// \tif ( this.returnStatements.length === 1 ) {\n\t// \t\tconst returnStatement = this.returnStatements[0];\n\n\t// \t\tif ( returnStatement.parent === this ) {\n\t// \t\t\t// case 1 – a single top-level return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\t// does this already get skipped above?\n\t// \t\t\t\tthrow new Error( 'TODO single return statement without arg' );\n\t// \t\t\t}\n\n\t// \t\t\t// case 2 – a single top-level return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\telse {\n\t// \t\t\t// case 3 – a single conditional return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\treturnStatement.skip = true;\n\t// \t\t\t}\n\n\t// \t\t\t// case 4 – a single conditional return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \telse {\n\t// \t\tthrow new Error( 'TODO multiple return statements' );\n\t// \t}\n\n\t// \tstatements.forEach( statement => {\n\t// \t\tstatement.minify( code, chars );\n\t// \t});\n\t// }\n}\n","export default {\n\tProgram: [ 'body' ],\n\tLiteral: []\n};\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\nimport keys from './keys.js';\n\nexport default function wrap ( raw, parent ) {\n\tif ( !raw ) return;\n\n\tif ( 'length' in raw ) {\n\t\tlet i = raw.length;\n\t\twhile ( i-- ) wrap( raw[i], parent );\n\t\treturn;\n\t}\n\n\t// with e.g. shorthand properties, key and value are\n\t// the same node. We don't want to wrap an object twice\n\tif ( raw.__wrapped ) return;\n\traw.__wrapped = true;\n\n\tif ( !keys[ raw.type ] ) {\n\t\tkeys[ raw.type ] = Object.keys( raw ).filter( key => typeof raw[ key ] === 'object' );\n\t}\n\n\traw.skip = true;\n\traw.parent = parent;\n\traw.program = parent.program || parent;\n\traw.depth = parent.depth + 1;\n\traw.keys = keys[ raw.type ];\n\traw.indentation = undefined;\n\n\tfor ( const key of keys[ raw.type ] ) {\n\t\twrap( raw[ key ], raw );\n\t}\n\n\traw.program.magicString.addSourcemapLocation( raw.start );\n\traw.program.magicString.addSourcemapLocation( raw.end );\n\n\tconst type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;\n\traw.__proto__ = type.prototype;\n}\n","import parse from '../utils/parse.js';\nimport { decode } from 'sourcemap-codec';\nimport keys from './keys.js';\nimport Program from './Program.js';\n\nexport default function check ( magicString, ast ) {\n\tconst code = magicString.toString();\n\n\ttry {\n\t\tparse( code );\n\t} catch ( err ) {\n\t\tconst map = magicString.generateMap();\n\t\tconst { line, column } = err.loc;\n\t\tconst snippet = code.slice( Math.max( 0, err.pos - 35 ), Math.min( code.length, err.pos + 35 ) );\n\n\t\tconst mappings = decode( map.mappings );\n\t\tconst segments = mappings[ line - 1 ];\n\n\t\tlet message = err.message;\n\t\tlet repro;\n\n\t\tfor ( let i = 0; i < segments.length; i += 1 ) {\n\t\t\tconst segment = segments[i];\n\t\t\tif ( segment[0] >= column ) {\n\t\t\t\tconst sourceCodeLine = segment[2];\n\t\t\t\tconst sourceCodeColumn = segment[3];\n\n\t\t\t\tmessage = `Butternut generated invalid JS: code in source file near (${sourceCodeLine + 1}:${sourceCodeColumn}) became\\n...${snippet}...`;\n\t\t\t\trepro = createRepro( magicString.original, ast, sourceCodeLine, sourceCodeColumn );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst err2 = new Error( message );\n\t\terr2.check = true;\n\t\terr2.repro = repro;\n\t\terr2.output = code;\n\n\t\tthrow err2;\n\t}\n}\n\nfunction createRepro ( source, ast, line, column ) {\n\tconst lines = source.split( '\\n' );\n\n\tlet c = 0;\n\tfor ( let i = 0; i < line; i += 1 ) c += lines[i].length + 1;\n\tc += column;\n\n\tlet node = zoomIn( ast, c );\n\n\tdo {\n\t\tnode = zoomOut( node );\n\n\t\tconst slice = source.slice( node.start, node.end );\n\t\tconst ast = parse( slice );\n\n\t\tconst { code } = new Program( slice, ast, null ).export({});\n\n\t\ttry {\n\t\t\tparse( code );\n\t\t} catch ( err ) {\n\t\t\treturn {\n\t\t\t\tinput: deindent( slice, source, node.start ),\n\t\t\t\toutput: code,\n\t\t\t\tpos: c,\n\t\t\t\tloc: {\n\t\t\t\t\tline,\n\t\t\t\t\tcolumn\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} while ( node );\n}\n\nfunction zoomIn ( node, c ) {\n\tif ( !node ) return null;\n\n\tif ( c < node.start ) return null;\n\tif ( c > node.end ) return null;\n\n\tconst k = keys[ node.type ];\n\tfor ( let i = 0; i < k.length; i += 1 ) {\n\t\tconst key = k[i];\n\n\t\tif ( Array.isArray( node[key] ) ) {\n\t\t\tconst body = node[key];\n\n\t\t\tfor ( let j = 0; j < body.length; j += 1 ) {\n\t\t\t\tif ( body[j] ) {\n\t\t\t\t\tif ( body[j].start > c ) return zoomIn( body[j], body[j].start );\n\n\t\t\t\t\tconst child = zoomIn( body[j], c );\n\t\t\t\t\tif ( child ) return child;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst child = zoomIn( node[key], c );\n\t\t\tif ( child ) return child;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction zoomOut ( node ) {\n\twhile ( !/Statement|Declaration/.test( node.parent.type ) ) {\n\t\tif ( !node.parent ) return null;\n\t\tnode = node.parent;\n\t}\n\n\treturn node.parent;\n}\n\nfunction deindent ( slice, source, start ) {\n\tlet c = start;\n\twhile ( /[ \\t]/.test( source[c-1] ) ) c -= 1;\n\n\tconst indent = source.slice( c, start );\n\n\tif ( indent ) {\n\t\tconst pattern = new RegExp( `^${indent}`, 'gm' );\n\t\treturn slice.replace( pattern, '' );\n\t}\n\n\treturn slice;\n}","import MagicString from 'magic-string';\nimport wrap from './wrap.js';\nimport BlockStatement from './BlockStatement.js';\nimport Scope from './Scope.js';\nimport check from './check.js';\n\nconst chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$0123456789'.split('');\nconst digit = /\\d/;\n\nconst naturalOrder = {};\nchars.forEach( ( char, i ) => {\n\tnaturalOrder[char] = i;\n});\n\nexport default function Program ( source, ast, options, stats ) {\n\tthis.options = options;\n\tthis.stats = stats;\n\tthis.type = 'Root';\n\n\tthis.source = source;\n\tif ( DEBUG ) stats.time( 'create magicString' );\n\tthis.magicString = new MagicString( source );\n\tif ( DEBUG ) stats.timeEnd( 'create magicString' );\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\tif ( DEBUG ) stats.time( 'create body' );\n\twrap( this.body = ast, this );\n\tthis.body.__proto__ = BlockStatement.prototype;\n\tif ( DEBUG ) stats.timeEnd( 'create body' );\n\n\tthis.templateElements = [];\n\tif ( DEBUG ) stats.time( 'init body' );\n\tthis.body.scope = new Scope({\n\t\tblock: false,\n\t\tparent: null\n\t});\n\n\tthis.body.body.forEach( node => {\n\t\tnode.attachScope( this, this.body.scope );\n\t});\n\n\tthis.charFrequency = {};\n\tchars.forEach( char => {\n\t\tthis.charFrequency[char] = 0;\n\t});\n\n\tthis.body.initialise( this, this.body.scope );\n\tif ( DEBUG ) stats.timeEnd( 'init body' );\n\n\tchars.sort( ( a, b ) => {\n\t\tif ( digit.test( a ) && !digit.test( b ) ) return 1;\n\t\tif ( digit.test( b ) && !digit.test( a ) ) return -1;\n\t\treturn ( this.charFrequency[b] - this.charFrequency[a] ) || ( naturalOrder[a] - naturalOrder[b] );\n\t});\n\n\tif ( DEBUG ) stats.time( 'minify' );\n\tthis.body.minify( this.magicString, chars );\n\tif ( DEBUG ) stats.timeEnd( 'minify' );\n}\n\nProgram.prototype = {\n\taddWord ( word ) {\n\t\tfor ( let i = 0; i < word.length; i += 1 ) {\n\t\t\tthis.charFrequency[word[i]] += 1;\n\t\t}\n\t},\n\n\texport ( options ) {\n\t\tconst stats = this.stats;\n\n\t\tif ( DEBUG ) stats.time( 'generate code' );\n\t\tconst code = this.magicString.toString();\n\t\tif ( DEBUG ) stats.timeEnd( 'generate code' );\n\n\t\tif ( options.check ) {\n\t\t\tcheck( this.magicString, this.ast );\n\t\t}\n\n\t\tif ( DEBUG ) stats.time( 'generate map' );\n\t\tconst map = options.sourceMap !== false ? this.magicString.generateMap({\n\t\t\tfile: options.file,\n\t\t\tsource: options.source,\n\t\t\tincludeContent: options.includeContent !== false\n\t\t}) : null;\n\t\tif ( DEBUG ) stats.timeEnd( 'generate map' );\n\n\t\tif ( DEBUG && this.magicString.stats ) {\n\t\t\tObject.keys( this.magicString.stats ).forEach( stat => {\n\t\t\t\tstats[ stat ] = this.magicString.stats[ stat ];\n\t\t\t});\n\t\t}\n\n\t\treturn { code, map, stats };\n\t}\n};\n","export default class Stats {\n\tconstructor () {\n\t\tObject.defineProperties( this, {\n\t\t\tstartTimes: { value: {} }\n\t\t});\n\t}\n\n\ttime ( label ) {\n\t\tthis.startTimes[ label ] = process.hrtime();\n\t}\n\n\ttimeEnd ( label ) {\n\t\tconst elapsed = process.hrtime( this.startTimes[ label ] );\n\n\t\tif ( !this[ label ] ) this[ label ] = 0;\n\t\tthis[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n\t}\n}\n","import parse from './utils/parse.js';\nimport Program from './program/Program.js';\nimport Stats from './utils/Stats.js';\nimport getSnippet from './utils/getSnippet.js';\n\nexport function squash ( source, options = {} ) {\n\tlet ast;\n\n\tconst stats = DEBUG ? new Stats() : null;\n\n\ttry {\n\t\tif ( DEBUG ) stats.time( 'parse' );\n\t\tast = parse( source );\n\t\tif ( DEBUG ) stats.timeEnd( 'parse' );\n\t} catch ( err ) {\n\t\terr.snippet = getSnippet( source, err.loc );\n\t\tthrow err;\n\t}\n\n\treturn new Program( source, ast, options, stats ).export( options );\n}\n\nexport { version as VERSION } from '../package.json';\n"],"names":["parse","acorn.parse","const","let","super","this","c","replacement","statement","value","invalidChars","calculators","Array","decode","ast","child"],"mappings":"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"}