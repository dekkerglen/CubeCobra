/* parser generated by jison 0.4.17 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var grammar = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[6,10,20,22,27,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V1=[1,7],$V2=[6,10,14,20,22,27,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V3=[6,10,14,20,27,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V4=[2,16],$V5=[1,10],$V6=[2,8],$V7=[1,12],$V8=[6,10,14,20,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V9=[2,21],$Va=[1,15],$Vb=[8,178],$Vc=[1,18],$Vd=[2,26],$Ve=[1,56],$Vf=[1,32],$Vg=[1,61],$Vh=[1,33],$Vi=[1,34],$Vj=[1,35],$Vk=[1,36],$Vl=[1,37],$Vm=[1,38],$Vn=[1,39],$Vo=[1,40],$Vp=[1,41],$Vq=[1,48],$Vr=[1,49],$Vs=[1,50],$Vt=[1,51],$Vu=[1,52],$Vv=[1,53],$Vw=[1,47],$Vx=[1,57],$Vy=[1,58],$Vz=[1,59],$VA=[1,60],$VB=[1,62],$VC=[1,69],$VD=[6,14,39,41,47,123,125,126],$VE=[6,10,20,39,41,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$VF=[1,84],$VG=[1,83],$VH=[10,50,52,56],$VI=[52,56],$VJ=[39,47,59],$VK=[2,151],$VL=[1,95],$VM=[1,96],$VN=[1,97],$VO=[10,39,47,59,60,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$VP=[10,14,39,47,59,123,125,126,138,139],$VQ=[10,14,39,47,59,60,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$VR=[14,39,47,59,123,125,126,138,139],$VS=[10,14,39,47,59,60,123,125,126,129,130,131,132,133,134,138,139,140,142,145,146,147,148,149,150,153],$VT=[10,138,139],$VU=[10,14,21,50,52,56],$VV=[6,41],$VW=[6,10,14,20,39,41,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$VX=[10,21,41,139,164],$VY=[1,135],$VZ=[1,133],$V_=[1,134],$V$=[1,137],$V01=[14,39],$V11=[2,65],$V21=[1,141],$V31=[1,144],$V41=[1,153],$V51=[1,152],$V61=[8,10,56,110,123,130,131,132,133,140,152,156,174,177,178,181,184,189,190,191],$V71=[14,39,47,59,123,125,126],$V81=[21,41],$V91=[1,185],$Va1=[1,184],$Vb1=[1,181],$Vc1=[14,21,39],$Vd1=[14,21,39,47],$Ve1=[21,39,47,53],$Vf1=[39,59],$Vg1=[10,52,56,139,164],$Vh1=[126,139,142,145,146,147,148],$Vi1=[1,234],$Vj1=[1,235],$Vk1=[1,244],$Vl1=[1,249],$Vm1=[1,242],$Vn1=[1,259],$Vo1=[1,253],$Vp1=[1,254],$Vq1=[1,256],$Vr1=[1,255],$Vs1=[1,257],$Vt1=[1,263],$Vu1=[1,260],$Vv1=[1,243],$Vw1=[1,247],$Vx1=[1,250],$Vy1=[1,262],$Vz1=[1,261],$VA1=[10,21,41,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164,169],$VB1=[10,21,41,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164,167,169],$VC1=[14,60],$VD1=[2,52],$VE1=[1,280],$VF1=[10,21,41,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164],$VG1=[41,94,95,96,97,98,99],$VH1=[39,53,59,117],$VI1=[2,121],$VJ1=[8,10,14],$VK1=[59,123,156],$VL1=[8,10,14,21,39,41,47,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,111,123,130,131,132,133,139,140,152,156,160,164,167,169,172,174,177,178,181,184,189,190,191],$VM1=[8,10,21,41,47,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,152,156,164,167,169,172,174,177,178,181,184,189,190,191],$VN1=[8,10,14,21,41,47,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,152,156,164,167,169,172,174,177,178,181,184,189,190,191],$VO1=[56,123,152,156,181,184,189,190,191],$VP1=[8,10,14,21,39,41,47,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,111,123,130,131,132,133,139,140,152,156,164,167,169,172,174,177,178,181,184,189,190,191],$VQ1=[10,21,41,59,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164],$VR1=[10,39,41,42,47,60,63,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$VS1=[1,349],$VT1=[2,67],$VU1=[1,351],$VV1=[1,352],$VW1=[1,353],$VX1=[1,354],$VY1=[1,355],$VZ1=[1,356],$V_1=[1,357],$V$1=[1,358],$V02=[1,359],$V12=[1,360],$V22=[1,361],$V32=[1,362],$V42=[1,363],$V52=[1,364],$V62=[1,365],$V72=[1,366],$V82=[2,94],$V92=[1,370],$Va2=[1,371],$Vb2=[1,372],$Vc2=[1,373],$Vd2=[1,374],$Ve2=[1,375],$Vf2=[41,109,110,123,156,189,190,191],$Vg2=[14,39,41,47,123,125,126],$Vh2=[189,190],$Vi2=[1,400],$Vj2=[8,10,21,41,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,152,156,164,167,169,174,177,178,181,184,189,190,191],$Vk2=[2,39],$Vl2=[14,59,62],$Vm2=[2,105],$Vn2=[1,431],$Vo2=[1,432],$Vp2=[14,142],$Vq2=[1,445],$Vr2=[1,446],$Vs2=[59,123,139,156,172],$Vt2=[14,59,123,139,156,172],$Vu2=[14,39,47],$Vv2=[1,477],$Vw2=[1,478],$Vx2=[10,14,39,41,42,47,60,63,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$Vy2=[14,59];
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"file":3,"scc":4,"stylesheet":5,"EOF":6,"string":7,"STRING":8,"string_or_ident":9,"IDENT":10,"string_or_uri":11,"uri":12,"junk":13,"S":14,"HTML_COMMENT":15,"charset_block":16,"import_list":17,"namespace_list":18,"blocks":19,"BLOCK_CHARSET":20,";":21,"BLOCK_IMPORT":22,"import_block":23,"optional_medium_list":24,"medium_list":25,"namespace_block":26,"BLOCK_NAMESPACE":27,"block":28,"ruleset":29,"media_block":30,"page_block":31,"font_face_block":32,"font_feature_values_block":33,"keyframes_block":34,"viewport_block":35,"supports_block":36,"counter_styles_block":37,"block_of_declarations":38,"{":39,"declaration_list":40,"}":41,"BLOCK_MEDIA":42,"media_inner_list":43,"media_inner":44,"media_query":45,"medium_list_extended":46,",":47,"media_query_type":48,"media_query_expr":49,"ONLY":50,"optional_media_query_expression":51,"NOT":52,"AND":53,"media_expr":54,"media_query_expr_and":55,"(":56,"media_expr_value":57,"media_expr_slashzero":58,")":59,":":60,"expr":61,"SLASH_ZERO":62,"BLOCK_PAGE":63,"page_name":64,"page_declaration_list":65,"page_name_optional_pseudo":66,"page_declaration":67,"declaration":68,"page_margin_declaration":69,"page_margin":70,"PAGE_TOP_LEFT_CORNER":71,"PAGE_TOP_LEFT":72,"PAGE_TOP_CENTER":73,"PAGE_TOP_RIGHT":74,"PAGE_TOP_RIGHT_CORNER":75,"PAGE_BOTTOM_LEFT_CORNER":76,"PAGE_BOTTOM_LEFT":77,"PAGE_BOTTOM_CENTER":78,"PAGE_BOTTOM_RIGHT":79,"PAGE_BOTTOM_RIGHT_CORNER":80,"PAGE_LEFT_TOP":81,"PAGE_LEFT_MIDDLE":82,"PAGE_LEFT_BOTTOM":83,"PAGE_RIGHT_TOP":84,"PAGE_RIGHT_MIDDLE":85,"PAGE_RIGHT_BOTTOM":86,"BLOCK_FONT_FACE":87,"BLOCK_FONT_FEATURE_VALUES":88,"font_feature_name":89,"font_feature_values_contents":90,"font_feature_name_extended":91,"font_feature_values_inner_block":92,"font_feature_values_content_block":93,"FFV_SWASH":94,"FFV_ANNOTATION":95,"FFV_ORNAMENTS":96,"FFV_STYLISTIC":97,"FFV_STYLESET":98,"FFV_CHARACTER_VARIANT":99,"BLOCK_KEYFRAMES":100,"keyframe_list":101,"BLOCK_VENDOR_KEYFRAMES":102,"keyframe":103,"keyframe_selector_list":104,"keyframe_selector":105,"keyframe_selector_list_extended":106,"num":107,"optional_percent":108,"FROM":109,"TO":110,"%":111,"BLOCK_VIEWPORT":112,"BLOCK_VENDOR_VIEWPORT":113,"BLOCK_SUPPORTS":114,"supports_list":115,"supports_item":116,"OR":117,"supports_negation_base":118,"supports_negation":119,"BLOCK_COUNTERSTYLE":120,"selector_list":121,"selector_chunk_list":122,"+":123,"simple_selector":124,"SEL_CHILD":125,"SEL_SIBLING":126,"element_name":127,"simple_selector_part_list":128,"ID_IDENT":129,"HEX_SHORT":130,"HEX_LONG":131,"HEX_SHORT_ALPHA":132,"HEX_LONG_ALPHA":133,"CLASS_IDENT":134,"attribute_selector":135,"pseudo_selector":136,"element_type":137,"|":138,"*":139,"[":140,"attribute_selector_body":141,"]":142,"attribute_selector_body_name":143,"attribute_selector_body_operator":144,"=":145,"|=":146,"^":147,"$":148,"::":149,"NTH_FUNC":150,"nth":151,"FUNCTION_IDENT":152,"PSEUDO_CLASS":153,"n_val":154,"integer":155,"-":156,"ODD":157,"EVEN":158,"signed_integer":159,"N":160,"declaration_body":161,"optional_important":162,"optional_slash_nine":163,"IE_FILTER":164,"declaration_head":165,"declaration_name":166,"!":167,"IMPORTANT":168,"SLASH_NINE":169,"term":170,"expr_chain":171,"/":172,"unit":173,"UNICODE_RANGE":174,"hexcolor":175,"custom_ident":176,"IE_EXPRESSION":177,"URL_FULL":178,"unit_dim":179,"math_expr":180,"CALC":181,"attr_expression":182,"function":183,"ATTR":184,"attr_expression_unit":185,"attr_expression_fallback":186,"math_product":187,"custom_ident_chain":188,"INTEGER":189,"SCINOT":190,"FLOAT":191,"$accept":0,"$end":1},
terminals_: {2:"error",6:"EOF",8:"STRING",10:"IDENT",14:"S",15:"HTML_COMMENT",20:"BLOCK_CHARSET",21:";",22:"BLOCK_IMPORT",27:"BLOCK_NAMESPACE",39:"{",41:"}",42:"BLOCK_MEDIA",47:",",50:"ONLY",52:"NOT",53:"AND",56:"(",59:")",60:":",62:"SLASH_ZERO",63:"BLOCK_PAGE",71:"PAGE_TOP_LEFT_CORNER",72:"PAGE_TOP_LEFT",73:"PAGE_TOP_CENTER",74:"PAGE_TOP_RIGHT",75:"PAGE_TOP_RIGHT_CORNER",76:"PAGE_BOTTOM_LEFT_CORNER",77:"PAGE_BOTTOM_LEFT",78:"PAGE_BOTTOM_CENTER",79:"PAGE_BOTTOM_RIGHT",80:"PAGE_BOTTOM_RIGHT_CORNER",81:"PAGE_LEFT_TOP",82:"PAGE_LEFT_MIDDLE",83:"PAGE_LEFT_BOTTOM",84:"PAGE_RIGHT_TOP",85:"PAGE_RIGHT_MIDDLE",86:"PAGE_RIGHT_BOTTOM",87:"BLOCK_FONT_FACE",88:"BLOCK_FONT_FEATURE_VALUES",94:"FFV_SWASH",95:"FFV_ANNOTATION",96:"FFV_ORNAMENTS",97:"FFV_STYLISTIC",98:"FFV_STYLESET",99:"FFV_CHARACTER_VARIANT",100:"BLOCK_KEYFRAMES",102:"BLOCK_VENDOR_KEYFRAMES",109:"FROM",110:"TO",111:"%",112:"BLOCK_VIEWPORT",113:"BLOCK_VENDOR_VIEWPORT",114:"BLOCK_SUPPORTS",117:"OR",120:"BLOCK_COUNTERSTYLE",123:"+",125:"SEL_CHILD",126:"SEL_SIBLING",129:"ID_IDENT",130:"HEX_SHORT",131:"HEX_LONG",132:"HEX_SHORT_ALPHA",133:"HEX_LONG_ALPHA",134:"CLASS_IDENT",138:"|",139:"*",140:"[",142:"]",145:"=",146:"|=",147:"^",148:"$",149:"::",150:"NTH_FUNC",152:"FUNCTION_IDENT",153:"PSEUDO_CLASS",156:"-",157:"ODD",158:"EVEN",160:"N",164:"IE_FILTER",167:"!",168:"IMPORTANT",169:"SLASH_NINE",172:"/",174:"UNICODE_RANGE",177:"IE_EXPRESSION",178:"URL_FULL",181:"CALC",184:"ATTR",189:"INTEGER",190:"SCINOT",191:"FLOAT"},
productions_: [0,[3,3],[7,1],[9,1],[9,1],[11,1],[11,1],[13,1],[13,0],[4,0],[4,1],[4,1],[5,4],[16,6],[16,0],[17,6],[17,0],[23,3],[24,2],[24,0],[18,4],[18,0],[26,4],[26,6],[19,2],[19,2],[19,0],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[38,4],[30,8],[43,2],[43,0],[44,2],[44,2],[44,2],[25,2],[46,3],[46,0],[45,1],[45,1],[48,5],[48,5],[48,3],[51,3],[51,0],[49,2],[55,3],[55,0],[54,9],[57,3],[57,0],[58,2],[58,0],[31,7],[64,3],[64,2],[66,2],[66,0],[65,2],[65,0],[67,1],[67,1],[67,2],[69,4],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[70,1],[32,3],[33,7],[89,3],[91,1],[91,0],[90,2],[90,0],[92,4],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[34,8],[34,8],[101,2],[101,0],[103,3],[104,3],[106,3],[106,0],[105,2],[105,1],[105,1],[108,1],[108,0],[35,3],[35,3],[36,7],[115,4],[115,4],[115,1],[116,2],[116,5],[116,5],[119,3],[119,3],[119,4],[118,4],[37,5],[29,2],[121,4],[121,1],[122,5],[122,5],[122,5],[122,3],[122,2],[124,2],[124,1],[128,2],[128,2],[128,3],[128,2],[128,3],[128,2],[128,3],[128,2],[128,3],[128,2],[128,2],[128,2],[128,0],[127,3],[127,1],[127,2],[137,1],[137,1],[135,4],[141,1],[141,5],[143,2],[144,1],[144,2],[144,1],[144,2],[144,2],[144,2],[136,2],[136,5],[136,6],[136,5],[136,1],[136,2],[151,5],[151,5],[151,1],[151,2],[151,2],[151,2],[154,3],[154,2],[40,4],[40,3],[40,1],[40,0],[68,3],[161,2],[161,2],[161,1],[165,4],[166,2],[166,1],[162,4],[162,0],[163,2],[163,2],[163,0],[61,3],[171,5],[171,5],[171,3],[171,0],[170,1],[170,1],[170,1],[170,1],[170,1],[170,1],[170,1],[170,1],[170,1],[12,1],[173,2],[173,4],[173,5],[173,1],[173,1],[183,4],[183,3],[179,1],[179,1],[179,0],[182,7],[185,4],[185,4],[185,0],[186,3],[186,0],[180,5],[180,5],[180,2],[187,5],[187,5],[187,1],[175,1],[175,1],[175,1],[175,1],[176,4],[188,3],[188,2],[159,2],[159,2],[159,1],[155,1],[155,1],[107,1],[107,2],[107,2],[107,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
 return $$[$0-1]; 
break;
case 2:
 this.$ = new yy.String($$[$0]); 
break;
case 3: case 4: case 5: case 6: case 25: case 44: case 46: case 51: case 54: case 57: case 68: case 69: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 96: case 97: case 98: case 99: case 100: case 101: case 108: case 120: case 131: case 155: case 156: case 161: case 163: case 175: case 191: case 202: case 203: case 204: case 205: case 206: case 207: case 208: case 209: case 210: case 215: case 216: case 219: case 233: case 241: case 243: case 246:
 this.$ = $$[$0]; 
break;
case 7: case 8: case 9: case 10: case 11: case 14: case 19: case 52: case 58: case 70: case 127: case 221: case 225:
 this.$ = null; 
break;
case 12:
 this.$ = new yy.Stylesheet($$[$0-3], $$[$0-2], $$[$0-1], $$[$0]); 
break;
case 13:
 this.$ = new yy.Charset($$[$0-3]); this.$.range = this._$; 
break;
case 15: case 20:
 this.$ = $$[$0]; this.$.unshift($$[$0-3]); 
break;
case 16: case 21: case 26: case 39: case 45: case 55: case 67: case 94: case 105: case 109: case 151: case 184: case 201: case 227:
 this.$ = []; 
break;
case 17:
 this.$ = new yy.Import($$[$0-2], $$[$0]); this.$.range = this._$; 
break;
case 18: case 27: case 28: case 29: case 30: case 31: case 32: case 33: case 34: case 35: case 36: case 40: case 41: case 42: case 63: case 136: case 160: case 213: case 230:
 this.$ = $$[$0-1]; 
break;
case 22:
 this.$ = new yy.Namespace($$[$0-1], null); this.$.range = this._$; 
break;
case 23:
 this.$ = new yy.Namespace($$[$0-1], $$[$0-3]); this.$.range = this._$; 
break;
case 24:
 this.$ = $$[$0]; $$[$0].unshift($$[$0-1]); 
break;
case 37:
 this.$ = new yy.Media($$[$0-5], $$[$0-1]); this.$.range = this._$; 
break;
case 38: case 43: case 53: case 93: case 104: case 149: case 150:
 this.$ = $$[$0]; this.$.unshift($$[$0-1]); 
break;
case 47:
 this.$ = new yy.MediaQuery(null, null, $$[$0]); this.$.range = this._$; 
break;
case 48:
 this.$ = new yy.MediaQuery($$[$0-2], 'only', $$[$0]); this.$.range = this._$; 
break;
case 49:
 this.$ = new yy.MediaQuery($$[$0-2], 'not', $$[$0]); this.$.range = this._$; 
break;
case 50:
 this.$ = new yy.MediaQuery($$[$0-2], null, $$[$0]); this.$.range = this._$; 
break;
case 56:
 this.$ = new yy.MediaExpression($$[$0-6], $$[$0-4], $$[$0-2]); this.$.range = this._$; 
break;
case 59: case 195:
 this.$ = {slashZero: true}; 
break;
case 60: case 193: case 196:
 this.$ = {}; 
break;
case 61:
 this.$ = new yy.Page($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 62:
 this.$ = $$[$0-2] + $$[$0-1]; 
break;
case 64:
 this.$ = ':' + $$[$0]; 
break;
case 65: case 92:
 this.$ = ''; 
break;
case 66:
 this.$ = $$[$0]; if ($$[$0-1] !== null) {this.$.unshift($$[$0-1]);} 
break;
case 71:
 this.$ = new yy.PageMargin($$[$0-3].substr(1), $$[$0-1]); 
break;
case 88:
 this.$ = new yy.FontFace($$[$0]); this.$.range = this._$; 
break;
case 89:
 this.$ = new yy.FontFeatureValues($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 90:
 this.$ = $$[$0-2] + $$[$0]; 
break;
case 91:
 this.$ = ' ' + $$[$0]; 
break;
case 95:
 this.$ = new yy.FontFeatureValuesBlock($$[$0-3], $$[$0-1]); this.$.range = this._$; 
break;
case 102:
 this.$ = new yy.Keyframes($$[$0-5], $$[$0-1]); this.$.range = this._$; 
break;
case 103:
 this.$ = new yy.Keyframes($$[$0-5], $$[$0-1], $$[$0-7].substring(1, $$[$0-7].length - 9)); this.$.range = this._$; 
break;
case 106:
 this.$ = new yy.Keyframe($$[$0-2], $$[$0-1]); this.$.range = this._$; 
break;
case 107:
 this.$ = $$[$0]; this.$.unshift($$[$0-2]); 
break;
case 110:

            if ($$[$0]) {
                this.$ = new yy.KeyframeSelector($$[$0-1] + '%');
            } else {
                if ($$[$0-1].asNumber() !== 0) throw new SyntaxError('Invalid keyframe selector: ' + $$[$0-1].toString());
                this.$ = new yy.KeyframeSelector($$[$0-1].toString());
            }
            this.$.range = this._$;
        
break;
case 111:
 this.$ = new yy.KeyframeSelector('from'); this.$.range = this._$; 
break;
case 112:
 this.$ = new yy.KeyframeSelector('to'); this.$.range = this._$; 
break;
case 113:
 this.$ = true; 
break;
case 114:
 this.$ = false; 
break;
case 115:
 this.$ = new yy.Viewport($$[$0]); this.$.range = this._$; 
break;
case 116:
 this.$ = new yy.Viewport($$[$0], $$[$0-2].substring(1, $$[$0-2].length - 8)); this.$.range = this._$; 
break;
case 117:
 this.$ = new yy.Supports($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 118:
 this.$ = yy.createSupportsConditionList($$[$0-3], 'or', $$[$0]); 
break;
case 119:
 this.$ = yy.createSupportsConditionList($$[$0-3], 'and', $$[$0]); 
break;
case 121:
 this.$ = $$[$0]; this.$.range = this._$; 
break;
case 122:
 this.$ = new yy.SupportsCondition($$[$0-2]); this.$.range = this._$; 
break;
case 123: case 182:
 this.$ = $$[$0-2]; 
break;
case 124: case 125:
 this.$ = new yy.SupportsCondition($$[$0-2]); this.$.range = this._$; this.$.negate(); 
break;
case 126:
 this.$ = new yy.SupportsCondition($$[$0-2]); this.$.negate(); 
break;
case 128:
 this.$ = new yy.CounterStyle($$[$0-2], $$[$0]); this.$.range = this._$; 
break;
case 129:
 this.$ = new yy.Ruleset($$[$0-1], $$[$0]); this.$.range = this._$; 
break;
case 130:
 this.$ = yy.createSelectorList($$[$0-3], $$[$0]); 
break;
case 132:
 this.$ = new yy.AdjacentSelector($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 133:
 this.$ = new yy.DirectDescendantSelector($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 134:
 this.$ = new yy.SiblingSelector($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 135:
 this.$ = new yy.DescendantSelector($$[$0-2], $$[$0-1]); this.$.range = this._$; 
break;
case 137:
 this.$ = new yy.SimpleSelector([$$[$0-1]].concat($$[$0])); this.$.range = this._$; 
break;
case 138:
 this.$ = new yy.SimpleSelector($$[$0]); this.$.range = this._$; 
break;
case 139: case 140: case 142: case 144: case 146:
 this.$ = $$[$0]; this.$.unshift(new yy.IDSelector($$[$0-1].substr(1))); 
break;
case 141: case 143: case 145: case 147:
 this.$ = $$[$0]; this.$.unshift(new yy.IDSelector($$[$0-2].substr(1) + $$[$0-1])); 
break;
case 148:
 this.$ = $$[$0]; this.$.unshift(new yy.ClassSelector($$[$0-1].substr(1))); 
break;
case 152:
 this.$ = new yy.ElementSelector($$[$0-2], $$[$0]); this.$.range = this._$; 
break;
case 153:
 this.$ = new yy.ElementSelector($$[$0], null); this.$.range = this._$; 
break;
case 154:
 this.$ = new yy.ElementSelector(null, $$[$0]); this.$.range = this._$; 
break;
case 157:
 this.$ = $$[$0-1]; this.$.range = this._$; 
break;
case 158:
 this.$ = new yy.AttributeSelector($$[$0], null, null); 
break;
case 159:
 this.$ = new yy.AttributeSelector($$[$0-4], $$[$0-3], $$[$0-1]); 
break;
case 162:
 this.$ = '*='; 
break;
case 164:
 this.$ = '^='; 
break;
case 165:
 this.$ = '$='; 
break;
case 166:
 this.$ = '~='; 
break;
case 167:
 this.$ = new yy.PseudoElementSelector($$[$0]); this.$.range = this._$; 
break;
case 168:
 this.$ = new yy.NthSelector($$[$0-4].substr(1), $$[$0-1]); this.$.range = this._$; 
break;
case 169:
 this.$ = new yy.NotSelector($$[$0-1]); this.$.range = this._$; 
break;
case 170:
 this.$ = new yy.PseudoSelectorFunction($$[$0-3].substring(0, $$[$0-3].length - 1), $$[$0-1]); this.$.range = this._$; 
break;
case 171:
 this.$ = new yy.PseudoClassSelector($$[$0].substr(1)); this.$.range = this._$; 
break;
case 172:
 this.$ = new yy.PseudoClassSelector($$[$0]); this.$.range = this._$; 
break;
case 173: case 174:
 $$[$0-1].applySign($$[$0-3]); this.$ = new yy.LinearFunction($$[$0-4], $$[$0-1]); this.$.range = this._$; 
break;
case 176:
 this.$ = 'odd'; 
break;
case 177:
 this.$ = 'even'; 
break;
case 178:
 this.$ = new yy.LinearFunction(null, $$[$0-1]); this.$.range = this._$; 
break;
case 179:
 this.$ = new yy.NValue($$[$0-2]); this.$.range = this._$; 
break;
case 180:
 this.$ = new yy.NValue(1); this.$.range = this._$; 
break;
case 181:
 this.$ = $$[$0-3]; this.$.push($$[$0]); 
break;
case 183:
 this.$ = [$$[$0]]; 
break;
case 185:
 this.$ = $$[$0-2]; Object.assign(this.$, $$[$0-1], $$[$0]); 
break;
case 186:
 this.$ = new yy.IEFilter($$[$0-1]); this.$.range = this._$; 
break;
case 187:
 this.$ = new yy.Declaration($$[$0-1], $$[$0]); this.$.range = this._$; 
break;
case 188:
 this.$ = new yy.Declaration($$[$0], null); this.$.range = this._$; 
break;
case 189:
 this.$ = $$[$0-3]; 
break;
case 190:
 this.$ = $$[$0-1] + $$[$0]; 
break;
case 192:
 this.$ = {important: true}; 
break;
case 194:
 this.$ = {slashNine: true}; 
break;
case 197:
 this.$ = new yy.Expression([[null, $$[$0-2]]].concat($$[$0])); this.$.range = this._$; 
break;
case 198: case 199:
 this.$ = $$[$0-4]; this.$.push([$$[$0-3], $$[$0-1]]); 
break;
case 200:
 this.$ = $$[$0-2]; this.$.push([null, $$[$0-1]]); 
break;
case 211:
 this.$ = new yy.URI($$[$0].substr(4, $$[$0].length - 5)); this.$.range = this._$; 
break;
case 212:

            if ($$[$0] !== null) {
                this.$ = new yy.Dimension($$[$0-1], $$[$0]); this.$.range = this._$;
            } else {
                this.$ = $$[$0-1];
            }
        
break;
case 214:
 this.$ = new yy.Func($$[$0-4], $$[$0-1], null); this.$.range = this._$; 
break;
case 217:
 this.$ = new yy.Func($$[$0-3].substr(0, $$[$0-3].length - 1), $$[$0-1]); this.$.range = this._$; 
break;
case 218:
 this.$ = new yy.Func($$[$0-2].substr(0, $$[$0-2].length - 1), null); this.$.range = this._$; 
break;
case 220:
 this.$ = '%'; 
break;
case 222:

            this.$ = new yy.Func(
                'attr',
                $$[$0-1]
                    ? new yy.Expression([[null, $$[$0-3]]].concat($$[$0-1]))
                    : $$[$0-3]
            );
        
break;
case 223:
 this.$ = [[null, $$[$0-3]]].concat($$[$0-1]); 
break;
case 224:
 this.$ = [[',', $$[$0-1]]]; 
break;
case 226:
 this.$ = [[',', $$[$0]]]; 
break;
case 228: case 229:
 this.$ = new yy.MathSum($$[$0-4], $$[$0-3], $$[$0-1]); this.$.range = this._$; 
break;
case 231: case 232:
 this.$ = new yy.MathProduct($$[$0-4], $$[$0-2], $$[$0]); this.$.range = this._$; 
break;
case 234: case 235: case 236: case 237:
 this.$ = new yy.HexColor($$[$0]); this.$.range = this._$; 
break;
case 238:
 this.$ = new yy.CustomIdent($$[$0-1]); this.$.range = this._$; 
break;
case 239:
 this.$ = [$$[$0-2]].concat($$[$0]); 
break;
case 240:
 this.$ = [$$[$0-1]]; 
break;
case 242:
 this.$ = $$[$0]; this.$.applySign($$[$0-1]); 
break;
case 244: case 249:
 this.$ = new yy.Number($$[$0]); this.$.range = this._$; 
break;
case 245:

            const parts = $$[$0].split('e');
            const base = parseInt(parts[0], 10);
            const exp = /[^\d]/.exec(parts[1][0]) ? parts[1].substr(1) : parts[1];
            const sign = parts[1][0] === '-' ? -1 : 1;
            this.$ = new yy.Number(base * Math.pow(10, sign * parseInt(exp, 10)));
            this.$.range = this._$;
        
break;
case 247: case 248:
 this.$ = new yy.Number($$[$0]); this.$.range = this._$; this.$.applySign($$[$0-1]); 
break;
}
},
table: [o($V0,[2,9],{3:1,4:2,14:[1,3],15:[1,4]}),{1:[3]},o([6,10,14,22,27,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],[2,14],{5:5,16:6,20:$V1}),o($V2,[2,10]),o($V2,[2,11]),{6:[1,8]},o($V3,$V4,{17:9,22:$V5}),{8:$V6,13:11,14:$V7},{1:[2,1]},o($V8,$V9,{18:13,26:14,27:$Va}),o($Vb,$V6,{13:16,14:$V7}),{7:17,8:$Vc},o([6,8,10,14,20,21,22,27,39,41,42,47,50,52,53,56,59,60,62,63,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,96,97,98,99,100,102,109,110,112,113,114,117,120,123,125,126,129,130,131,132,133,134,138,139,140,142,145,146,147,148,149,150,152,153,156,157,158,160,164,167,168,169,172,174,177,178,181,184,189,190,191],[2,7]),o([6,14,39,47,123,125,126],$Vd,{19:19,28:20,16:21,29:22,30:23,31:24,32:25,33:26,34:27,35:28,36:29,37:30,121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,10:$Ve,20:$V1,42:$Vf,60:$Vg,63:$Vh,87:$Vi,88:$Vj,100:$Vk,102:$Vl,112:$Vm,113:$Vn,114:$Vo,120:$Vp,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),{21:[1,63]},o([8,10,178],$V6,{13:64,14:$V7}),{7:67,8:$Vc,11:66,12:68,23:65,178:$VC},{13:70,14:$V7,21:$V6},o([8,10,14,21,41,47,50,52,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,142,152,156,164,167,169,172,174,177,178,181,184,189,190,191],[2,2]),{6:[2,12]},o($VD,$Vd,{28:20,16:21,29:22,30:23,31:24,32:25,33:26,34:27,35:28,36:29,37:30,121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,19:71,10:$Ve,20:$V1,42:$Vf,60:$Vg,63:$Vh,87:$Vi,88:$Vj,100:$Vk,102:$Vl,112:$Vm,113:$Vn,114:$Vo,120:$Vp,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VD,$Vd,{28:20,16:21,29:22,30:23,31:24,32:25,33:26,34:27,35:28,36:29,37:30,121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,19:72,10:$Ve,20:$V1,42:$Vf,60:$Vg,63:$Vh,87:$Vi,88:$Vj,100:$Vk,102:$Vl,112:$Vm,113:$Vn,114:$Vo,120:$Vp,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VE,$V6,{13:73,14:$V7}),o($VE,$V6,{13:74,14:$V7}),o($VE,$V6,{13:75,14:$V7}),o($VE,$V6,{13:76,14:$V7}),o($VE,$V6,{13:77,14:$V7}),o($VE,$V6,{13:78,14:$V7}),o($VE,$V6,{13:79,14:$V7}),o($VE,$V6,{13:80,14:$V7}),o($VE,$V6,{13:81,14:$V7}),{38:82,39:$VF,47:$VG},o($VH,$V6,{13:85,14:$V7}),o([10,39,60],$V6,{13:86,14:$V7}),{13:87,14:$V7,39:$V6},{10:$V6,13:88,14:$V7},{10:$V6,13:89,14:$V7},{10:$V6,13:90,14:$V7},{13:91,14:$V7,39:$V6},{13:92,14:$V7,39:$V6},o($VI,$V6,{13:93,14:$V7}),{10:$V6,13:94,14:$V7},o($VJ,[2,131],{127:44,128:45,137:46,135:54,136:55,124:98,10:$Ve,14:$VK,60:$Vg,123:$VL,125:$VM,126:$VN,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VO,$V6,{13:99,14:$V7}),o($VP,$VK,{135:54,136:55,128:100,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,138]),o([10,14,39,47,59,60,123,125,126,129,130,131,132,133,134,139,140,142,145,146,147,148,149,150,153],[2,153],{138:[1,101]}),{10:[1,102]},o($VP,$VK,{135:54,136:55,128:103,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VR,$VK,{135:54,136:55,128:104,10:[1,105],60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VR,$VK,{135:54,136:55,128:106,10:[1,107],60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VR,$VK,{135:54,136:55,128:108,10:[1,109],60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VR,$VK,{135:54,136:55,128:110,10:[1,111],60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VP,$VK,{135:54,136:55,128:112,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VP,$VK,{135:54,136:55,128:113,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VP,$VK,{135:54,136:55,128:114,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VS,[2,155]),o($VS,[2,156]),o($VT,$V6,{13:115,14:$V7}),{10:[1,116]},{56:[1,117]},{10:[1,120],52:[1,118],152:[1,119]},o($VQ,[2,171]),o([6,10,20,27,39,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V6,{13:121,14:$V7}),{7:67,8:$Vc,10:[1,123],11:122,12:68,178:$VC},{21:[1,124]},o([10,21,50,52,56],$V6,{13:125,14:$V7}),o($VU,[2,5]),o($VU,[2,6]),o([8,10,14,21,41,47,50,52,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,152,156,164,167,169,172,174,177,178,181,184,189,190,191],[2,211]),{21:[1,126]},o($VV,[2,24]),o($VV,[2,25]),o($VW,[2,27]),o($VW,[2,28]),o($VW,[2,29]),o($VW,[2,30]),o($VW,[2,31]),o($VW,[2,32]),o($VW,[2,33]),o($VW,[2,34]),o($VW,[2,35]),o($VW,[2,129]),o($VO,$V6,{13:127,14:$V7}),o($VX,$V6,{13:128,14:$V7}),{10:$VY,25:129,45:130,48:131,49:132,50:$VZ,52:$V_,54:136,56:$V$},o($V01,$V11,{64:138,66:140,10:[1,139],60:$V21}),{38:142,39:$VF},{10:$V31,89:143},{10:[1,145]},{10:[1,146]},{38:147,39:$VF},{38:148,39:$VF},{52:$V41,56:$V51,115:149,116:150,118:151},{10:[1,154]},o($VO,$V6,{13:155,14:$V7}),o($VO,$V6,{13:156,14:$V7}),o($VO,$V6,{13:157,14:$V7}),o($VO,$V6,{13:158,14:$V7}),o($VQ,[2,136]),o($VQ,[2,137]),{10:[1,159]},o($VS,[2,154]),o($VQ,[2,139]),o($VQ,[2,140]),o($VP,$VK,{135:54,136:55,128:160,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,142]),o($VP,$VK,{135:54,136:55,128:161,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,144]),o($VP,$VK,{135:54,136:55,128:162,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,146]),o($VP,$VK,{135:54,136:55,128:163,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,148]),o($VQ,[2,149]),o($VQ,[2,150]),{10:$Ve,127:166,137:46,138:$Vw,139:$Vx,141:164,143:165},o($VQ,[2,167]),o([123,156,157,158,160,189,190],$V6,{13:167,14:$V7}),{56:[1,168]},o($V61,$V6,{13:169,14:$V7}),o($VQ,[2,172]),o($V8,$V9,{26:14,18:170,27:$Va}),{13:171,14:$V7,21:$V6},o($Vb,$V6,{13:172,14:$V7}),o($V0,$V6,{13:173,14:$V7}),{10:$VY,21:[2,19],24:174,25:175,45:130,48:131,49:132,50:$VZ,52:$V_,54:136,56:$V$},o([6,10,20,22,27,39,41,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V6,{13:176,14:$V7}),o($V71,$VK,{124:43,127:44,128:45,137:46,135:54,136:55,122:177,10:$Ve,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($V81,[2,184],{40:178,68:179,161:180,165:182,166:183,10:$V91,139:$Va1,164:$Vb1}),{13:186,14:$V7,39:$V6},o($Vc1,[2,45],{46:187,47:[1,188]}),o($Vd1,[2,46]),o($Vd1,[2,47]),{10:$V6,13:189,14:$V7},{10:$V6,13:190,14:$V7},o($Ve1,$V6,{13:191,14:$V7}),o($Vd1,[2,55],{55:192,53:[1,193]}),{10:$V6,13:194,14:$V7},{39:[1,195]},o($V01,$V11,{66:196,60:$V21}),{13:197,14:$V7,39:$V6},{10:[1,198]},o($VW,[2,88]),{39:[1,199]},o([10,39],$V6,{13:200,14:$V7}),{13:201,14:$V7,39:$V6},{13:202,14:$V7,39:$V6},o($VW,[2,115]),o($VW,[2,116]),{39:[1,203]},o($Vf1,[2,120],{53:[1,205],117:[1,204]}),{10:$V91,52:$V41,56:$V51,68:208,115:207,116:150,118:209,119:206,139:$Va1,161:180,164:$Vb1,165:182,166:183},o($Vg1,$V6,{13:210,14:$V7}),{13:211,14:$V7,56:$V6},{13:212,14:$V7,39:$V6},o($V71,$VK,{127:44,128:45,137:46,135:54,136:55,124:213,10:$Ve,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($V71,$VK,{127:44,128:45,137:46,135:54,136:55,124:214,10:$Ve,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($V71,$VK,{127:44,128:45,137:46,135:54,136:55,124:215,10:$Ve,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VQ,[2,135]),o($VS,[2,152]),o($VQ,[2,141]),o($VQ,[2,143]),o($VQ,[2,145]),o($VQ,[2,147]),{142:[1,216]},{126:[1,223],139:[1,219],142:[2,158],144:217,145:[1,218],146:[1,220],147:[1,221],148:[1,222]},o($Vh1,$V6,{13:224,14:$V7}),{123:[1,231],151:225,154:226,155:233,156:[1,232],157:[1,227],158:[1,228],159:229,160:[1,230],189:$Vi1,190:$Vj1},o([10,47,59,60,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V6,{13:236,14:$V7}),{7:241,8:$Vc,10:$Vk1,12:239,56:$Vl1,61:237,107:248,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,155:233,156:$Vu1,159:258,170:238,173:240,174:$Vv1,175:245,176:246,177:$Vw1,178:$VC,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},o($V8,[2,20]),{21:[2,22]},{7:67,8:$Vc,11:264,12:68,178:$VC},o($V3,$V4,{17:265,22:$V5}),{21:[2,17]},{13:266,14:$V7,21:$V6},o([6,10,14,20,22,27,39,41,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],[2,13]),o($VJ,[2,130],{127:44,128:45,137:46,135:54,136:55,124:98,10:$Ve,14:$VK,60:$Vg,123:$VL,125:$VM,126:$VN,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),{21:[1,268],41:[1,267]},o($V81,[2,183]),o($VA1,[2,193],{162:269,167:[1,270]}),o($VB1,$V6,{13:271,14:$V7}),o([21,41,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164,167,169],[2,188],{155:233,170:238,12:239,173:240,7:241,175:245,176:246,107:248,182:251,183:252,159:258,61:272,8:$Vc,10:$Vk1,56:$Vl1,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,156:$Vu1,174:$Vv1,177:$Vw1,178:$VC,181:$Vx1,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1}),{13:273,14:$V7,60:$V6},{10:[1,274]},o($VC1,[2,191]),{39:[1,275]},o($Vc1,[2,43]),o($VH,$V6,{13:276,14:$V7}),{10:[1,277]},{10:[1,278]},o($Vd1,$VD1,{51:279,53:$VE1}),o($Vd1,[2,53]),{13:281,14:$V7,56:$V6},{10:[1,282]},o($VF1,$V6,{13:283,14:$V7}),{13:284,14:$V7,39:$V6},{39:[2,63]},o($V01,[2,64]),o($VG1,$V6,{13:285,14:$V7}),{10:$V31,39:[2,92],89:287,91:286},{39:[1,288]},{39:[1,289]},o([10,20,39,41,42,47,60,63,87,88,100,102,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153],$V6,{13:290,14:$V7}),o($VI,$V6,{13:291,14:$V7}),o($VI,$V6,{13:292,14:$V7}),o($VH1,$VI1),{59:[1,293]},{59:[1,294]},{10:$V91,52:$V41,56:$V51,68:208,115:207,116:150,118:209,119:295,139:$Va1,161:180,164:$Vb1,165:182,166:183},{10:$V91,52:$V41,56:$V51,68:296,115:297,116:150,118:151,139:$Va1,161:180,164:$Vb1,165:182,166:183},{56:[1,298]},{38:299,39:$VF},o($VO,$V6,{13:300,14:$V7}),o($VO,$V6,{13:301,14:$V7}),o($VO,$V6,{13:302,14:$V7}),o($VQ,[2,157]),o([8,10],$V6,{13:303,14:$V7}),o($VJ1,[2,161]),{145:[1,304]},o($VJ1,[2,163]),{145:[1,305]},{145:[1,306]},{145:[1,307]},o($Vh1,[2,160]),{59:[1,308]},{59:[2,175],123:[1,309],156:[1,310]},{13:311,14:$V7,59:$V6},{13:312,14:$V7,59:$V6},{13:313,14:$V7,59:$V6,160:[1,314]},o($VK1,$V6,{13:315,14:$V7}),{155:316,189:$Vi1,190:$Vj1},{155:317,189:$Vi1,190:$Vj1},o($VL1,[2,243]),o($VL1,[2,244]),o($VL1,[2,245]),o([14,47,59,123,125,126],$VK,{122:42,124:43,127:44,128:45,137:46,135:54,136:55,121:318,10:$Ve,60:$Vg,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),{59:[1,319]},o($VM1,$V6,{13:320,14:$V7}),o($VN1,[2,202]),o($VN1,[2,203]),o($VN1,[2,204]),o($VN1,[2,205]),o($VN1,[2,206]),o($VN1,[2,207]),o($VN1,[2,208]),o($VN1,[2,209]),o($VN1,[2,210]),o([8,14,21,41,47,56,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,123,130,131,132,133,139,140,152,156,164,167,169,172,174,177,178,181,184,189,190,191],[2,221],{179:321,10:[1,322],111:[1,323]}),o($VO1,$V6,{13:324,14:$V7}),{56:[1,325]},o($VN1,[2,215]),o($VN1,[2,216]),o($VN1,[2,234]),o($VN1,[2,235]),o($VN1,[2,236]),o($VN1,[2,237]),{10:$V6,13:326,14:$V7},o($VP1,[2,246]),{155:316,189:$Vi1,190:$Vj1,191:[1,327]},{155:317,189:$Vi1,190:$Vj1,191:[1,328]},o($VP1,[2,249]),{56:[1,329]},o([8,10,56,59,110,123,130,131,132,133,140,152,156,174,177,178,181,184,189,190,191],$V6,{13:330,14:$V7}),{13:331,14:$V7,21:$V6},o($V3,[2,15]),{21:[2,18]},o([6,10,14,20,21,39,41,42,47,60,63,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,96,97,98,99,100,102,109,110,112,113,114,120,123,125,126,129,130,131,132,133,134,138,139,140,149,150,153,156,164,189,190,191],[2,36]),o($VX,$V6,{13:332,14:$V7}),o($VQ1,[2,196],{163:333,62:[1,335],169:[1,334]}),{13:336,14:$V7,168:$V6},o($VB1,[2,186]),o($VB1,[2,187]),{60:[1,337]},o($VC1,[2,190]),o($VR1,$V6,{13:338,14:$V7}),{10:$VY,25:339,45:130,48:131,49:132,50:$VZ,52:$V_,54:136,56:$V$},o($Ve1,$V6,{13:340,14:$V7}),o($Ve1,$V6,{13:341,14:$V7}),o($Vd1,[2,50]),{13:342,14:$V7,56:$V6},{49:343,54:136,56:$V$},o([59,60,62],$V6,{13:344,14:$V7}),{10:$V91,21:$VS1,41:$VT1,65:345,67:346,68:347,69:348,70:350,71:$VU1,72:$VV1,73:$VW1,74:$VX1,75:$VY1,76:$VZ1,77:$V_1,78:$V$1,79:$V02,80:$V12,81:$V22,82:$V32,83:$V42,84:$V52,85:$V62,86:$V72,139:$Va1,161:180,164:$Vb1,165:182,166:183},{39:[2,62]},{41:$V82,90:367,92:368,93:369,94:$V92,95:$Va2,96:$Vb2,97:$Vc2,98:$Vd2,99:$Ve2},{39:[2,90]},{39:[2,91]},o($Vf2,$V6,{13:376,14:$V7}),o($Vf2,$V6,{13:377,14:$V7}),o($Vg2,$Vd,{28:20,16:21,29:22,30:23,31:24,32:25,33:26,34:27,35:28,36:29,37:30,121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,19:378,10:$Ve,20:$V1,42:$Vf,60:$Vg,63:$Vh,87:$Vi,88:$Vj,100:$Vk,102:$Vl,112:$Vm,113:$Vn,114:$Vo,120:$Vp,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),{52:$V41,56:$V51,115:379,116:150,118:151},{52:$V41,56:$V51,115:380,116:150,118:151},o($VH1,$V6,{13:381,14:$V7}),o($VH1,$V6,{13:382,14:$V7}),o([53,117],$VI1,{59:[1,383]}),{59:[1,384]},{59:[1,385]},o($Vg1,$V6,{13:386,14:$V7}),o($VW,[2,128]),o($VQ,[2,132]),o($VQ,[2,133]),o($VQ,[2,134]),{7:388,8:$Vc,9:387,10:[1,389]},o($VJ1,[2,162]),o($VJ1,[2,164]),o($VJ1,[2,165]),o($VJ1,[2,166]),o($VQ,[2,168]),o($Vh2,$V6,{13:390,14:$V7}),o($Vh2,$V6,{13:391,14:$V7}),{59:[2,176]},{59:[2,177]},{59:[2,178]},o($VK1,$V6,{13:392,14:$V7}),o($VK1,[2,180]),o($VL1,[2,241]),o($VL1,[2,242]),{47:$VG,59:[1,393]},o($VQ,[2,170]),o($VN1,[2,201],{171:394}),o($VN1,[2,212]),o($VN1,[2,219]),o($VN1,[2,220]),{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:397,180:395,181:$Vx1,182:251,183:252,184:$Vy1,187:396,189:$Vi1,190:$Vj1,191:$Vz1},o($VO1,$V6,{13:398,14:$V7}),{10:$Vi2,188:399},o($VP1,[2,247]),o($VP1,[2,248]),o($VT,$V6,{13:401,14:$V7}),{7:241,8:$Vc,10:$Vk1,12:239,56:$Vl1,59:[1,403],61:402,107:248,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,155:233,156:$Vu1,159:258,170:238,173:240,174:$Vv1,175:245,176:246,177:$Vw1,178:$VC,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},{21:[2,23]},o($V81,[2,182],{161:180,165:182,166:183,68:404,10:$V91,139:$Va1,164:$Vb1}),o($VQ1,[2,185]),o($VQ1,$V6,{13:405,14:$V7}),o($VQ1,$V6,{13:406,14:$V7}),{168:[1,407]},o($Vj2,$V6,{13:408,14:$V7}),o($Vg2,$Vk2,{121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,43:409,44:410,30:411,31:412,29:413,10:$Ve,42:$Vf,60:$Vg,63:$Vh,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($Vc1,[2,44]),o($Vd1,$VD1,{51:414,53:$VE1}),o($Vd1,$VD1,{51:415,53:$VE1}),{49:416,54:136,56:$V$},o($Vd1,[2,54]),o($Vl2,[2,58],{57:417,60:[1,418]}),{41:[1,419]},{10:$V91,21:$VS1,41:$VT1,65:420,67:346,68:347,69:348,70:350,71:$VU1,72:$VV1,73:$VW1,74:$VX1,75:$VY1,76:$VZ1,77:$V_1,78:$V$1,79:$V02,80:$V12,81:$V22,82:$V32,83:$V42,84:$V52,85:$V62,86:$V72,139:$Va1,161:180,164:$Vb1,165:182,166:183},o($VF1,[2,68]),o($VF1,[2,69]),o($VF1,$V6,{13:421,14:$V7}),{13:422,14:$V7,39:$V6},o($V01,[2,72]),o($V01,[2,73]),o($V01,[2,74]),o($V01,[2,75]),o($V01,[2,76]),o($V01,[2,77]),o($V01,[2,78]),o($V01,[2,79]),o($V01,[2,80]),o($V01,[2,81]),o($V01,[2,82]),o($V01,[2,83]),o($V01,[2,84]),o($V01,[2,85]),o($V01,[2,86]),o($V01,[2,87]),{41:[1,423]},{41:$V82,90:424,92:368,93:369,94:$V92,95:$Va2,96:$Vb2,97:$Vc2,98:$Vd2,99:$Ve2},{13:425,14:$V7,39:$V6},o($V01,[2,96]),o($V01,[2,97]),o($V01,[2,98]),o($V01,[2,99]),o($V01,[2,100]),o($V01,[2,101]),{41:$Vm2,101:426,103:427,104:428,105:429,107:430,109:$Vn2,110:$Vo2,123:$Vn1,155:233,156:$Vu1,159:258,189:$Vi1,190:$Vj1,191:$Vz1},{41:$Vm2,101:433,103:427,104:428,105:429,107:430,109:$Vn2,110:$Vo2,123:$Vn1,155:233,156:$Vu1,159:258,189:$Vi1,190:$Vj1,191:$Vz1},{41:[1,434]},o($Vf1,[2,118]),o($Vf1,[2,119]),o($VH1,[2,124]),o($VH1,[2,125]),o($VH1,$V6,{13:435,14:$V7}),o($VH1,$V6,{13:436,14:$V7}),o($VH1,$V6,{13:437,14:$V7}),o($Vg1,[2,127]),{13:438,14:$V7,142:$V6},o($Vp2,[2,3]),o($Vp2,[2,4]),{155:439,189:$Vi1,190:$Vj1},{155:440,189:$Vi1,190:$Vj1},o($VK1,[2,179]),o($VQ,[2,169]),o([14,21,41,59,62,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,139,164,167,169],[2,197],{155:233,12:239,173:240,7:241,175:245,176:246,107:248,182:251,183:252,159:258,170:443,8:$Vc,10:$Vk1,47:[1,441],56:$Vl1,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,156:$Vu1,172:[1,442],174:$Vv1,177:$Vw1,178:$VC,181:$Vx1,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1}),{59:[1,444],123:$Vq2,156:$Vr2},o($Vs2,$V6,{13:447,14:$V7}),o($Vt2,[2,233]),{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:397,180:448,181:$Vx1,182:251,183:252,184:$Vy1,187:396,189:$Vi1,190:$Vj1,191:$Vz1},{142:[1,449]},o([10,142],$V6,{13:450,14:$V7}),{10:$Ve,127:451,137:46,138:$Vw,139:$Vx},{59:[1,452]},o($VN1,[2,218]),o($V81,[2,181]),o($VQ1,[2,194]),o($VQ1,[2,195]),o($VA1,$V6,{13:453,14:$V7}),o($Vj2,[2,189]),{41:[1,454]},o($Vg2,$Vk2,{121:31,122:42,124:43,127:44,128:45,137:46,135:54,136:55,44:410,30:411,31:412,29:413,43:455,10:$Ve,42:$Vf,60:$Vg,63:$Vh,129:$Vq,130:$Vr,131:$Vs,132:$Vt,133:$Vu,134:$Vv,138:$Vw,139:$Vx,140:$Vy,149:$Vz,150:$VA,153:$VB}),o($VR1,$V6,{13:456,14:$V7}),o($VR1,$V6,{13:457,14:$V7}),o($VR1,$V6,{13:458,14:$V7}),o($Vd1,[2,48]),o($Vd1,[2,49]),o($Vd1,[2,51]),o([59,62],$V6,{13:459,14:$V7}),o($V61,$V6,{13:460,14:$V7}),o($VW,[2,61]),{41:[2,66]},o($VF1,[2,70]),{38:461,39:$VF},o($VW,[2,89]),{41:[2,93]},{38:462,39:$VF},{41:[1,463]},{41:$Vm2,101:464,103:427,104:428,105:429,107:430,109:$Vn2,110:$Vo2,123:$Vn1,155:233,156:$Vu1,159:258,189:$Vi1,190:$Vj1,191:$Vz1},{38:465,39:$VF},o([39,47],$V6,{13:466,14:$V7}),o($Vu2,[2,114],{108:467,111:[1,468]}),o($Vu2,[2,111]),o($Vu2,[2,112]),{41:[1,469]},o($VW,[2,117]),o($VH1,[2,126]),o($VH1,[2,122]),o($VH1,[2,123]),{142:[2,159]},{13:470,14:$V7,59:$V6},{13:471,14:$V7,59:$V6},o($V61,$V6,{13:472,14:$V7}),o($V61,$V6,{13:473,14:$V7}),o($VM1,$V6,{13:474,14:$V7}),o($VN1,[2,213]),o($VO1,$V6,{13:475,14:$V7}),o($VO1,$V6,{13:476,14:$V7}),o($VK1,[2,230],{139:$Vv2,172:$Vw2}),{59:[1,479],123:$Vq2,156:$Vr2},o($VN1,[2,238]),{10:$Vi2,142:[2,240],188:480},o([10,47,59],$V6,{13:481,14:$V7}),o($VN1,[2,217]),o($VA1,[2,192]),o($VW,[2,37]),{41:[2,38]},o($Vx2,[2,40]),o($Vx2,[2,41]),o($Vx2,[2,42]),{58:482,59:[2,60],62:[1,483]},{7:241,8:$Vc,10:$Vk1,12:239,56:$Vl1,61:484,107:248,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,155:233,156:$Vu1,159:258,170:238,173:240,174:$Vv1,175:245,176:246,177:$Vw1,178:$VC,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},o($VF1,$V6,{13:485,14:$V7}),o($VG1,$V6,{13:486,14:$V7}),o($VW,[2,102]),{41:[2,104]},o($Vf2,$V6,{13:487,14:$V7}),{39:[2,109],47:[1,489],106:488},o($Vu2,[2,110]),o($Vu2,[2,113]),o($VW,[2,103]),{59:[2,173]},{59:[2,174]},{7:241,8:$Vc,10:$Vk1,12:239,56:$Vl1,107:248,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,155:233,156:$Vu1,159:258,170:490,173:240,174:$Vv1,175:245,176:246,177:$Vw1,178:$VC,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},{7:241,8:$Vc,10:$Vk1,12:239,56:$Vl1,107:248,110:$Vm1,123:$Vn1,130:$Vo1,131:$Vp1,132:$Vq1,133:$Vr1,140:$Vs1,152:$Vt1,155:233,156:$Vu1,159:258,170:491,173:240,174:$Vv1,175:245,176:246,177:$Vw1,178:$VC,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},o($VN1,[2,200]),{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:397,181:$Vx1,182:251,183:252,184:$Vy1,187:492,189:$Vi1,190:$Vj1,191:$Vz1},{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:397,181:$Vx1,182:251,183:252,184:$Vy1,187:493,189:$Vi1,190:$Vj1,191:$Vz1},o($VO1,$V6,{13:494,14:$V7}),o($VO1,$V6,{13:495,14:$V7}),o($VN1,[2,214]),{142:[2,239]},{10:[1,497],47:[1,498],59:[2,225],185:496},{59:[1,499]},{13:500,14:$V7,59:$V6},o($Vl2,[2,57]),o($VF1,[2,71]),o($VG1,[2,95]),o($Vf2,[2,106]),{39:[2,107]},o([109,110,123,156,189,190,191],$V6,{13:501,14:$V7}),o($VM1,$V6,{13:502,14:$V7}),o($VM1,$V6,{13:503,14:$V7}),o($Vs2,$V6,{13:504,14:$V7}),o($Vs2,$V6,{13:505,14:$V7}),{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:506,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:507,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},{59:[1,508]},o([47,59],$V6,{13:509,14:$V7}),o($VO1,$V6,{13:510,14:$V7}),o($Ve1,$V6,{13:511,14:$V7}),{59:[2,59]},{104:512,105:429,107:430,109:$Vn2,110:$Vo2,123:$Vn1,155:233,156:$Vu1,159:258,189:$Vi1,190:$Vj1,191:$Vz1},o($VN1,[2,198]),o($VN1,[2,199]),o($VK1,[2,228],{139:$Vv2,172:$Vw2}),o($VK1,[2,229],{139:$Vv2,172:$Vw2}),o($Vt2,[2,231]),o($Vt2,[2,232]),o($VN1,[2,222]),o($Vy2,[2,227],{186:513,47:[1,514]}),{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:515,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},o([14,21,39,47,53],[2,56]),{39:[2,108]},{13:516,14:$V7,59:$V6},o($VO1,$V6,{13:517,14:$V7}),{13:518,14:$V7,59:$V6},{59:[2,223]},{56:$Vl1,107:248,123:$Vn1,152:$Vt1,155:233,156:$Vu1,159:258,173:519,181:$Vx1,182:251,183:252,184:$Vy1,189:$Vi1,190:$Vj1,191:$Vz1},{59:[2,224]},o($Vy2,[2,226])],
defaultActions: {8:[2,1],19:[2,12],171:[2,22],174:[2,17],197:[2,63],266:[2,18],284:[2,62],286:[2,90],287:[2,91],311:[2,176],312:[2,177],313:[2,178],331:[2,23],420:[2,66],424:[2,93],438:[2,159],455:[2,38],464:[2,104],470:[2,173],471:[2,174],480:[2,239],488:[2,107],500:[2,59],512:[2,108],516:[2,223],518:[2,224]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        function _parseError (msg, hash) {
            this.message = msg;
            this.hash = hash;
        }
        _parseError.prototype = Error;

        throw new _parseError(str, hash);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        var lex = function () {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        };
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:return 133
break;
case 1:return 131
break;
case 2:return 132
break;
case 3:return 130
break;
case 4:return 190
break;
case 5:return 191
break;
case 6:return 191
break;
case 7:return 189
break;
case 8:return 14
break;
case 9:return 47
break;
case 10:return 21
break;
case 11:return 47
break;
case 12:return 39
break;
case 13:return 41
break;
case 14:return 140
break;
case 15:return 142
break;
case 16:return 56
break;
case 17:return 59
break;
case 18:return 111
break;
case 19:return 139
break;
case 20:return 146
break;
case 21:return 138
break;
case 22:return 172
break;
case 23:return 139
break;
case 24:return 145
break;
case 25:return 10  // For cursor: n-resize
break;
case 26:return 10  // For cursor: not-allowed
break;
case 27:return 160
break;
case 28:return 20
break;
case 29:return 120
break;
case 30:return 22
break;
case 31:return 27
break;
case 32:return 42
break;
case 33:return 87
break;
case 34:return 88
break;
case 35:return 63
break;
case 36:return 100
break;
case 37:return 102
break;
case 38:return 112
break;
case 39:return 113
break;
case 40:return 114
break;
case 41:return 71
break;
case 42:return 72
break;
case 43:return 73
break;
case 44:return 74
break;
case 45:return 75
break;
case 46:return 76
break;
case 47:return 77
break;
case 48:return 78
break;
case 49:return 79
break;
case 50:return 80
break;
case 51:return 81
break;
case 52:return 82
break;
case 53:return 83
break;
case 54:return 84
break;
case 55:return 85
break;
case 56:return 86
break;
case 57:return 94
break;
case 58:return 95
break;
case 59:return 96
break;
case 60:return 97
break;
case 61:return 98
break;
case 62:return 99
break;
case 63:return 174
break;
case 64:return 174
break;
case 65:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 8;
break;
case 66:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 8;
break;
case 67:return 50
break;
case 68:return 52
break;
case 69:return 53
break;
case 70:return 117
break;
case 71:return 157
break;
case 72:return 158
break;
case 73:return 167
break;
case 74:return 168
break;
case 75:return 177
break;
case 76:return 164
break;
case 77:return 164
break;
case 78:return 164
break;
case 79:return 164
break;
case 80:return 164
break;
case 81:return 178
break;
case 82:return 181
break;
case 83:return 184
break;
case 84:return 129  // for ie :(
break;
case 85:return 129
break;
case 86:return 134
break;
case 87:return 152
break;
case 88:return 109
break;
case 89:return 110
break;
case 90:return 10
break;
case 91:return 148
break;
case 92:return 147
break;
case 93:return 156
break;
case 94:return 123
break;
case 95:return 125
break;
case 96:return 126
break;
case 97:return 150
break;
case 98:return 153
break;
case 99:return 153
break;
case 100:return 149
break;
case 101:return 60
break;
case 102:return 62
break;
case 103:return 169
break;
case 104:return 6
break;
}
},
rules: [/^(?:#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9]))/,/^(?:#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9]))/,/^(?:#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9]))/,/^(?:#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9]))/,/^(?:(([1-9][0-9]*|0))e(\+|-)?(([1-9][0-9]*|0)))/,/^(?:(([1-9][0-9]*|0))?\.[0-9]+)/,/^(?:(([1-9][0-9]*|0))\.[0-9]*)/,/^(?:(([1-9][0-9]*|0)))/,/^(?:(([ \n\r\t\f])|(\/\*(.|\n|\r)*?\*\/))+)/,/^(?:,)/,/^(?:;)/,/^(?:,)/,/^(?:\{)/,/^(?:\})/,/^(?:\[)/,/^(?:\])/,/^(?:\()/,/^(?:\))/,/^(?:%)/,/^(?:\*)/,/^(?:\|=)/,/^(?:\|)/,/^(?:\/)/,/^(?:\*)/,/^(?:=)/,/^(?:n-resize\b)/,/^(?:not-allowed\b)/,/^(?:n\b)/,/^(?:@charset\b)/,/^(?:@counter-style\b)/,/^(?:@import\b)/,/^(?:@namespace\b)/,/^(?:@media\b)/,/^(?:@font-face\b)/,/^(?:@font-feature-values\b)/,/^(?:@page\b)/,/^(?:@keyframes\b)/,/^(?:@-[a-zA-Z]+-keyframes\b)/,/^(?:@viewport\b)/,/^(?:@-[a-zA-Z]+-viewport\b)/,/^(?:@supports\b)/,/^(?:@top-left-corner\b)/,/^(?:@top-left\b)/,/^(?:@top-center\b)/,/^(?:@top-right\b)/,/^(?:@top-right-corner\b)/,/^(?:@bottom-left-corner\b)/,/^(?:@bottom-left\b)/,/^(?:@bottom-center\b)/,/^(?:@bottom-right\b)/,/^(?:@bottom-right-corner\b)/,/^(?:@left-top\b)/,/^(?:@left-middle\b)/,/^(?:@left-bottom\b)/,/^(?:@right-top\b)/,/^(?:@right-middle\b)/,/^(?:@right-bottom\b)/,/^(?:@swash\b)/,/^(?:@annotation\b)/,/^(?:@ornaments\b)/,/^(?:@stylistic\b)/,/^(?:@styleset\b)/,/^(?:@character-variant\b)/,/^(?:U\+([a-fA-F0-9])+-([a-fA-F0-9])+)/,/^(?:U\+([a-fA-F0-9])+\?*)/,/^(?:"(?:\\(?:.|([ \n\r\t\f]))|[^"\\])*")/,/^(?:'(?:\\(?:.|([ \n\r\t\f]))|[^'\\])*')/,/^(?:only\b)/,/^(?:not\b)/,/^(?:and\b)/,/^(?:or\b)/,/^(?:odd\b)/,/^(?:even\b)/,/^(?:!)/,/^(?:important\b)/,/^(?:expression\(.*?\))/,/^(?:-ms-filter([ \n\r\t\f])*:([ \n\r\t\f])*progid:?(([a-zA-Z0-9\.:])+\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*)+)/,/^(?:-ms-filter([ \n\r\t\f])*:([ \n\r\t\f])*alpha\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*(([a-zA-Z0-9\.:])+\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*)*)/,/^(?:filter([ \n\r\t\f])*:([ \n\r\t\f])*progid:(([a-zA-Z0-9\.:])+\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*)+)/,/^(?:filter([ \n\r\t\f])*:([ \n\r\t\f])*progid:?DXImageTransform\.(([a-zA-Z0-9\.:])+\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*)+)/,/^(?:filter([ \n\r\t\f])*:([ \n\r\t\f])*alpha\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*(([a-zA-Z0-9\.:])+\(([a-zA-Z0-9=#, \n\r\t'"])*\)([ \n\r\t\f])*)*)/,/^(?:url\(("(?:\\(?:.|([ \n\r\t\f]))|[^"\\])*"|'(?:\\(?:.|([ \n\r\t\f]))|[^'\\])*'|[^)]*)\))/,/^(?:(((-[a-zA-Z]+-)?))calc\b)/,/^(?:attr\b)/,/^(?:#(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*)#(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*))/,/^(?:#(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*))/,/^(?:\.(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*))/,/^(?:(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*)\()/,/^(?:from\b)/,/^(?:to\b)/,/^(?:(([a-zA-Z_]|[^\x00-\x7F]|-([a-zA-Z_\-]|[^\x00-\x7F])|-?\\([\da-fA-F]{1,6}\s|[^\n\da-fA-F]))([\w_\-]|[^\x00-\x7F]|\\([\da-fA-F]+\s|[^\n\da-fA-F]))*))/,/^(?:\$)/,/^(?:\^)/,/^(?:-)/,/^(?:\+)/,/^(?:>)/,/^(?:~)/,/^(?::nth-(last-)?(child|of-type))/,/^(?::only-child\b)/,/^(?::only-of-type\b)/,/^(?:::)/,/^(?::)/,/^(?:\\0)/,/^(?:\\9\b)/,/^(?:$)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = grammar;
exports.Parser = grammar.Parser;
exports.parse = function () { return grammar.parse.apply(grammar, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}