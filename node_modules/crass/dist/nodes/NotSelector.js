'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var optimization = require('../optimization');

module.exports = function () {
    /**
     * @constructor
     * @param {SelectorList} selector
     */
    function NotSelector(selector) {
        _classCallCheck(this, NotSelector);

        this.selector = selector;
    }

    /**
     * @return {string}
     */


    _createClass(NotSelector, [{
        key: 'toString',
        value: function toString() {
            return ':not(' + this.selector.toString() + ')';
        }

        /**
         * @param {int} indent
         * @return {string}
         */

    }, {
        key: 'pretty',
        value: function pretty(indent) {
            return ':not(' + this.selector.pretty(indent) + ')';
        }

        /**
         * @param {object} kw
         * @return {NotSelector}
         */

    }, {
        key: 'optimize',
        value: function optimize(kw) {
            this.selector = optimization.try_(this.selector, kw);
            return this;
        }
    }]);

    return NotSelector;
}();