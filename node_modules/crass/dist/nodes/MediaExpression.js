'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var optimization = require('../optimization');

module.exports = function () {
    /**
     * @constructor
     * @param {string} descriptor
     * @param {Expression} value
     * @param {object} ieCrap Flags for IE
     */
    function MediaExpression(descriptor, value, ieCrap) {
        _classCallCheck(this, MediaExpression);

        this.descriptor = descriptor;
        this.value = value;
        this.ieCrap = ieCrap;
    }

    /**
     * @return {string}
     */


    _createClass(MediaExpression, [{
        key: 'toString',
        value: function toString() {
            var descriptor = this.descriptor.toString();
            var slashZero = this.ieCrap.slashZero ? '\\0' : '';
            if (this.value) {
                return '(' + descriptor + ':' + this.value.toString() + slashZero + ')';
            } else {
                return '(' + descriptor + slashZero + ')';
            }
        }

        /**
         * @return {string}
         */

    }, {
        key: 'pretty',
        value: function pretty(indent) {
            var descriptor = this.descriptor.toString();
            var slashZero = this.ieCrap.slashZero ? '\\0' : '';
            if (this.value) {
                return '(' + descriptor + ': ' + this.value.pretty(indent) + slashZero + ')';
            } else {
                return '(' + descriptor + slashZero + ')';
            }
        }

        /**
         * @param {object} kw
         * @return {MediaExpression}
         */

    }, {
        key: 'optimize',
        value: function optimize(kw) {
            this.value = optimization.try_(this.value, kw);
            return this;
        }
    }]);

    return MediaExpression;
}();