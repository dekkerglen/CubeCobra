.cubenav {
	border-right: 1px solid #dee2e6;
	border-left: 1px solid #dee2e6;
}

.usercontrols {
	background-image: linear-gradient(white, #efefef);
	border-right: 1px solid #dee2e6;
	border-left: 1px solid #dee2e6;
	border-bottom: 1px solid #dee2e6;
}

.nav-pills .nav-link.active {
	background-color: #28a745;
}

.nav-pills .nav-link:not(.active) {
	color: #218937;
}

.nav-link:not(.hover) {
	color: #218937;
}

.nav-link.hover {
	color: #218937;
}

@media (max-width: 575.98px) {
	/* only on xs */
	.nav-link {
		padding: 0.375rem 0.5rem;
		font-size: 11pt;
	}
}

.pagination > li > a,
.pagination > li > button {
	background-color: white;
	color: #5a4181;
}

.pagination > li > a:focus,
.pagination > li > a:hover,
.pagination > li > button:focus,
.pagination > li > button:hover,
.pagination > li > span:focus,
.pagination > li > span:hover {
	color: #5a5a5a;
	background-color: #eee;
	border-color: #ddd;
}

.pagination > .active > a,
.pagination > .active > button {
	color: white;
	background-color: #28a745 !important;
	border: solid 1px #28a745 !important;
}

.pagination > .active > a:hover,
.pagination > .active > button:hover {
	background-color: #28a745 !important;
	border: solid 1px #28a745;
}

.editarea {
	overflow: auto;
	max-height: 200px;
}

.filterarea {
	overflow: auto;
	max-height: 250px;
	border: 1px solid #ced4da;
	border-radius: 4px;
	padding: 2px;
}

.list-group.list-outline {
	border: 1px solid #bbb;
	border-radius: 5px;
	margin-bottom: 5px;
	overflow: hidden;
}

.list-group,
.list-group-item {
	display: block;
	border: none;
}

.list-group-item.list-group-heading {
	background-color: #f4f4f4 !important;
	text-align: center;
	color: black;
	text-decoration: none;
	padding: 5px 10px;
	font-size: 9pt;
	font-weight: 600;
	border-bottom: 1px solid #bbb;
	margin-bottom: 0px;
}

.list-group-item.list-group-heading.clickable:hover {
	background-color: #fcfcfc !important;
	color: black;
	text-decoration: none;
}

.card-list-item {
	list-style-type: none;
	transition: 0.25s;
	border-radius: 0 !important;
	cursor: pointer;
	font-size: 8.5pt;

	color: black;
	padding: 3px 4px;
	text-decoration: none;
}

.card-list-item,
.card-list-item .name {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
}

@media (max-width: 1199.98px) {
	/* xs-lg */
	.card-list-item {
		font-size: 8.5pt;
	}
}

@media (max-width: 991.98px) {
	/* xs-md */
	.card-list-heading {
		font-size: 11pt;
	}
	.list-group-item.list-group-heading {
		font-size: 8.5pt;
	}
	.card-list-item {
		font-size: 8pt;
		padding: 2px 4px;
	}
	.table-col {
		flex: 0 0 calc(100% / 8);
		width: calc(100% / 8);
	}
}

@media (max-width: 767.98px) {
	/* xs and sm only */
	.table-col {
		flex: 0 0 calc(100% / 4);
		width: calc(100% / 4);
	}
}

@media (max-width: 459.98px) {
	/* custom breakpoint */
	.table-col {
		flex: 0 0 calc(100% / 3);
		width: calc(100% / 3);
	}
}

@media (max-width: 991.98px) {
	.compressed.table-view.row {
		transform: scale(0.5) translate(-50%, -50%);
		padding: 0;
		margin: 0 -15px;
		width: 200vw;
		overflow: visible;
	}
	.compressed .card-list-heading {
		font-size: 10pt !important;
	}
}

@media (max-width: 649.98px) {
	.compressed .table-col {
		margin-top: 0.375rem !important;
	}
	.compressed .card-list-heading {
		margin-bottom: 0.375rem !important;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	.compressed .list-group-heading {
		padding: 2px 4px;
	}
	.compressed .card-list-item {
		padding: 0 2px;
		text-overflow: clip;
	}
}

.card-list-item button.close {
	font-size: 1rem;
}

.card-list-item button.close span {
	vertical-align: top;
	line-height: 0.9;
}

.card-list-item:hover {
	color: black;
	text-decoration: none;
}

.card-list-item:after {
	content: '';
	display: block;
	height: 100%;
	width: 100%;
	opacity: 0;
	background: rgba(0, 0, 0, 0.1);
	top: 0;
	left: 0;
	position: absolute;
	pointer-events: none;
}

.tag-color.card-list-item:after {
	background: rgba(255, 255, 255, 0.2);
}

.card-list-item:hover:after {
	opacity: 1;
}

.cmc-group:not(:first-of-type) {
	border-top: 1px solid #999;
}

.white {
	border-color: #ffffeb;
	background-color: #ffffeb;
}
.blue {
	border-color: #d4edff;
	background-color: #d4edff;
}
.black {
	border-color: #d6cbd6;
	background-color: #d6cbd6;
}
.red {
	border-color: #ffc8c8;
	background-color: #ffc8c8;
}
.green {
	border-color: #e9ffd4;
	background-color: #e9ffd4;
}
.multi {
	border-color: #fcf8a9;
	background-color: #fcf8a9;
}
.colorless {
	border-color: #e9e7eb;
	background-color: #e9e7eb;
}
.lands {
	border-color: #ffe0c0;
	background-color: #ffe0c0;
}

.dropdown-menu a:focus {
	background-color: #28a745;
	color: white;
}
.dropdown-no-green a:focus {
	background-color: transparent;
	color: #0056b5;
}

.card-price {
	border-radius: 3px;
	padding: 2px;
	margin: 2px;
	border: 1px solid #ced4da;
}

#autocardPopup {
	position: absolute;
	pointer-events: none;
	user-drag: none;
	user-select: none;
	-moz-user-select: none;
	-webkit-user-drag: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	border-radius: 10px;
	overflow: hidden;
}

#autocardPopup img {
	width: 15rem;
}

.autocard-background {
	background-color: #f8f9fa;
	background-clip: content-box;
}

@media (max-width: 767.98px) {
	#autocardPopup {
		display: none !important;
	}
}

/* make autocard text more obvious in comments and descriptions */
.card-text .autocard {
	font-weight: bolder;
	opacity: 0.9; /* hack to lighten the color so bold isn't quite so strong */
}

.form-check {
	border: none;
}

.foilOverlay {
	position: absolute;
	pointer-events: none;
	width: 100%;
	height: 100%;
	mix-blend-mode: multiply;
}

#syntax-accordion .card,
#syntax-accordion {
	width: 100%;
}
#syntax-accordion .collapse,
#syntax-accordion .collapsing {
	padding: 0.75rem 1.25rem;
}
code {
	background: #eee;
}
#syntax-accordion .card-header {
	cursor: pointer;
	transition: 0.25s;
}
#syntax-accordion .card-header:hover {
	background: #dfdfdf;
}
#syntax-accordion .card-header button {
	color: #000;
}

div.ReactTags__tags {
	margin-bottom: -0.3rem;
}

div.ReactTags__tagInput {
	flex: 1 1 5rem;
	margin-bottom: 0.3rem;
}

div.ReactTags__tagInput input.ReactTags__tagInputField,
div.ReactTags__tagInput input.ReactTags__tagInputField:focus {
	width: 100%;
	height: calc(1.5em + 0.5rem + 2px);
	padding: 0.25rem 0.5rem;
	font-size: 0.875rem;
	line-height: 1.5;
	border-radius: 0.2rem;
	font-weight: 400;
	color: #495057;
	background-color: #fff;
	background-clip: padding-box;
	border: 1px solid #ced4da;
	transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

div.ReactTags__selected {
	display: flex;
	flex-wrap: wrap;
	margin: 0;
}

/* Styles for selected tags */
div.ReactTags__selected span.ReactTags__tag {
	border: 1px solid #ced4da;
	background-color: #e9ecef;
	color: #495057;
	display: block;
	padding: 0.25rem 0.5rem;
	margin-right: 0.3rem;
	margin-bottom: 0.3rem;
	border-radius: 2px;
	font-size: 0.875rem;
}
div.ReactTags__selected a.ReactTags__remove {
	color: #aaa;
	margin-left: 5px;
	cursor: pointer;
}

/* Styles for suggestions */
div.ReactTags__suggestions {
	position: absolute;
}
div.ReactTags__suggestions ul {
	list-style-type: none;
	box-shadow: 0.05em 0.01em 0.5em rgba(0, 0, 0, 0.2);
	background: white;
	width: 200px;
}
div.ReactTags__suggestions li {
	border-bottom: 1px solid #ddd;
	padding: 5px 10px;
	margin: 0;
}
div.ReactTags__suggestions li mark {
	text-decoration: underline;
	background: none;
	font-weight: 600;
}
div.ReactTags__suggestions ul li.ReactTags__activeSuggestion {
	background: #b7cfe0;
	cursor: pointer;
}

/* Fix z-index on sortables. */
.sortable-item {
	z-index: 10000 !important;
}

.clickable {
	cursor: pointer;
}

/* Give cards sharp borders. */
div.card {
	box-shadow: 2px 2px 6px 0 rgba(0, 0, 0, 0.06);
	border-radius: 0px;
}

body.busy-cursor {
	cursor: progress;
}

.centered-max400 {
	margin: auto;
	max-width: 400px;
}

.cube-preview-image {
	width: 100%;
	height: auto;
}

.deck-preview {
	padding: 1rem 1.25rem;
	border-top: 1px solid #dee2e6;
}

.deck-preview:first-child {
	border-top: none;
}

.deck-preview:hover {
	background: #efefef;
	cursor: pointer;
}

.no-underline-hover:hover {
	text-decoration: none;
}

/* Styles for Analysis */

.breakdown .percent {
	display: inline-block;
	font-size: 0.875rem;
	color: #535a5f;
	margin-left: 0.5em;
}
.breakdown .percent::before {
	content: '(';
}
.breakdown .percent::after {
	content: ')';
}
.cube-preview-card {
	width: 100%;
}
.cube-preview-card.hover {
	background: #efefef;
	cursor: pointer;
	border: 1px solid #000000;
}
.cube-preview-element {
	height: 73%;
}
.cube-preview-artist {
	font-size: small;
	position: absolute;
	bottom: 0;
	right: 2px;
	color: white;
	text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}
.notification-icon {
	background: #9a9d90;
}

.nav-item:hover .notification-icon {
	background: #cccecf;
}
.nav-item:focus .notification-icon {
	background: white;
}

.notification-scrollarea {
	max-height: 60vh;
	min-width: 40vh;
	overflow-y: auto;
}

.user-notification {
	border-top: 1px solid #dee2e6;
}

.user-notification:hover {
	background: #efefef;
}
.comment-highlighted {
	background: #ecf4e3;
}

.profile-thumbnail {
	border-radius: 50%;
	object-fit: cover;
	width: 60px;
	height: 60px;
	float: left;
	box-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}

.table-view.row {
	margin: 0 -2px;
}

.table-view .table-col {
	padding: 0 2px;
}

@media (max-width: 991.98px) {
	/* On screens where not all columns display at once, scroll cubes horizontally. */
	.table-view-container {
		/* Size to viewport. Have to do this so that scroll displays to edge of screen. */
		overflow: hidden;
		width: 100vw;
		padding: 0 calc(50vw - 50%);
		margin: -0.5rem calc(-50vw + 50%) 0rem;
	}

	.table-view.row {
		overflow: auto;
		flex-wrap: nowrap;
		padding: 0 calc(50vw - 50% - 2px);
		margin: 0 calc(-50vw + 50%);
	}

	.table-view.row:after {
		content: '';
		min-width: calc(50vw - 50% - 2px);
		height: 1px;
	}
}

.text-ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.card-border {
	border-radius: 4.72% / 3.37%;
}

@media (min-width: 768px) {
	.col-md-1-5 {
		flex: 0 0 12.5%;
		max-width: 12.5%;
	}

	.col-md-1-4285 {
		flex: 0 0 14.285%;
		max-width: 14.285%;
	}
}

.input-group-prepend + .input-group-append > .color-check-button {
	border-left: 0;
}

.color-check-button {
	border-color: #ced4da !important;
	padding: 0 0.5rem;
}

.color-check-button.active,
.color-check-button:hover {
	border-color: #ced4da !important;
	background-color: #e9ecef !important;
}

img.mana-symbol {
	height: 1.8rem;
}

.square-left {
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}

.square-right {
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}

.col-low-padding {
	padding: 0 2px;
}

.row-low-padding {
	margin: 0 -2px;
}

.list-view-table td {
	vertical-align: middle;
}

.font-weight-boldish {
	font-weight: 600;
}

.icon-button {
	appearance: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	padding: 0;
	border: 0;
	background-color: transparent;
	font-weight: 700;
	line-height: 1;
	font-size: 1rem;
	text-shadow: 0 1px 0 #fff;
	opacity: 0.5;
}

.icon-button:hover {
	opacity: 1;
}

.icon-button span {
	vertical-align: top;
	line-height: 0.9;	
}

@media (min-width: 768px) {
	.col-seventh {
		flex: 0 0 calc(100% / 7);
		max-width: calc(100% / 7);
	}
}

.InfiniteCarouselFrame {
}

.InfiniteCarouselArrowNextIcon {    
	border: solid #000000 !important;
    border-width: 0 5px 5px 0 !important;
}
.InfiniteCarouselArrowPrevIcon {    
	border: solid #000000 !important;
    border-width: 0 5px 5px 0 !important;
}

.InfiniteCarouselArrow {
	background-color: #ffffff !important;
	right: 0px !important;
	left: auto !important;
	height: 100% !important;
	border: solid #DFDFDF !important;
	border-width: 1px 1px 1px 1px !important;
	padding-right: 10px;
	padding-left: 10px;
}
.InfiniteCarouselArrowPrev {
	left: 0px !important;
}
.InfiniteCarouselArrow:hover {
	background-color: #F7F7F7 !important;
}

.textButton {
	background: none!important;
	border: none;
	padding: 0!important;
	/*optional*/
	font-family: arial, sans-serif;
	/*input has OS specific font-family*/
	color: #069;
	text-decoration: underline;
	cursor: pointer;
  }

  .noBreak {
	white-space: nowrap;
  }